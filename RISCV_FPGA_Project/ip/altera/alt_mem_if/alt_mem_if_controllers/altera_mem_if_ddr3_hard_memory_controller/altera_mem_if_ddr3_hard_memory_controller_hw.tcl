# (C) 2001-2013 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License Subscription 
# Agreement, Altera MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# TCL File Generated by Component Editor 11.0
# Thu Oct 07 16:58:41 EDT 2010
# DO NOT MODIFY

# +-----------------------------------
# Required header to put the alt_mem_if TCL packages on the TCL path
set alt_mem_if_tcl_libs_dir "$env(QUARTUS_ROOTDIR)/../ip/altera/alt_mem_if/alt_mem_if_tcl_packages"
if {[lsearch -exact $auto_path $alt_mem_if_tcl_libs_dir] == -1} {
	lappend auto_path $alt_mem_if_tcl_libs_dir
}
# +-----------------------------------

# +-----------------------------------
# |
# | altera_mem_if_ddr3_hard_memory_controller "Altera DDR3 Hard Memory Controller" v1.0
# | Altera Corporation 2010.10.07.16:58:41
# | Altera DDR3 Hard Memory Controller
# |
# |
# +-----------------------------------

# +-----------------------------------
# | request TCL package from ACDS 12.0
# |
package require -exact qsys 12.0

# Require alt_mem_if TCL packages
package require alt_mem_if::util::messaging
package require alt_mem_if::util::profiling
package require alt_mem_if::gui::common_ddr_mem_model
package require alt_mem_if::gui::uniphy_controller_phy
package require alt_mem_if::gui::ddrx_controller
package require alt_mem_if::gui::afi
package require alt_mem_if::gui::system_info
package require alt_mem_if::gen::uniphy_interfaces
package require alt_mem_if::util::hwtcl_utils
package require alt_mem_if::util::qini
package require alt_mem_if::util::iptclgen


# Function Imports
namespace import ::alt_mem_if::util::messaging::*

# |
# +-----------------------------------

# +-----------------------------------
# |
set_module_property DESCRIPTION "Altera DDR3 Hard Memory Controller"
set_module_property NAME altera_mem_if_ddr3_hard_memory_controller
set_module_property VERSION 13.1
::alt_mem_if::util::hwtcl_utils::set_module_internal_mode
set_module_property OPAQUE_ADDRESS_MAP true
set_module_property GROUP [::alt_mem_if::util::hwtcl_utils::memory_controller_group_name]
set_module_property AUTHOR "Altera Corporation"
set_module_property DISPLAY_NAME "Altera DDR3 Hard Memory Controller"
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE true
set_module_property ANALYZE_HDL TRUE
# |
# +-----------------------------------

# Hide the block diagram
add_display_item "" "Block Diagram" GROUP


# +-----------------------------------
# | Fileset Callbacks
# |
add_fileset sim_vhdl SIM_VHDL generate_vhdl_sim
add_fileset sim_verilog SIM_VERILOG generate_verilog_sim
add_fileset quartus_synth QUARTUS_SYNTH generate_synth

proc solve_core_params {} {
	set core_params_list [list]
	if {[string compare -nocase [get_parameter_value PARSE_FRIENDLY_DEVICE_FAMILY] "ARRIAV"] == 0} {
		lappend core_params_list "ARRIAV"
	} elseif {[string compare -nocase [get_parameter_value PARSE_FRIENDLY_DEVICE_FAMILY] "CYCLONEV"] == 0} {
		lappend core_params_list "CYCLONEV"
	}

	return $core_params_list
}

proc generate_verilog_fileset {} {

        if {[::alt_mem_if::util::qini::cfg_is_on uniphy_generate_ice_rtl]} {
	        # Input list of source files
	        set source_files_list [list \
                hmctl/hmctl_async_fifo/hmctl_async_fifo.v \
                hmctl/hmctl_async_fifo/hmctl_fifo_memory.v \
                hmctl/hmctl_async_fifo/hmctl_rd_logic.v \
                hmctl/hmctl_async_fifo/hmctl_synchronizer.v \
                hmctl/hmctl_async_fifo/hmctl_wr_logic.v \
                hmctl/hmctl_bonding/hmctl_bonding.v \
                hmctl/hmctl_bonding/hmctl_bonding_port.v \
                hmctl/hmctl_bonding/hmctl_bonding_read.v \
                hmctl/hmctl_bonding/hmctl_bonding_write.v \
                hmctl/hmctl_cmd_path/hmctl_cmd_path.v \
                hmctl/hmctl_cmd_path/hmctl_cmd_rdwr_itf.v \
                hmctl/hmctl_cmd_path/hmctl_next_burst_mux.v \
                hmctl/hmctl_cmd_path/hmctl_port_cmd_path.v \
                hmctl/hmctl_cmd_path/hmctl_weight_search.v \
                hmctl/hmctl_cmd_path/hmctl_wr_ack.v \
                hmctl/hmctl_common/ecosaver_tsmc28lp.v \
                hmctl/hmctl_dft/hmctl_dft.v \
                hmctl/hmctl_dfx/hmctl_dfx.v \
                hmctl/hmctl_dummy/hmctl_dummy.v \
                hmctl/hmctl_mm_st_conv/hmctl_axi_convert.v \
                hmctl/hmctl_mm_st_conv/hmctl_mm_split.v \
                hmctl/hmctl_read_path/hmctl_read_path.v \
                hmctl/hmctl_regctrl/hd_dpcmn_dprio_csr_reg_bit.v \
                hmctl/hmctl_regctrl/hd_dpcmn_dprio_csr_reg_nbits.v \
                hmctl/hmctl_regctrl/hmctl_debug.v \
                hmctl/hmctl_regctrl/hmctl_register_control.v \
                hmctl/hmctl_regctrl/hmctl_register_control_top.v \
                hmctl/hmctl_reset/hmctl_reset_logic.v \
                hmctl/hmctl_reset/hmctl_reset_top.v \
                hmctl/hmctl_sideband/hmctl_sideband.v \
                hmctl/hmctl_write_path/hmctl_avalon_port.v \
                hmctl/hmctl_write_path/hmctl_fifo_x16_tracker.v \
                hmctl/hmctl_write_path/hmctl_port_ready_mapper.v \
                hmctl/hmctl_write_path/hmctl_write_data_reader.v \
                hmctl/hmctl_write_path/hmctl_write_path.v \
                hmctl/hmctl_write_path/hmctl_write_port.v \
                hmctl/hmctl_a5_mpfe_top.v \
                rtl/alt_mem_ddrx_afi_if/alt_mem_ddrx_addr_cmd.v \
                rtl/alt_mem_ddrx_afi_if/alt_mem_ddrx_addr_cmd_wrap.v \
                rtl/alt_mem_ddrx_afi_if/alt_mem_ddrx_ddr2_odt_gen.v \
                rtl/alt_mem_ddrx_afi_if/alt_mem_ddrx_ddr3_odt_gen.v \
                rtl/alt_mem_ddrx_afi_if/alt_mem_ddrx_lpddr2_addr_cmd.v \
                rtl/alt_mem_ddrx_afi_if/alt_mem_ddrx_odt_gen.v \
                rtl/alt_mem_ddrx_afi_if/alt_mem_ddrx_rdwr_data_tmg.v \
                rtl/alt_mem_ddrx_arbiter/alt_mem_ddrx_arbiter.v \
                rtl/alt_mem_ddrx_burst_gen/alt_mem_ddrx_burst_gen.v \
                rtl/alt_mem_ddrx_cmd_gen/alt_mem_ddrx_cmd_gen.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_buffer.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_buffer_manager.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_burst_tracking.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_dataid_manager.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_fifo.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_list.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_rdata_path.v \
                rtl/alt_mem_ddrx_data_path/alt_mem_ddrx_wdata_path.v \
                rtl/alt_mem_ddrx_define/alt_mem_ddrx_define.v \
                rtl/alt_mem_ddrx_ecc/alt_mem_ddrx_ecc_decoder.v \
                rtl/alt_mem_ddrx_ecc/alt_mem_ddrx_ecc_decoder_32_syn.v \
                rtl/alt_mem_ddrx_ecc/alt_mem_ddrx_ecc_decoder_64_syn.v \
                rtl/alt_mem_ddrx_ecc/alt_mem_ddrx_ecc_encoder.v \
                rtl/alt_mem_ddrx_ecc/alt_mem_ddrx_ecc_encoder_32_syn.v \
                rtl/alt_mem_ddrx_ecc/alt_mem_ddrx_ecc_encoder_64_syn.v \
                rtl/alt_mem_ddrx_ecc/alt_mem_ddrx_ecc_encoder_decoder_wrapper.v \
                rtl/alt_mem_ddrx_input_if/alt_mem_ddrx_input_if.v \
                rtl/alt_mem_ddrx_mm_st_converter/alt_mem_ddrx_mm_st_converter.v \
                rtl/alt_mem_ddrx_rank_timer/alt_mem_ddrx_rank_timer.v \
                rtl/alt_mem_ddrx_register_control/alt_mem_ddrx_register_control.v \
                rtl/alt_mem_ddrx_sideband/alt_mem_ddrx_sideband.v \
                rtl/alt_mem_ddrx_tbp/alt_mem_ddrx_tbp.v \
                rtl/alt_mem_ddrx_timing_param/alt_mem_ddrx_timing_param.v \
                rtl/alt_mem_ddrx_top_hip_arria5/alt_mem_ddrx_top_hip_arria5.v \
                top/hm_hmc_32.v
	        ]
        } else {
                set source_files_list [list ]
        }

	# Return all files
	return $source_files_list
}


proc generate_vhdl_sim {name} {
	_dprint 1 "Preparing to generate Verilog simulation fileset for $name"

	set non_encryp_simulators [::alt_mem_if::util::hwtcl_utils::get_simulator_attributes 1]

	foreach file_name [generate_verilog_fileset] {
		_dprint 1 "Preparing to add $file_name"

		# Return the normal verilog file for dual language simulators
		add_fileset_file [file tail $file_name] [::alt_mem_if::util::hwtcl_utils::get_file_type $file_name] PATH [file join .. altera_mem_if_hard_memory_controller temp $file_name] $non_encryp_simulators

		# Return the mentor tagged files
		add_fileset_file [file join mentor [file tail $file_name]] [::alt_mem_if::util::hwtcl_utils::get_file_type $file_name] PATH [file join .. altera_mem_if_hard_memory_controller mentor $file_name] {MENTOR_SPECIFIC}
	}

	# Add the toplevel
	set generated_file [alt_mem_if::util::iptclgen::generate_outfile_name "altera_mem_if_hard_memory_controller_top.sv" [solve_core_params] ]
	add_fileset_file [file join mentor $generated_file] SYSTEM_VERILOG_ENCRYPT PATH [file join .. altera_mem_if_hard_memory_controller mentor $generated_file] {MENTOR_SPECIFIC}
	add_fileset_file $generated_file SYSTEM_VERILOG PATH [file join .. altera_mem_if_hard_memory_controller $generated_file] $non_encryp_simulators


}

proc generate_verilog_sim {name} {
	_dprint 1 "Preparing to generate Verilog simulation fileset for $name"

	foreach file_name [generate_verilog_fileset] {
		_dprint 1 "Preparing to add $file_name"
		add_fileset_file [file tail $file_name] [::alt_mem_if::util::hwtcl_utils::get_file_type $file_name] PATH [file join .. altera_mem_if_hard_memory_controller temp $file_name]
	}

	# Add the toplevel
	set generated_file [alt_mem_if::util::iptclgen::generate_outfile_name "altera_mem_if_hard_memory_controller_top.sv" [solve_core_params] ]
	add_fileset_file $generated_file SYSTEM_VERILOG PATH [file join .. altera_mem_if_hard_memory_controller $generated_file]


}

proc generate_synth {name} {
	_dprint 1 "Preparing to generate synthesis fileset for $name"

	foreach file_name [generate_verilog_fileset] {
		_dprint 1 "Preparing to add $file_name"
		add_fileset_file [file tail $file_name] [::alt_mem_if::util::hwtcl_utils::get_file_type $file_name 0] PATH [file join .. altera_mem_if_hard_memory_controller temp $file_name]
	}

	# Add the toplevel
	set generated_file [alt_mem_if::util::iptclgen::generate_outfile_name "altera_mem_if_hard_memory_controller_top.sv" [solve_core_params] ]
	add_fileset_file $generated_file SYSTEM_VERILOG PATH [file join .. altera_mem_if_hard_memory_controller $generated_file]

}
# |
# +-----------------------------------

# +-----------------------------------
# | parameters
# |
add_parameter MAX_PENDING_READ_TRANSACTION INTEGER 16
set_parameter_property MAX_PENDING_READ_TRANSACTION UNITS None
set_parameter_property MAX_PENDING_READ_TRANSACTION ALLOWED_RANGES 0:1024
set_parameter_property MAX_PENDING_READ_TRANSACTION DERIVED True

# |
# +-----------------------------------

# +-----------------------------------
# | Helper functions
# |
proc create_hdl_parameters {} {

	_dprint 1 "Defining HDL parameters for Hard controller"

	set_parameter_property HARD_PHY HDL_PARAMETER true

	set_parameter_property AVL_SIZE_WIDTH HDL_PARAMETER true
	set_parameter_property AVL_ADDR_WIDTH HDL_PARAMETER true
	set_parameter_property AVL_DATA_WIDTH HDL_PARAMETER true
	set_parameter_property MEM_IF_CLK_PAIR_COUNT HDL_PARAMETER true
	set_parameter_property MEM_IF_CS_WIDTH HDL_PARAMETER true
	set_parameter_property MEM_IF_DQS_WIDTH HDL_PARAMETER true
	set_parameter_property MEM_IF_CHIP_BITS HDL_PARAMETER true
	set_parameter_property AFI_ADDR_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_BANKADDR_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_CONTROL_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_CS_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_ODT_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_DM_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_DQ_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_WRITE_DQS_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_RATE_RATIO HDL_PARAMETER true
	set_parameter_property AFI_WLAT_WIDTH HDL_PARAMETER true
	set_parameter_property AFI_RLAT_WIDTH HDL_PARAMETER true
	set_parameter_property CSR_BE_WIDTH HDL_PARAMETER true
	set_parameter_property CSR_ADDR_WIDTH HDL_PARAMETER true
	set_parameter_property CSR_DATA_WIDTH HDL_PARAMETER true

	# HMC New
	set_parameter_property AVL_DATA_WIDTH_PORT_0 HDL_PARAMETER true
	set_parameter_property AVL_DATA_WIDTH_PORT_1 HDL_PARAMETER true
	set_parameter_property AVL_DATA_WIDTH_PORT_2 HDL_PARAMETER true
	set_parameter_property AVL_DATA_WIDTH_PORT_3 HDL_PARAMETER true
	set_parameter_property AVL_DATA_WIDTH_PORT_4 HDL_PARAMETER true
	set_parameter_property AVL_DATA_WIDTH_PORT_5 HDL_PARAMETER true
	set_parameter_property AVL_ADDR_WIDTH_PORT_0 HDL_PARAMETER true
	set_parameter_property AVL_ADDR_WIDTH_PORT_1 HDL_PARAMETER true
	set_parameter_property AVL_ADDR_WIDTH_PORT_2 HDL_PARAMETER true
	set_parameter_property AVL_ADDR_WIDTH_PORT_3 HDL_PARAMETER true
	set_parameter_property AVL_ADDR_WIDTH_PORT_4 HDL_PARAMETER true
	set_parameter_property AVL_ADDR_WIDTH_PORT_5 HDL_PARAMETER true
	set_parameter_property AVL_NUM_SYMBOLS_PORT_0 HDL_PARAMETER true
	set_parameter_property AVL_NUM_SYMBOLS_PORT_1 HDL_PARAMETER true
	set_parameter_property AVL_NUM_SYMBOLS_PORT_2 HDL_PARAMETER true
	set_parameter_property AVL_NUM_SYMBOLS_PORT_3 HDL_PARAMETER true
	set_parameter_property AVL_NUM_SYMBOLS_PORT_4 HDL_PARAMETER true
	set_parameter_property AVL_NUM_SYMBOLS_PORT_5 HDL_PARAMETER true
	set_parameter_property LSB_WFIFO_PORT_0 HDL_PARAMETER true
	set_parameter_property MSB_WFIFO_PORT_0 HDL_PARAMETER true
	set_parameter_property LSB_RFIFO_PORT_0 HDL_PARAMETER true
	set_parameter_property MSB_RFIFO_PORT_0 HDL_PARAMETER true
	set_parameter_property LSB_WFIFO_PORT_1 HDL_PARAMETER true
	set_parameter_property MSB_WFIFO_PORT_1 HDL_PARAMETER true
	set_parameter_property LSB_RFIFO_PORT_1 HDL_PARAMETER true
	set_parameter_property MSB_RFIFO_PORT_1 HDL_PARAMETER true
	set_parameter_property LSB_WFIFO_PORT_2 HDL_PARAMETER true
	set_parameter_property MSB_WFIFO_PORT_2 HDL_PARAMETER true
	set_parameter_property LSB_RFIFO_PORT_2 HDL_PARAMETER true
	set_parameter_property MSB_RFIFO_PORT_2 HDL_PARAMETER true
	set_parameter_property LSB_WFIFO_PORT_3 HDL_PARAMETER true
	set_parameter_property MSB_WFIFO_PORT_3 HDL_PARAMETER true
	set_parameter_property LSB_RFIFO_PORT_3 HDL_PARAMETER true
	set_parameter_property MSB_RFIFO_PORT_3 HDL_PARAMETER true
	set_parameter_property LSB_WFIFO_PORT_4 HDL_PARAMETER true
	set_parameter_property MSB_WFIFO_PORT_4 HDL_PARAMETER true
	set_parameter_property LSB_RFIFO_PORT_4 HDL_PARAMETER true
	set_parameter_property MSB_RFIFO_PORT_4 HDL_PARAMETER true
	set_parameter_property LSB_WFIFO_PORT_5 HDL_PARAMETER true
	set_parameter_property MSB_WFIFO_PORT_5 HDL_PARAMETER true
	set_parameter_property LSB_RFIFO_PORT_5 HDL_PARAMETER true
	set_parameter_property MSB_RFIFO_PORT_5 HDL_PARAMETER true

	set_parameter_property ENUM_ATTR_COUNTER_ONE_RESET HDL_PARAMETER true
	set_parameter_property ENUM_ATTR_COUNTER_ZERO_RESET HDL_PARAMETER true
	set_parameter_property ENUM_ATTR_STATIC_CONFIG_VALID HDL_PARAMETER true
	set_parameter_property ENUM_AUTO_PCH_ENABLE_0 HDL_PARAMETER true
	set_parameter_property ENUM_AUTO_PCH_ENABLE_1 HDL_PARAMETER true
	set_parameter_property ENUM_AUTO_PCH_ENABLE_2 HDL_PARAMETER true
	set_parameter_property ENUM_AUTO_PCH_ENABLE_3 HDL_PARAMETER true
	set_parameter_property ENUM_AUTO_PCH_ENABLE_4 HDL_PARAMETER true
	set_parameter_property ENUM_AUTO_PCH_ENABLE_5 HDL_PARAMETER true
	set_parameter_property ENUM_CAL_REQ HDL_PARAMETER true
	set_parameter_property ENUM_CFG_BURST_LENGTH HDL_PARAMETER true
	set_parameter_property ENUM_CFG_INTERFACE_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_CFG_SELF_RFSH_EXIT_CYCLES HDL_PARAMETER true
	set_parameter_property ENUM_CFG_STARVE_LIMIT HDL_PARAMETER true
	set_parameter_property ENUM_CFG_TYPE HDL_PARAMETER true
	set_parameter_property ENUM_CLOCK_OFF_0 HDL_PARAMETER true
	set_parameter_property ENUM_CLOCK_OFF_1 HDL_PARAMETER true
	set_parameter_property ENUM_CLOCK_OFF_2 HDL_PARAMETER true
	set_parameter_property ENUM_CLOCK_OFF_3 HDL_PARAMETER true
	set_parameter_property ENUM_CLOCK_OFF_4 HDL_PARAMETER true
	set_parameter_property ENUM_CLOCK_OFF_5 HDL_PARAMETER true
	set_parameter_property ENUM_CLR_INTR HDL_PARAMETER true
	set_parameter_property ENUM_CMD_PORT_IN_USE_0 HDL_PARAMETER true
	set_parameter_property ENUM_CMD_PORT_IN_USE_1 HDL_PARAMETER true
	set_parameter_property ENUM_CMD_PORT_IN_USE_2 HDL_PARAMETER true
	set_parameter_property ENUM_CMD_PORT_IN_USE_3 HDL_PARAMETER true
	set_parameter_property ENUM_CMD_PORT_IN_USE_4 HDL_PARAMETER true
	set_parameter_property ENUM_CMD_PORT_IN_USE_5 HDL_PARAMETER true
	set_parameter_property ENUM_CPORT0_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_CPORT0_RFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT0_TYPE HDL_PARAMETER true
	set_parameter_property ENUM_CPORT0_WFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT1_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_CPORT1_RFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT1_TYPE HDL_PARAMETER true
	set_parameter_property ENUM_CPORT1_WFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT2_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_CPORT2_RFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT2_TYPE HDL_PARAMETER true
	set_parameter_property ENUM_CPORT2_WFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT3_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_CPORT3_RFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT3_TYPE HDL_PARAMETER true
	set_parameter_property ENUM_CPORT3_WFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT4_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_CPORT4_RFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT4_TYPE HDL_PARAMETER true
	set_parameter_property ENUM_CPORT4_WFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT5_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_CPORT5_RFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CPORT5_TYPE HDL_PARAMETER true
	set_parameter_property ENUM_CPORT5_WFIFO_MAP HDL_PARAMETER true
	set_parameter_property ENUM_CTL_ADDR_ORDER HDL_PARAMETER true
	set_parameter_property ENUM_CTL_ECC_ENABLED HDL_PARAMETER true
	set_parameter_property ENUM_CTL_ECC_RMW_ENABLED HDL_PARAMETER true
	set_parameter_property ENUM_CTL_REGDIMM_ENABLED HDL_PARAMETER true
	set_parameter_property ENUM_CTL_USR_REFRESH HDL_PARAMETER true
	set_parameter_property ENUM_CTRL_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_DELAY_BONDING HDL_PARAMETER true
	set_parameter_property ENUM_DFX_BYPASS_ENABLE HDL_PARAMETER true
	set_parameter_property ENUM_DISABLE_MERGING HDL_PARAMETER true
	set_parameter_property ENUM_ECC_DQ_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_ATPG HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BONDING_0 HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BONDING_1 HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BONDING_2 HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BONDING_3 HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BONDING_4 HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BONDING_5 HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BONDING_WRAPBACK HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_DQS_TRACKING HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_ECC_CODE_OVERWRITES HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_FAST_EXIT_PPD HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_INTR HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_NO_DM HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_PIPELINEGLOBAL HDL_PARAMETER true
	set_parameter_property ENUM_GANGED_ARF HDL_PARAMETER true
	set_parameter_property ENUM_GEN_DBE HDL_PARAMETER true
	set_parameter_property ENUM_GEN_SBE HDL_PARAMETER true
	set_parameter_property ENUM_INC_SYNC HDL_PARAMETER true
	set_parameter_property ENUM_LOCAL_IF_CS_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_MASK_CORR_DROPPED_INTR HDL_PARAMETER true
	set_parameter_property ENUM_MASK_DBE_INTR HDL_PARAMETER true
	set_parameter_property ENUM_MASK_SBE_INTR HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_AL HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_BANKADDR_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_BURSTLENGTH HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_COLADDR_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_CS_PER_RANK HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_CS_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_DQ_PER_CHIP HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_DQS_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_DWIDTH HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_MEMTYPE HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_ROWADDR_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_SPEEDBIN HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TCCD HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TCL HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TCWL HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TFAW HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TMRD HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TRAS HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TRC HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TRCD HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TRP HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TRRD HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TRTP HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TWR HDL_PARAMETER true
	set_parameter_property ENUM_MEM_IF_TWTR HDL_PARAMETER true
	set_parameter_property ENUM_MMR_CFG_MEM_BL HDL_PARAMETER true
	set_parameter_property ENUM_OUTPUT_REGD HDL_PARAMETER true
	set_parameter_property ENUM_PDN_EXIT_CYCLES HDL_PARAMETER true
	set_parameter_property ENUM_PORT0_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_PORT1_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_PORT2_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_PORT3_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_PORT4_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_PORT5_WIDTH HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_0_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_0_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_0_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_0_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_0_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_0_5 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_1_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_1_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_1_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_1_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_1_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_1_5 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_2_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_2_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_2_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_2_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_2_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_2_5 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_3_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_3_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_3_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_3_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_3_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_3_5 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_4_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_4_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_4_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_4_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_4_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_4_5 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_5_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_5_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_5_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_5_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_5_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_5_5 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_6_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_6_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_6_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_6_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_6_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_6_5 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_7_0 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_7_1 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_7_2 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_7_3 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_7_4 HDL_PARAMETER true
	set_parameter_property ENUM_PRIORITY_7_5 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_STATIC_WEIGHT_0 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_STATIC_WEIGHT_1 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_STATIC_WEIGHT_2 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_STATIC_WEIGHT_3 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_STATIC_WEIGHT_4 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_STATIC_WEIGHT_5 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_USER_PRIORITY_0 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_USER_PRIORITY_1 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_USER_PRIORITY_2 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_USER_PRIORITY_3 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_USER_PRIORITY_4 HDL_PARAMETER true
	set_parameter_property ENUM_RCFG_USER_PRIORITY_5 HDL_PARAMETER true
	set_parameter_property ENUM_RD_DWIDTH_0 HDL_PARAMETER true
	set_parameter_property ENUM_RD_DWIDTH_1 HDL_PARAMETER true
	set_parameter_property ENUM_RD_DWIDTH_2 HDL_PARAMETER true
	set_parameter_property ENUM_RD_DWIDTH_3 HDL_PARAMETER true
	set_parameter_property ENUM_RD_DWIDTH_4 HDL_PARAMETER true
	set_parameter_property ENUM_RD_DWIDTH_5 HDL_PARAMETER true
	set_parameter_property ENUM_RD_FIFO_IN_USE_0 HDL_PARAMETER true
	set_parameter_property ENUM_RD_FIFO_IN_USE_1 HDL_PARAMETER true
	set_parameter_property ENUM_RD_FIFO_IN_USE_2 HDL_PARAMETER true
	set_parameter_property ENUM_RD_FIFO_IN_USE_3 HDL_PARAMETER true
	set_parameter_property ENUM_RD_PORT_INFO_0 HDL_PARAMETER true
	set_parameter_property ENUM_RD_PORT_INFO_1 HDL_PARAMETER true
	set_parameter_property ENUM_RD_PORT_INFO_2 HDL_PARAMETER true
	set_parameter_property ENUM_RD_PORT_INFO_3 HDL_PARAMETER true
	set_parameter_property ENUM_RD_PORT_INFO_4 HDL_PARAMETER true
	set_parameter_property ENUM_RD_PORT_INFO_5 HDL_PARAMETER true
	set_parameter_property ENUM_READ_ODT_CHIP HDL_PARAMETER true
	set_parameter_property ENUM_REORDER_DATA HDL_PARAMETER true
	set_parameter_property ENUM_RFIFO0_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_RFIFO1_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_RFIFO2_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_RFIFO3_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_SINGLE_READY_0 HDL_PARAMETER true
	set_parameter_property ENUM_SINGLE_READY_1 HDL_PARAMETER true
	set_parameter_property ENUM_SINGLE_READY_2 HDL_PARAMETER true
	set_parameter_property ENUM_SINGLE_READY_3 HDL_PARAMETER true
	set_parameter_property ENUM_STATIC_WEIGHT_0 HDL_PARAMETER true
	set_parameter_property ENUM_STATIC_WEIGHT_1 HDL_PARAMETER true
	set_parameter_property ENUM_STATIC_WEIGHT_2 HDL_PARAMETER true
	set_parameter_property ENUM_STATIC_WEIGHT_3 HDL_PARAMETER true
	set_parameter_property ENUM_STATIC_WEIGHT_4 HDL_PARAMETER true
	set_parameter_property ENUM_STATIC_WEIGHT_5 HDL_PARAMETER true
	set_parameter_property ENUM_SYNC_MODE_0 HDL_PARAMETER true
	set_parameter_property ENUM_SYNC_MODE_1 HDL_PARAMETER true
	set_parameter_property ENUM_SYNC_MODE_2 HDL_PARAMETER true
	set_parameter_property ENUM_SYNC_MODE_3 HDL_PARAMETER true
	set_parameter_property ENUM_SYNC_MODE_4 HDL_PARAMETER true
	set_parameter_property ENUM_SYNC_MODE_5 HDL_PARAMETER true
	set_parameter_property ENUM_TEST_MODE HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR1_0 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR1_1 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR1_2 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR1_3 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR1_4 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR1_5 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR2_0 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR2_1 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR2_2 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR2_3 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR2_4 HDL_PARAMETER true
	set_parameter_property ENUM_THLD_JAR2_5 HDL_PARAMETER true
	set_parameter_property ENUM_USE_ALMOST_EMPTY_0 HDL_PARAMETER true
	set_parameter_property ENUM_USE_ALMOST_EMPTY_1 HDL_PARAMETER true
	set_parameter_property ENUM_USE_ALMOST_EMPTY_2 HDL_PARAMETER true
	set_parameter_property ENUM_USE_ALMOST_EMPTY_3 HDL_PARAMETER true
	set_parameter_property ENUM_USER_ECC_EN HDL_PARAMETER true
	set_parameter_property ENUM_USER_PRIORITY_0 HDL_PARAMETER true
	set_parameter_property ENUM_USER_PRIORITY_1 HDL_PARAMETER true
	set_parameter_property ENUM_USER_PRIORITY_2 HDL_PARAMETER true
	set_parameter_property ENUM_USER_PRIORITY_3 HDL_PARAMETER true
	set_parameter_property ENUM_USER_PRIORITY_4 HDL_PARAMETER true
	set_parameter_property ENUM_USER_PRIORITY_5 HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO0_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO0_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO1_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO1_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO2_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO2_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO3_CPORT_MAP HDL_PARAMETER true
	set_parameter_property ENUM_WFIFO3_RDY_ALMOST_FULL HDL_PARAMETER true
	set_parameter_property ENUM_WR_DWIDTH_0 HDL_PARAMETER true
	set_parameter_property ENUM_WR_DWIDTH_1 HDL_PARAMETER true
	set_parameter_property ENUM_WR_DWIDTH_2 HDL_PARAMETER true
	set_parameter_property ENUM_WR_DWIDTH_3 HDL_PARAMETER true
	set_parameter_property ENUM_WR_DWIDTH_4 HDL_PARAMETER true
	set_parameter_property ENUM_WR_DWIDTH_5 HDL_PARAMETER true
	set_parameter_property ENUM_WR_FIFO_IN_USE_0 HDL_PARAMETER true
	set_parameter_property ENUM_WR_FIFO_IN_USE_1 HDL_PARAMETER true
	set_parameter_property ENUM_WR_FIFO_IN_USE_2 HDL_PARAMETER true
	set_parameter_property ENUM_WR_FIFO_IN_USE_3 HDL_PARAMETER true
	set_parameter_property ENUM_WR_PORT_INFO_0 HDL_PARAMETER true
	set_parameter_property ENUM_WR_PORT_INFO_1 HDL_PARAMETER true
	set_parameter_property ENUM_WR_PORT_INFO_2 HDL_PARAMETER true
	set_parameter_property ENUM_WR_PORT_INFO_3 HDL_PARAMETER true
	set_parameter_property ENUM_WR_PORT_INFO_4 HDL_PARAMETER true
	set_parameter_property ENUM_WR_PORT_INFO_5 HDL_PARAMETER true
	set_parameter_property ENUM_WRITE_ODT_CHIP HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BURST_INTERRUPT HDL_PARAMETER true
	set_parameter_property ENUM_ENABLE_BURST_TERMINATE HDL_PARAMETER true
	set_parameter_property INTG_POWER_SAVING_EXIT_CYCLES HDL_PARAMETER true
	#Will not be added for now since this feature is not captured in C-V HMC NPP
	#set_parameter_property INTG_PRIORITY_REMAP HDL_PARAMETER true
	set_parameter_property INTG_MEM_CLK_ENTRY_CYCLES HDL_PARAMETER true
	set_parameter_property INTG_MEM_AUTO_PD_CYCLES HDL_PARAMETER true
	set_parameter_property INTG_CYC_TO_RLD_JARS_0 HDL_PARAMETER true
	set_parameter_property INTG_CYC_TO_RLD_JARS_1 HDL_PARAMETER true
	set_parameter_property INTG_CYC_TO_RLD_JARS_2 HDL_PARAMETER true
	set_parameter_property INTG_CYC_TO_RLD_JARS_3 HDL_PARAMETER true
	set_parameter_property INTG_CYC_TO_RLD_JARS_4 HDL_PARAMETER true
	set_parameter_property INTG_CYC_TO_RLD_JARS_5 HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_ACT_TO_ACT HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_ACT_TO_ACT_DIFF_BANK HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_ACT_TO_PCH HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_ACT_TO_RDWR HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_ARF_PERIOD HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_ARF_TO_VALID HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_FOUR_ACT_TO_ACT HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_PCH_ALL_TO_VALID HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_PCH_TO_VALID HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_PDN_PERIOD HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_PDN_TO_VALID HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_RD_AP_TO_VALID HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_RD_TO_PCH HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_RD_TO_RD HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_RD_TO_RD_DIFF_CHIP HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_RD_TO_WR HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_RD_TO_WR_BC HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_RD_TO_WR_DIFF_CHIP HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_SRF_TO_VALID HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_SRF_TO_ZQ_CAL HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_WR_AP_TO_VALID HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_WR_TO_PCH HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_WR_TO_RD HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_WR_TO_RD_BC HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_WR_TO_RD_DIFF_CHIP HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_WR_TO_WR HDL_PARAMETER true
	set_parameter_property INTG_EXTRA_CTL_CLK_WR_TO_WR_DIFF_CHIP HDL_PARAMETER true
	set_parameter_property INTG_MEM_IF_TREFI HDL_PARAMETER true
	set_parameter_property INTG_MEM_IF_TRFC HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_0 HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_1 HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_2 HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_3 HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_4 HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_5 HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_6 HDL_PARAMETER true
	set_parameter_property INTG_RCFG_SUM_WT_PRIORITY_7 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_0 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_1 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_2 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_3 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_4 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_5 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_6 HDL_PARAMETER true
	set_parameter_property INTG_SUM_WT_PRIORITY_7 HDL_PARAMETER true
}
# |
# +------

# +-----------------------------------
# | Build the GUI
# |
alt_mem_if::gui::afi::set_protocol "DDR3"
alt_mem_if::gui::common_ddr_mem_model::set_ddr_mode "DDR3"
alt_mem_if::gui::common_ddr_mem_model::create_parameters
alt_mem_if::gui::uniphy_controller_phy::create_parameters
alt_mem_if::gui::ddrx_controller::set_ddr_mode "DDR3"
alt_mem_if::gui::ddrx_controller::create_parameters
alt_mem_if::gui::afi::create_parameters
alt_mem_if::gui::system_info::create_parameters

create_hdl_parameters

alt_mem_if::gui::ddrx_controller::create_gui 1
alt_mem_if::gui::common_ddr_mem_model::create_gui
# |
# +-----------------------------------

# +-----------------------------------
# | Elaboration/validation callbacks
# |
if {[string compare -nocase [::alt_mem_if::util::hwtcl_utils::combined_callbacks] "false"] == 0} {
	set_module_property Validation_Callback ip_validate
	set_module_property elaboration_Callback ip_elaborate
} else {
	set_module_property elaboration_Callback combined_callback
}

proc combined_callback {} {
	ip_validate
	ip_elaborate
}

proc ip_validate {} {
	_dprint 1 "Running IP Validation"

	# Validation order matters. It must be system_info, memory model, AFI, then controller/phy
	alt_mem_if::gui::system_info::validate_component
	alt_mem_if::gui::common_ddr_mem_model::validate_component
	alt_mem_if::gui::afi::validate_component
	alt_mem_if::gui::uniphy_controller_phy::validate_component
	alt_mem_if::gui::ddrx_controller::validate_component

	if {[string compare -nocase [get_parameter_value NEXTGEN] "false"] == 0} {
		_eprint "Parameter NEXTGEN must be true for the Nextgen controller!"
	}

}

proc ip_elaborate {} {
	set CONTROLLER_CORE ng0

	_dprint 1 "Running IP Elaboration"

	# Validation order matters. It must be system_info, memory model, AFI, then controller/phy
	alt_mem_if::gui::system_info::elaborate_component
	alt_mem_if::gui::common_ddr_mem_model::elaborate_component
	alt_mem_if::gui::afi::elaborate_component
	alt_mem_if::gui::uniphy_controller_phy::elaborate_component
	alt_mem_if::gui::ddrx_controller::elaborate_component

	# KALEN: This is a magic setting
	if {[string compare -nocase [get_parameter_value RATE] "full"] == 0} {
		set_parameter_value MAX_PENDING_READ_TRANSACTION 48
	} elseif {[string compare -nocase [get_parameter_value RATE] "half"] == 0} {
		set_parameter_value MAX_PENDING_READ_TRANSACTION 32
	} elseif {[string compare -nocase [get_parameter_value RATE] "quarter"] == 0} {
		# MW TODO: derive an appropriate value for QR. This is just a stand-in for now.
		set_parameter_value MAX_PENDING_READ_TRANSACTION 32
	}

	# +-----------------------------------
	# | connection point afi_clk
	# |
	add_interface afi_clk clock end
	set_interface_property afi_clk clockRate 0

	set_interface_property afi_clk ENABLED true

	add_interface_port afi_clk afi_clk clk Input 1
	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point afi_reset_n
	# |
	add_interface afi_reset reset end
	set_interface_property afi_reset synchronousEdges NONE

	set_interface_property afi_reset ENABLED true

	add_interface_port afi_reset afi_reset_n reset_n Input 1
	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point ctl_reset_n
	# |
	add_interface ctl_reset reset end
	set_interface_property ctl_reset synchronousEdges NONE

	set_interface_property ctl_reset ENABLED true

	add_interface_port ctl_reset ctl_reset_n reset_n Input 1
	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point afi_half_clk
	# | 
	add_interface afi_half_clk clock end
	set_interface_property afi_half_clk clockRate 0
	
	set_interface_property afi_half_clk ENABLED true
	
	add_interface_port afi_half_clk afi_half_clk clk Input 1
	# | 
	# +-----------------------------------
	
	# +-----------------------------------
	# | connection point ctl_clk
	# |
	add_interface ctl_clk clock end
	set_interface_property ctl_clk clockRate 0

	set_interface_property ctl_clk ENABLED true

	add_interface_port ctl_clk ctl_clk clk Input 1
	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point multi port command clk and reset
	# |
        for {set ori_port_id 0} {$ori_port_id < 6} {incr ori_port_id} {
                if {[string compare -nocase [get_parameter_value PARSE_FRIENDLY_DEVICE_FAMILY] "CYCLONEV"] == 0} { 
                	set port_id [get_parameter_value AV_PORT_${ori_port_id}_CONNECT_TO_CV_PORT] 
        	} else {                               
        		set port_id $ori_port_id
        	}                                     
	        add_interface mp_cmd_clk_${port_id} clock end
	        set_interface_property mp_cmd_clk_${port_id} clockRate 0
	        set_interface_property mp_cmd_clk_${port_id} ENABLED true
	        add_interface_port mp_cmd_clk_${port_id} mp_cmd_clk_${port_id} clk Input 1
                if { $ori_port_id >= [::alt_mem_if::gui::ddrx_controller::get_NUM_OF_PORTS] } {
                        set_port_property mp_cmd_clk_${port_id} termination true
                        set_port_property mp_cmd_clk_${port_id} termination_value 0
                }

	        add_interface mp_cmd_reset_n_${port_id} reset end
	        set_interface_property mp_cmd_reset_n_${port_id} synchronousEdges NONE
	        set_interface_property mp_cmd_reset_n_${port_id} ENABLED true
	        add_interface_port mp_cmd_reset_n_${port_id} mp_cmd_reset_n_${port_id} reset_n Input 1
                if { $ori_port_id >= [::alt_mem_if::gui::ddrx_controller::get_NUM_OF_PORTS] } {
                        set_port_property mp_cmd_reset_n_${port_id} termination true
                        set_port_property mp_cmd_reset_n_${port_id} termination_value 1
                }
        }
        
        if {[string compare -nocase [get_parameter_value PARSE_FRIENDLY_DEVICE_FAMILY] "CYCLONEV"] == 0} {      
        	for {set fifo_id 0} {$fifo_id < 4} {incr fifo_id} {
        		if {[string compare -nocase [get_parameter_value ENUM_WR_FIFO_IN_USE_${fifo_id}] "true"] == 0} {
        			set_port_property mp_cmd_clk_${fifo_id} termination false
        			set_port_property mp_cmd_reset_n_${fifo_id} termination false
        		}
        	}
        }

	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point multi port fifo clk and reset
	# |
        for {set fifo_id 0} {$fifo_id < 4} {incr fifo_id} {
	        add_interface mp_rfifo_clk_${fifo_id} clock end
	        set_interface_property mp_rfifo_clk_${fifo_id} clockRate 0
	        set_interface_property mp_rfifo_clk_${fifo_id} ENABLED true
	        add_interface_port mp_rfifo_clk_${fifo_id} mp_rfifo_clk_${fifo_id} clk Input 1
                if {[string compare -nocase [get_parameter_value ENUM_RD_FIFO_IN_USE_${fifo_id}] "false"] == 0} {
                        set_port_property mp_rfifo_clk_${fifo_id} termination true
                        set_port_property mp_rfifo_clk_${fifo_id} termination_value 0
                }

	        add_interface mp_rfifo_reset_n_${fifo_id} reset end
	        set_interface_property mp_rfifo_reset_n_${fifo_id} synchronousEdges NONE
	        set_interface_property mp_rfifo_reset_n_${fifo_id} ENABLED true
	        add_interface_port mp_rfifo_reset_n_${fifo_id} mp_rfifo_reset_n_${fifo_id} reset_n Input 1
                if {[string compare -nocase [get_parameter_value ENUM_RD_FIFO_IN_USE_${fifo_id}] "false"] == 0} {
                        set_port_property mp_rfifo_reset_n_${fifo_id} termination true
                        set_port_property mp_rfifo_reset_n_${fifo_id} termination_value 1
                }

	        add_interface mp_wfifo_clk_${fifo_id} clock end
	        set_interface_property mp_wfifo_clk_${fifo_id} clockRate 0
	        set_interface_property mp_wfifo_clk_${fifo_id} ENABLED true
	        add_interface_port mp_wfifo_clk_${fifo_id} mp_wfifo_clk_${fifo_id} clk Input 1
                if {[string compare -nocase [get_parameter_value ENUM_WR_FIFO_IN_USE_${fifo_id}] "false"] == 0} {
                        set_port_property mp_wfifo_clk_${fifo_id} termination true
                        set_port_property mp_wfifo_clk_${fifo_id} termination_value 0
                }

	        add_interface mp_wfifo_reset_n_${fifo_id} reset end
	        set_interface_property mp_wfifo_reset_n_${fifo_id} synchronousEdges NONE
	        set_interface_property mp_wfifo_reset_n_${fifo_id} ENABLED true
	        add_interface_port mp_wfifo_reset_n_${fifo_id} mp_wfifo_reset_n_${fifo_id} reset_n Input 1
                if {[string compare -nocase [get_parameter_value ENUM_WR_FIFO_IN_USE_${fifo_id}] "false"] == 0} {
                        set_port_property mp_wfifo_reset_n_${fifo_id} termination true
                        set_port_property mp_wfifo_reset_n_${fifo_id} termination_value 1
                }
        }

	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point csr clk and reset
	# |
	add_interface csr_clk clock end
	set_interface_property csr_clk clockRate 0

	set_interface_property csr_clk ENABLED true

	add_interface_port csr_clk csr_clk clk Input 1
        if {[string compare -nocase [get_parameter_value CTL_CSR_ENABLED] "false"] == 0} {
                set_port_property csr_clk termination true
                set_port_property csr_clk termination_value 0
        }

	add_interface csr_reset_n reset end
	set_interface_property csr_reset_n associatedClock csr_clk
	set_interface_property csr_reset_n synchronousEdges DEASSERT

	set_interface_property csr_reset_n ENABLED true

	add_interface_port csr_reset_n csr_reset_n reset_n Input 1
        if {[string compare -nocase [get_parameter_value CTL_CSR_ENABLED] "false"] == 0} {
                set_port_property csr_reset_n termination true
                set_port_property csr_reset_n termination_value 1
        }
	# |
	# +-----------------------------------

	for {set ori_port_id 0} {$ori_port_id != 6} {incr ori_port_id} {
                if {[string compare -nocase [get_parameter_value PARSE_FRIENDLY_DEVICE_FAMILY] "CYCLONEV"] == 0} {
                	set port_id [get_parameter_value AV_PORT_${ori_port_id}_CONNECT_TO_CV_PORT]
                } else { 
                	set port_id $ori_port_id     
                }                            
		# +-----------------------------------
		# | connection point avl
		# |
		if {[string compare -nocase [get_parameter_value ENABLE_CTRL_AVALON_INTERFACE] "true"] == 0} {

			add_interface avl_${port_id} avalon end
			set_interface_property avl_${port_id} ENABLED true
			set_interface_property avl_${port_id} addressUnits WORDS
			set_interface_property avl_${port_id} associatedClock mp_cmd_clk_${port_id}
			set_interface_property avl_${port_id} associatedReset mp_cmd_reset_n_${port_id}
			set_interface_property avl_${port_id} bitsPerSymbol [get_parameter_value AVL_SYMBOL_WIDTH]
			set_interface_property avl_${port_id} addressAlignment DYNAMIC
			# Specify that the Avalon-MM interface is a memory device for use
			# with NIOS. The value must be "1"
			set_interface_property avl_${port_id} isMemoryDevice 1

			set_interface_property avl_${port_id} maximumPendingReadTransactions [get_parameter_value MAX_PENDING_READ_TRANSACTION]

			# allow the address and burstcount to be passed straight through the Merlin translators
			# rather than re-derived unnecessarily. This in fact matches the Avalon spec where it is
			# assumed that the address must only be valid at the beginning of the burst
			set_interface_property avl_${port_id} constantBurstBehavior false

		} else {
			add_interface avl_${port_id} conduit end
		}

		add_interface_port avl_${port_id} avl_ready_${port_id} waitrequest_n Output 1
		add_interface_port avl_${port_id} avl_burstbegin_${port_id} beginbursttransfer Input 1
		add_interface_port avl_${port_id} avl_addr_${port_id} address Input [get_parameter_value AVL_ADDR_WIDTH_PORT_${port_id}]
		set_port_property avl_addr_${port_id} VHDL_TYPE STD_LOGIC_VECTOR
		add_interface_port avl_${port_id} avl_rdata_valid_${port_id} readdatavalid Output 1
		add_interface_port avl_${port_id} avl_rdata_${port_id} readdata Output [get_parameter_value AVL_DATA_WIDTH_PORT_${port_id}]
		set_port_property avl_rdata_${port_id} VHDL_TYPE STD_LOGIC_VECTOR
		add_interface_port avl_${port_id} avl_wdata_${port_id} writedata Input [get_parameter_value AVL_DATA_WIDTH_PORT_${port_id}]
		set_port_property avl_wdata_${port_id} VHDL_TYPE STD_LOGIC_VECTOR
		add_interface_port avl_${port_id} avl_be_${port_id} byteenable Input [get_parameter_value AVL_NUM_SYMBOLS_PORT_${port_id}]
		set_port_property avl_be_${port_id} VHDL_TYPE STD_LOGIC_VECTOR
		add_interface_port avl_${port_id} avl_read_req_${port_id} read Input 1
		add_interface_port avl_${port_id} avl_write_req_${port_id} write Input 1
		add_interface_port avl_${port_id} avl_size_${port_id} burstcount Input [get_parameter_value AVL_SIZE_WIDTH]


		if {[string compare -nocase [get_parameter_value BYTE_ENABLE] "true"] == 0} {
			set_port_property avl_be_${port_id} termination false
		} else {
			set_port_property avl_be_${port_id} termination true
			# assign all pins logical 1
			set_port_property avl_be_${port_id} termination_value "[get_parameter_value AVL_NUM_SYMBOLS_PORT_${port_id}]\'b[string repeat 1 [get_parameter_value AVL_NUM_SYMBOLS_PORT_${port_id}]]"
		}

		::alt_mem_if::util::hwtcl_utils::set_interface_termination avl_${port_id} "[expr $ori_port_id < [::alt_mem_if::gui::ddrx_controller::get_NUM_OF_PORTS]]"
	}
	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point multicast
	# |
	add_interface avl_multicast_write conduit end
	set_interface_property avl_multicast_write ENABLED true
	add_interface_port avl_multicast_write local_multicast local_multicast Input 1
	# Set termination on the interface as appropriate
	if {[string compare -nocase [get_parameter_value MULTICAST_EN] "true"] == 0} {
		::alt_mem_if::util::hwtcl_utils::set_interface_termination avl_multicast_write 1
	} else {
		::alt_mem_if::util::hwtcl_utils::set_interface_termination avl_multicast_write 0
	}

	# |
	# +-----------------------------------

	# +-----------------------------------
	# | connection point priority
	# |
	add_interface priority conduit end
	set_interface_property priority ENABLED true
	add_interface_port priority local_priority local_priority Input 1
	set_port_property local_priority termination true
	set_port_property local_priority termination_value 0
	# |
	# +-----------------------------------

	# Create the other signals interface
	add_interface status conduit end
	set_interface_property status ENABLED true

	add_interface_port status local_init_done local_init_done Output 1
	add_interface_port status local_cal_success local_cal_success Output 1
	add_interface_port status local_cal_fail local_cal_fail Output 1

	# Auto powerdown
	if {[string compare -nocase [get_parameter_value AUTO_POWERDN_EN] "false"] == 0} {
		add_interface local_powerdown conduit end
		set_interface_property local_powerdown export_of "${CONTROLLER_CORE}.local_powerdown"
	}

	# Add CSR slave interface
	::alt_mem_if::gen::uniphy_interfaces::csr_slave "controller"

	# Add AFI interface
	::alt_mem_if::gen::uniphy_interfaces::afi "HARD" "controller" "afi" 1 1 1
	::alt_mem_if::gen::uniphy_interfaces::hard_phy_cfg "controller"

	# Create various sideband interfaces
	::alt_mem_if::gen::uniphy_interfaces::ddrx_nextgen_sideband_signals



	# Set the toplevel fileset name for all filesets. This must be done
	# in the elaboration callback
	foreach fset_name [list SIM_VERILOG SIM_VHDL QUARTUS_SYNTH] {
		set_fileset_property [string tolower $fset_name] TOP_LEVEL [alt_mem_if::util::iptclgen::generate_outfile_name "altera_mem_if_hard_memory_controller_top.sv" [solve_core_params] 1]
	}
	
	# Add io_int interface
	add_interface io_int conduit end
	
	set_interface_property io_int ENABLED true
	
	add_interface_port io_int io_intaficalfail io_intaficalfail Input 1
	add_interface_port io_int io_intaficalsuccess io_intaficalsuccess Input 1

}
