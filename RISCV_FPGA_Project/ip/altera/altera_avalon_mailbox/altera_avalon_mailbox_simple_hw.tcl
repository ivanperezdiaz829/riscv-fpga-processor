# (C) 2001-2013 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License Subscription 
# Agreement, Altera MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# TCL File Generated by Component Editor 12.1
# Thu Sep 20 15:00:37 MYT 2012
# DO NOT MODIFY


# 
# altera_avalon_mailbox_simple "Altera Avalon Mailbox (simple)" v1.0
# Altera Corporation 2012.09.20.15:00:37
# This component provides communication channel between two processors in the form of message passing. This component only handle one direction of message passing.
# 

# 
# request TCL package from ACDS 12.1
# 
package require -exact qsys 12.1


# 
# module altera_avalon_mailbox_simple
# 
set_module_property DESCRIPTION "This component provides communication channel between two processors in the form of message passing. This component only handle one direction of message passing."
set_module_property NAME altera_avalon_mailbox_simple
set_module_property VERSION 13.1
set_module_property INTERNAL false
set_module_property OPAQUE_ADDRESS_MAP true
set_module_property GROUP "Peripherals/Multiprocessor Coordination"
set_module_property AUTHOR "Altera Corporation"
set_module_property DISPLAY_NAME "Altera Avalon Mailbox (simple)"
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE true
set_module_property ANALYZE_HDL AUTO
set_module_property REPORT_TO_TALKBACK false
set_module_property ALLOW_GREYBOX_GENERATION false
set_module_property ELABORATION_CALLBACK "elaborate"

# 
# file sets
# 
add_fileset QUARTUS_SYNTH QUARTUS_SYNTH "" ""
set_fileset_property QUARTUS_SYNTH TOP_LEVEL altera_avalon_mailbox
set_fileset_property QUARTUS_SYNTH ENABLE_RELATIVE_INCLUDE_PATHS false
add_fileset_file altera_avalon_mailbox.v VERILOG PATH src/altera_avalon_mailbox.v

add_fileset SIM_VERILOG SIM_VERILOG "" ""
set_fileset_property SIM_VERILOG TOP_LEVEL altera_avalon_mailbox
set_fileset_property SIM_VERILOG ENABLE_RELATIVE_INCLUDE_PATHS false
add_fileset_file altera_avalon_mailbox.v VERILOG PATH src/altera_avalon_mailbox.v
  # --- alternative way fileset adding
  #add_fileset SIM_VERILOG_FROM_VERILOG SIM_VERILOG verilog_from_verilog
  #set_fileset_property SIM_VERILOG_FROM_VERILOG top_level bob

add_fileset SIM_VHDL_FROM_VERILOG SIM_VHDL vhdl_from_verilog
set_fileset_property SIM_VHDL_FROM_VERILOG top_level altera_avalon_mailbox

  # --- example for VHO generation from VHDL
  #add_fileset SIM_VHDL_FROM_VHDL SIM_VHDL vhdl_from_vhdl
  #set_fileset_property SIM_VHDL_FROM_VHDL top_level bob

  # --- example for VO generation from VHDL
  #add_fileset SIM_VERILOG_FROM_VHDL SIM_VERILOG verilog_from_vhdl
  #set_fileset_property SIM_VERILOG_FROM_VHDL top_level bob

#proc verilog_from_verilog { outputName } {
#    #set foo [simgen_file bob.v bob VERILOG {tom.v timmy.v} +timmy]
#    set SIMGEN_PARAMS "--simgen_parameter=CBX_HDL_LANGUAGE=VERILOG,SIMGEN_RAND_POWERUP_FFS=OFF,SIMGEN_OBFUSCATE=OFF,SIMGEN_MAX_TULIP_COUNT=0 --simgen_arbitrary_blackbox=+timmy"
#    set foo [call_simgen bob.v "$SIMGEN_PARAMS" {tom.v timmy.v} ]
#    set foo "${foo}.vo"
#    add_fileset_file bob.vo VERILOG PATH ${foo}
#    add_fileset_file timmy.v VERILOG PATH timmy.v
#}

proc vhdl_from_verilog { outputName } {
    set fileloc [create_temp_file simgen_init.txt]
    send_message info ${fileloc}
    set fileHandle [ open  ${fileloc} w ]
    puts ${fileHandle} "DECLARE_VHDL_COMPONENT=timmy\n"
    close ${fileHandle}
    set SIMGEN_PARAMS "--simgen_parameter=CBX_HDL_LANGUAGE=VHDL,SIMGEN_RAND_POWERUP_FFS=OFF,SIMGEN_OBFUSCATE=OFF,SIMGEN_MAX_TULIP_COUNT=0,SIMGEN_INITIALIZATION_FILE=${fileloc},SIMGEN_VHDL_LIBRARY_LIST=work"
    set foo [call_simgen src/altera_avalon_mailbox.v "$SIMGEN_PARAMS --simgen_arbitrary_blackbox=+timmy"]
    set foo "${foo}.vho"
    #set foo [simgen_file bob.v bob VHDL {tom.v timmy.v} +timmy ${fileloc} work ]
    add_fileset_file altera_avalon_mailbox.vho VHDL PATH ${foo}
#    add_fileset_file timmy.vhd VHDL PATH timmy.vhd
}

#proc vhdl_from_vhdl { outputName } {
#    set fileloc [create_temp_file simgen_init.txt]
#    send_message info ${fileloc}
#    set fileHandle [ open  ${fileloc} w ]
#    puts ${fileHandle} "DECLARE_VHDL_COMPONENT=timmy\n"
#    close ${fileHandle}
#    set SIMGEN_PARAMS "--simgen_parameter=CBX_HDL_LANGUAGE=VHDL,SIMGEN_RAND_POWERUP_FFS=OFF,SIMGEN_OBFUSCATE=OFF,SIMGEN_MAX_TULIP_COUNT=0,SIMGEN_INITIALIZATION_FILE=${fileloc},SIMGEN_VHDL_LIBRARY_LIST=work"
#    set foo [call_simgen bob.vhd "$SIMGEN_PARAMS --simgen_arbitrary_blackbox=+timmy" {tom.vhd timmy.vhd}]
#    set foo "${foo}.vho"
#    #set foo [simgen_file bob.vhd bob VHDL {tom.vhd timmy.vhd} +timmy ${fileloc} work]
#    add_fileset_file bob.vho VHDL PATH ${foo}
#    add_fileset_file timmy.vhd VHDL PATH timmy.vhd
#}

#proc verilog_from_vhdl { outputName } {
#    #set foo [simgen_file bob.vhd bob VERILOG {timmy.vhd tom.vhd} +timmy]
#    set SIMGEN_PARAMS "--simgen_parameter=CBX_HDL_LANGUAGE=VERILOG,SIMGEN_RAND_POWERUP_FFS=OFF,SIMGEN_OBFUSCATE=OFF,SIMGEN_MAX_TULIP_COUNT=0 --simgen_arbitrary_blackbox=+timmy"
#    set foo [call_simgen bob.vhd "$SIMGEN_PARAMS" {tom.vhd timmy.vhd} ]
#    set foo "${foo}.vo"
#    add_fileset_file bob.vo VERILOG PATH ${foo}
#    add_fileset_file timmy.v VERILOG PATH timmy.v
#}


# 
# parameters
# 
add_parameter DWIDTH INTEGER 32
set_parameter_property DWIDTH DEFAULT_VALUE 32
set_parameter_property DWIDTH DISPLAY_NAME DWIDTH
set_parameter_property DWIDTH TYPE INTEGER
set_parameter_property DWIDTH ENABLED false
set_parameter_property DWIDTH UNITS None
set_parameter_property DWIDTH HDL_PARAMETER true
add_parameter AWIDTH INTEGER 2
set_parameter_property AWIDTH DEFAULT_VALUE 2
set_parameter_property AWIDTH DISPLAY_NAME AWIDTH
set_parameter_property AWIDTH TYPE INTEGER
set_parameter_property AWIDTH ENABLED false
set_parameter_property AWIDTH UNITS None
set_parameter_property AWIDTH HDL_PARAMETER true
add_parameter MSG_ARRIVAL_NOTIFY INTEGER 1
set_parameter_property MSG_ARRIVAL_NOTIFY DEFAULT_VALUE 1
set_parameter_property MSG_ARRIVAL_NOTIFY DISPLAY_NAME "Enable Message Arrival Interrupt Output"
set_parameter_property MSG_ARRIVAL_NOTIFY TYPE INTEGER
set_parameter_property MSG_ARRIVAL_NOTIFY DISPLAY_HINT "boolean"
set_parameter_property MSG_ARRIVAL_NOTIFY ENABLED true
set_parameter_property MSG_ARRIVAL_NOTIFY UNITS None
set_parameter_property MSG_ARRIVAL_NOTIFY HDL_PARAMETER false
add_parameter MSG_SPACE_NOTIFY INTEGER 0
set_parameter_property MSG_SPACE_NOTIFY DEFAULT_VALUE 0
set_parameter_property MSG_SPACE_NOTIFY DISPLAY_NAME "Enable Mailbox Space Available Interrupt Output"
set_parameter_property MSG_SPACE_NOTIFY TYPE INTEGER
set_parameter_property MSG_SPACE_NOTIFY DISPLAY_HINT "boolean"
set_parameter_property MSG_SPACE_NOTIFY ENABLED true
set_parameter_property MSG_SPACE_NOTIFY UNITS None
set_parameter_property MSG_SPACE_NOTIFY HDL_PARAMETER false

# 
# display items
# 


# 
# connection point clk
# 
add_interface clk clock end
set_interface_property clk ENABLED true

add_interface_port clk clk clk Input 1


# 
# connection point rst_n
# 
add_interface rst_n reset end
set_interface_property rst_n associatedClock clk
set_interface_property rst_n synchronousEdges DEASSERT
set_interface_property rst_n ENABLED true

add_interface_port rst_n rst_n reset_n Input 1


# 
# connection point avmm_msg_sender
# 
add_interface avmm_msg_sender avalon end
set_interface_property avmm_msg_sender addressUnits WORDS
set_interface_property avmm_msg_sender associatedClock clk
set_interface_property avmm_msg_sender associatedReset rst_n
set_interface_property avmm_msg_sender bitsPerSymbol 8
set_interface_property avmm_msg_sender burstOnBurstBoundariesOnly false
set_interface_property avmm_msg_sender burstcountUnits WORDS
set_interface_property avmm_msg_sender explicitAddressSpan 0
set_interface_property avmm_msg_sender holdTime 0
set_interface_property avmm_msg_sender linewrapBursts false
set_interface_property avmm_msg_sender maximumPendingReadTransactions 0
set_interface_property avmm_msg_sender readLatency 0
set_interface_property avmm_msg_sender readWaitTime 1
set_interface_property avmm_msg_sender setupTime 0
set_interface_property avmm_msg_sender timingUnits Cycles
set_interface_property avmm_msg_sender writeWaitTime 0
set_interface_property avmm_msg_sender ENABLED true

add_interface_port avmm_msg_sender avmm_snd_address address Input AWIDTH
add_interface_port avmm_msg_sender avmm_snd_writedata writedata Input DWIDTH
add_interface_port avmm_msg_sender avmm_snd_write write Input 1
add_interface_port avmm_msg_sender avmm_snd_read read Input 1
add_interface_port avmm_msg_sender avmm_snd_readdata readdata Output DWIDTH
add_interface_port avmm_msg_sender avmm_snd_waitrequest waitrequest Output 1
set_interface_assignment avmm_msg_sender embeddedsw.configuration.isFlash 0
set_interface_assignment avmm_msg_sender embeddedsw.configuration.isMemoryDevice 0
set_interface_assignment avmm_msg_sender embeddedsw.configuration.isNonVolatileStorage 0
set_interface_assignment avmm_msg_sender embeddedsw.configuration.isPrintableDevice 0


# 
# connection point interrupt_mb_available
# 
add_interface interrupt_mb_available interrupt end
set_interface_property interrupt_mb_available associatedAddressablePoint avmm_msg_sender
set_interface_property interrupt_mb_available associatedClock clk
set_interface_property interrupt_mb_available associatedReset rst_n
set_interface_property interrupt_mb_available ENABLED true

add_interface_port interrupt_mb_available irq_space irq Output 1


# 
# connection point interrupt_msg_pending
# 
add_interface interrupt_msg_pending interrupt end
set_interface_property interrupt_msg_pending associatedAddressablePoint avmm_msg_receiver
set_interface_property interrupt_msg_pending associatedClock clk
set_interface_property interrupt_msg_pending associatedReset rst_n
set_interface_property interrupt_msg_pending ENABLED true

add_interface_port interrupt_msg_pending irq_msg irq Output 1


# 
# connection point avmm_msg_receiver
# 
add_interface avmm_msg_receiver avalon end
set_interface_property avmm_msg_receiver addressUnits WORDS
set_interface_property avmm_msg_receiver associatedClock clk
set_interface_property avmm_msg_receiver associatedReset rst_n
set_interface_property avmm_msg_receiver bitsPerSymbol 8
set_interface_property avmm_msg_receiver burstOnBurstBoundariesOnly false
set_interface_property avmm_msg_receiver burstcountUnits WORDS
set_interface_property avmm_msg_receiver explicitAddressSpan 0
set_interface_property avmm_msg_receiver holdTime 0
set_interface_property avmm_msg_receiver linewrapBursts false
set_interface_property avmm_msg_receiver maximumPendingReadTransactions 0
set_interface_property avmm_msg_receiver readLatency 0
set_interface_property avmm_msg_receiver readWaitTime 1
set_interface_property avmm_msg_receiver setupTime 0
set_interface_property avmm_msg_receiver timingUnits Cycles
set_interface_property avmm_msg_receiver writeWaitTime 0
set_interface_property avmm_msg_receiver ENABLED true

add_interface_port avmm_msg_receiver avmm_rcv_address address Input AWIDTH
add_interface_port avmm_msg_receiver avmm_rcv_read read Input 1
add_interface_port avmm_msg_receiver avmm_rcv_writedata writedata Input DWIDTH
add_interface_port avmm_msg_receiver avmm_rcv_write write Input 1
add_interface_port avmm_msg_receiver avmm_rcv_readdata readdata Output DWIDTH
set_interface_assignment avmm_msg_receiver embeddedsw.configuration.isFlash 0
set_interface_assignment avmm_msg_receiver embeddedsw.configuration.isMemoryDevice 0
set_interface_assignment avmm_msg_receiver embeddedsw.configuration.isNonVolatileStorage 0
set_interface_assignment avmm_msg_receiver embeddedsw.configuration.isPrintableDevice 0

proc elaborate {} {
  
  set space_interrupt_enable   [ get_parameter_value "MSG_SPACE_NOTIFY" ]
  set arrival_interrupt_enable [ get_parameter_value "MSG_ARRIVAL_NOTIFY" ]

  if {$space_interrupt_enable == "0"} {
    set_port_property irq_space termination true
  }
  if {$arrival_interrupt_enable == "0"} {
    set_port_property irq_msg   termination true
  }

   # Set DTS parameters
   set_module_assignment embeddedsw.dts.vendor "altr"
   set_module_assignment embeddedsw.dts.group "mailbox"
   set_module_assignment embeddedsw.dts.compatible "altr,mailbox-1.0"
}
