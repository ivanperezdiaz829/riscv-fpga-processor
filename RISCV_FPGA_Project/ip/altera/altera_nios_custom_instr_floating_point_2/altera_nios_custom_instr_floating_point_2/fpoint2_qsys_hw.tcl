# (C) 2001-2013 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License Subscription 
# Agreement, Altera MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# TCL File Generated by Component Editor 10.1
# Tue Aug 17 16:32:25 MYT 2010
# DO NOT MODIFY


# +-----------------------------------
# | 
# | 
# +-----------------------------------

# +-----------------------------------
# | request TCL package from QSYS 12.0
# | 
package require -exact qsys 12.0
# | 
# +-----------------------------------

# +-----------------------------------
# | module fpoint
# | 
set_module_property NAME altera_nios_custom_instr_floating_point_2
set_module_property VERSION {__VERSION_SHORT__}
set_module_property INTERNAL false
set_module_property GROUP "Embedded Processors"
set_module_property AUTHOR "Altera Corporation"
set_module_property DISPLAY_NAME "Floating Point Hardware 2"
set_module_property HIDE_FROM_SOPC true
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL FALSE
set_module_property COMPOSITION_CALLBACK compose
# | 
# +-----------------------------------

# +-----------------------------------
# | file sets
# | 
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
# | 
# +-----------------------------------

# +-----------------------------------
# | display items
# | 
add_display_item {Description} 0 text "<html>\
This component is the 2nd generation single-precision floating-point custom instruction.<br>\
It offers improved performance and lower resource usage than the 1st generation at the<br>\
expense of full IEEE 754 compliance (limited subnormal support and simplified rounding modes).<br>\
<br>\
This component supports the following operations:<table border=\"1\">\
<tr><th>Operation</th><th>Cycles to Execute</th></tr>\
<tr><td>add/subtract</td><td>5</td></tr>\
<tr><td>multiply</td><td>4</td></tr>\
<tr><td>divide</td><td>16</td></tr>\
<tr><td>square root</td><td>8</td></tr>\
<tr><td>integer to float</td><td>4</td></tr>\
<tr><td>float to integer</td><td>2</td></tr>\
<tr><td>min/max</td><td>1</td></tr>\
<tr><td>negate/absolute</td><td>1</td></tr>\
<tr><td>comparisons</td><td>1</td></tr>\
</table>\
<br>\
Both slaves must be connected to the Nios II custom_instruction_master.\
</html>"         
# | 
# +-----------------------------------

proc compose {} { 
	
    # +-----------------------------------
    # | submodule instantiation        
    # |  
    add_instance fpci_combi altera_nios_custom_instr_floating_point_2_combi 
    add_instance fpci_multi altera_nios_custom_instr_floating_point_2_multi
                                                             
    # | 
    # +-----------------------------------  

    # +-----------------------------------
    # | submodule interface connections
    # |                     
    add_interface s1 nios_custom_instruction end
    add_interface s2 nios_custom_instruction end
    
    set_interface_property s1 EXPORT_OF fpci_combi.s1
    set_interface_property s2 EXPORT_OF fpci_multi.s1
    
    # | 
    # +-----------------------------------                   

}

# +-----------------------------------
# | set embeddedsw.configuration
# | 
# | 
# +-----------------------------------
