# (C) 2001-2013 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License Subscription 
# Agreement, Altera MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# TCL File Generated by Component Editor 10.0
# Fri Apr 09 15:05:04 MYT 2010
# DO NOT MODIFY


# +-----------------------------------
# | 
# | altera_eth_2_5g_pcs_pma_16b "altera_eth_2_5g_pcs_pma_16b" v1.0
# | null 2010.04.09.15:05:04
# | 
# | 
# | /data/aishak/pcs/pcs_pma_2.5g/pcs_pma.v
# | 
# |    ./pcs_pma.v syn, sim
# | 
# +-----------------------------------

# +-----------------------------------
# | request TCL package from ACDS 10.0
# | 
package require -exact sopc 10.0
# | 
# +-----------------------------------

# +-----------------------------------
# | module altera_eth_2_5g_pcs_pma_16b
# | 
set_module_property NAME altera_eth_2_5g_pcs_pma_16b
set_module_property VERSION 13.1
set_module_property AUTHOR "Altera Corporation"
set_module_property INTERNAL true
set_module_property DISPLAY_NAME "Ethernet 2.5G PHY"
# set_module_property TOP_LEVEL_HDL_FILE altera_eth_2_5g_pcs_pma_16b.v
#set_module_property STATIC_TOP_LEVEL_MODULE_NAME altera_eth_2_5g_pcs_pma_16b
# set_module_property TOP_LEVEL_HDL_MODULE altera_eth_2_5g_pcs_pma_16b
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property ANALYZE_HDL false
set_module_property GROUP "Interface Protocols/Ethernet"
# set_module_property SIMULATION_MODEL_IN_VERILOG true
# set_module_property SIMULATION_MODEL_IN_VHDL true
set_module_property COMPOSE_CALLBACK compose
# | 
# +-----------------------------------

# +-----------------------------------
# | IEEE encryption
# |-----------------------------------

# | 
# +-----------------------------------

# +-----------------------------------
# | files
# | 
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# | 
# | 
# +-----------------------------------
add_parameter DEVICE_FAMILY STRING "Stratix IV"
set_parameter_property DEVICE_FAMILY DISPLAY_NAME "Device Family"
set_parameter_property DEVICE_FAMILY DESCRIPTION "Target Device Family for Ethernet 2.5G PHY IP"
# set_parameter_property DEVICE_FAMILY ALLOWED_RANGES {"Arria II GX" "Stratix IV" "Arria V"}
set_parameter_property DEVICE_FAMILY VISIBLE False
set_parameter_property DEVICE_FAMILY HDL_PARAMETER false
set_parameter_property DEVICE_FAMILY SYSTEM_INFO DEVICE_FAMILY

add_parameter STARTING_CHANNEL_NUMBER INTEGER 0
set_parameter_property STARTING_CHANNEL_NUMBER DISPLAY_NAME "Starting Channel Number"
set_parameter_property STARTING_CHANNEL_NUMBER allowed_ranges {"0" "4" "8"}
set_parameter_property STARTING_CHANNEL_NUMBER DESCRIPTION "Starting Channel Number"
set_parameter_property STARTING_CHANNEL_NUMBER HDL_PARAMETER true

add_parameter CONFIGURATION INTEGER 0 "Choose Configuration for 0:PHY only or 1:PHY & MAC"
set_parameter_property CONFIGURATION VISIBLE False
set_parameter_property CONFIGURATION DESCRIPTION "Internal usage: Phy only or MAC & PHY seclection for sdc file generation"


# +-----------------------------------
# | composition
# | 
# | 
# +-----------------------------------
proc compose {} {

    set starting_channel_number [get_parameter_value STARTING_CHANNEL_NUMBER]
    set configuration [get_parameter_value CONFIGURATION]
    
    # +-----------------------------------
    # | instantiation of PCS 16b
    add_instance eth_2_5g_pcs_16b altera_eth_2_5g_pcs_16b
    set_instance_parameter eth_2_5g_pcs_16b STARTING_CHANNEL_NUMBER $starting_channel_number
    set_instance_parameter eth_2_5g_pcs_16b CONFIGURATION $configuration

    # Arria 10 support
    if {[_is_phy_ip] == "5" } {
        add_instance xcvr_native altera_xcvr_native_a10
        set_instance_parameter xcvr_native  set_data_rate "3125" 
        set_instance_parameter xcvr_native  enable_simple_interface 1 
        set_instance_parameter xcvr_native  message_level "warning" 
        set_instance_parameter xcvr_native  tx_pma_clk_div 2 
        set_instance_parameter xcvr_native  set_cdr_refclk_freq "125.000000"
        set_instance_parameter xcvr_native  enable_ports_rx_manual_cdr_mode 1 
        set_instance_parameter xcvr_native  std_protocol_mode "gige"
        set_instance_parameter xcvr_native  std_pcs_pma_width 20
        set_instance_parameter xcvr_native  std_tx_8b10b_enable 1 
        set_instance_parameter xcvr_native  std_rx_8b10b_enable 1 
        set_instance_parameter xcvr_native  std_rx_rmfifo_mode "gige" 
        set_instance_parameter xcvr_native  std_rx_rmfifo_pattern_n "20'b10101011011010000011"
        set_instance_parameter xcvr_native  std_rx_rmfifo_pattern_p "20'b10100010010101111100"
        set_instance_parameter xcvr_native  std_rx_word_aligner_mode "synchronous state machine"
        set_instance_parameter xcvr_native  std_rx_word_aligner_pattern_len "10"
        set_instance_parameter xcvr_native  std_rx_word_aligner_pattern "10'b0111111011"
    } elseif {[_is_phy_ip]} {
        add_instance xcvr_phy altera_xcvr_custom_phy
        set_instance_parameter xcvr_phy gui_parameter_rules "GIGE"
        set_instance_parameter xcvr_phy operation_mode "Duplex"
        set_instance_parameter xcvr_phy lanes "1"
        set_instance_parameter xcvr_phy gui_bonding_enable "false"
        set_instance_parameter xcvr_phy gui_deser_factor "16"
        set_instance_parameter xcvr_phy gui_pcs_pma_width "8"
        set_instance_parameter xcvr_phy gui_pll_type "CMU"
        set_instance_parameter xcvr_phy data_rate "3125 Mbps"
        set_instance_parameter xcvr_phy gui_base_data_rate "3125 Mbps"
        set_instance_parameter xcvr_phy gui_pll_refclk_freq "125.0 MHz"
        set_instance_parameter xcvr_phy gui_tx_bitslip_enable "false"
        set_instance_parameter xcvr_phy gui_rx_use_coreclk "false"
        set_instance_parameter xcvr_phy gui_tx_use_coreclk "false"
        if {[_is_phy_ip] == "3"
        || [_is_phy_ip] == "4" } {    
            # rx_recovered_clk not supported for Cyclone V & Arria V          
            set_instance_parameter xcvr_phy gui_rx_use_recovered_clk "false"
        } else {
            set_instance_parameter xcvr_phy gui_rx_use_recovered_clk "true"        
        }        
        set_instance_parameter xcvr_phy gui_use_status "false"
        set_instance_parameter xcvr_phy gui_use_8b10b "true"
        set_instance_parameter xcvr_phy gui_use_8b10b_manual_control "false"
        set_instance_parameter xcvr_phy gui_use_8b10b_status "true"
        set_instance_parameter xcvr_phy word_aligner_mode "sync_state_machine"
        set_instance_parameter xcvr_phy word_aligner_state_machine_datacnt "3"
        set_instance_parameter xcvr_phy word_aligner_state_machine_errcnt "4"
        set_instance_parameter xcvr_phy word_aligner_state_machine_patterncnt "4"
        set_instance_parameter xcvr_phy gui_use_wa_status "true"
        set_instance_parameter xcvr_phy word_aligner_pattern_length "10"
        set_instance_parameter xcvr_phy word_align_pattern "0101111100"
        set_instance_parameter xcvr_phy gui_enable_run_length "true"
        set_instance_parameter xcvr_phy run_length_violation_checking "5"
        set_instance_parameter xcvr_phy use_rate_match_fifo "1"
        set_instance_parameter xcvr_phy rate_match_pattern1 "10100010010101111100"
        set_instance_parameter xcvr_phy rate_match_pattern2 "10101011011010000011"
        set_instance_parameter xcvr_phy gui_use_rmfifo_status "true"
        set_instance_parameter xcvr_phy gui_use_byte_order_block "false"
        set_instance_parameter xcvr_phy gui_byte_order_pld_ctrl_enable "false"
        set_instance_parameter xcvr_phy byte_order_pattern "111111011"
        set_instance_parameter xcvr_phy byte_order_pad_pattern "000000000"
        set_instance_parameter xcvr_phy coreclk_0ppm_enable "false"
        set_instance_parameter xcvr_phy gxb_analog_power "AUTO"
        set_instance_parameter xcvr_phy pll_lock_speed "AUTO"
        set_instance_parameter xcvr_phy tx_analog_power "AUTO"
        set_instance_parameter xcvr_phy tx_slew_rate "OFF"
        set_instance_parameter xcvr_phy tx_termination "OCT_100_OHMS"
        set_instance_parameter xcvr_phy tx_use_external_termination "false"
        set_instance_parameter xcvr_phy tx_preemp_pretap "0"
        set_instance_parameter xcvr_phy gui_tx_preemp_pretap_inv "false"
        set_instance_parameter xcvr_phy tx_preemp_tap_1 "0"
        set_instance_parameter xcvr_phy tx_preemp_tap_2 "0"
        set_instance_parameter xcvr_phy gui_tx_preemp_tap_2_inv "false"
        set_instance_parameter xcvr_phy tx_vod_selection "2"
        set_instance_parameter xcvr_phy tx_common_mode "0.65V"
        set_instance_parameter xcvr_phy rx_pll_lock_speed "AUTO"
        set_instance_parameter xcvr_phy rx_common_mode "0.82V"
        set_instance_parameter xcvr_phy rx_termination "OCT_100_OHMS"
        set_instance_parameter xcvr_phy rx_use_external_termination "false"
        set_instance_parameter xcvr_phy rx_eq_dc_gain "1"
        set_instance_parameter xcvr_phy rx_eq_ctrl "16"
        set_instance_parameter xcvr_phy gui_pll_reconfig_enable_pll_reconfig "false"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll_count "1"
        set_instance_parameter xcvr_phy gui_pll_reconfig_refclk_count "1"
        set_instance_parameter xcvr_phy gui_pll_reconfig_main_pll_index "0"
        set_instance_parameter xcvr_phy gui_pll_reconfig_cdr_pll_refclk_sel "0"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll0_pll_type "CMU"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll0_data_rate "0 Mbps"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll0_refclk_freq "0 MHz"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll0_refclk_sel "0"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll1_pll_type "CMU"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll1_data_rate "0 Mbps"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll1_refclk_freq "0 MHz"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll1_refclk_sel "0"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll2_pll_type "CMU"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll2_data_rate "0 Mbps"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll2_refclk_freq "0 MHz"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll2_refclk_sel "0"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll3_pll_type "CMU"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll3_data_rate "0 Mbps"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll3_refclk_freq "0 MHz"
        set_instance_parameter xcvr_phy gui_pll_reconfig_pll3_refclk_sel "0"
        # set_instance_parameter xcvr_phy gui_mgmt_clk_in_hz "250000000"
        set_instance_parameter xcvr_phy gui_split_interfaces "0"
        set_instance_parameter xcvr_phy gui_embedded_reset "1"
        set_instance_parameter xcvr_phy channel_interface "0"
        # set_instance_parameter xcvr_phy AUTO_PHY_MGMT_CLK_CLOCK_RATE "0"
        # set_instance_parameter xcvr_phy AUTO_PLL_REF_CLK_CLOCK_RATE "0"
    }
    
    # +-----------------------------------
    # | connection point export from PCS 16b
    # | 
    add_interface clk clock end
    set_interface_property clk EXPORT_OF eth_2_5g_pcs_16b.clk
    set_interface_property clk  PORT_NAME_MAP   {clk clk}		
    
    add_interface clk_reset reset end
    set_interface_property clk_reset EXPORT_OF eth_2_5g_pcs_16b.reset
    set_interface_property clk_reset  PORT_NAME_MAP   {reset reset}	
    
    add_interface gmii_rx_data avalon_streaming start
    set_interface_property gmii_rx_data EXPORT_OF eth_2_5g_pcs_16b.gmii_rx_data
    set_interface_property gmii_rx_data  PORT_NAME_MAP   {gmii_rx_d gmii_rx_d gmii_rx_err gmii_rx_err}	
    
    add_interface gmii_rx_enable avalon_streaming start
    set_interface_property gmii_rx_enable EXPORT_OF eth_2_5g_pcs_16b.gmii_rx_enable
    set_interface_property gmii_rx_enable  PORT_NAME_MAP   {gmii_rx_dv gmii_rx_dv}	
    
    add_interface avalon_mm_csr avalon end
    set_interface_property avalon_mm_csr EXPORT_OF eth_2_5g_pcs_16b.avalon_mm_csr
    set_interface_property avalon_mm_csr  PORT_NAME_MAP    {readdata readdata waitrequest waitrequest address address read read writedata writedata write write} 
    
    add_interface gmii_tx_data avalon_streaming end
    set_interface_property gmii_tx_data EXPORT_OF eth_2_5g_pcs_16b.gmii_tx_data
    set_interface_property gmii_tx_data  PORT_NAME_MAP    {gmii_tx_d gmii_tx_d gmii_tx_err gmii_tx_err} 
    
    add_interface gmii_tx_enable avalon_streaming end
    set_interface_property gmii_tx_enable EXPORT_OF eth_2_5g_pcs_16b.gmii_tx_enable
    set_interface_property gmii_tx_enable  PORT_NAME_MAP    {gmii_tx_en gmii_tx_en} 	
    
    add_interface tx_clk clock start
    set_interface_property tx_clk EXPORT_OF eth_2_5g_pcs_16b.tx_clk
    set_interface_property tx_clk  PORT_NAME_MAP   {tx_clk tx_clk}	
    
    add_interface tx_clk_reset reset end
    set_interface_property tx_clk_reset EXPORT_OF eth_2_5g_pcs_16b.tx_clk_reset
    set_interface_property tx_clk_reset  PORT_NAME_MAP   {reset_tx_clk reset_tx_clk}	
    
    add_interface rx_clk clock start
    set_interface_property rx_clk EXPORT_OF eth_2_5g_pcs_16b.rx_clk
    set_interface_property rx_clk  PORT_NAME_MAP   {rx_clk rx_clk}	
    
    add_interface rx_clk_reset reset end
    set_interface_property rx_clk_reset EXPORT_OF eth_2_5g_pcs_16b.rx_clk_reset
    set_interface_property rx_clk_reset  PORT_NAME_MAP   {reset_rx_clk reset_rx_clk}	
    
    add_interface led_link conduit start
    set_interface_property led_link EXPORT_OF eth_2_5g_pcs_16b.led_link
    set_interface_property led_link  PORT_NAME_MAP    {led_link led_link}
    
    add_interface led_char_err conduit start
    set_interface_property led_char_err EXPORT_OF eth_2_5g_pcs_16b.led_char_err
    set_interface_property led_char_err  PORT_NAME_MAP    {led_char_err led_char_err}
    
    add_interface led_disp_err conduit start
    set_interface_property led_disp_err EXPORT_OF eth_2_5g_pcs_16b.led_disp_err
    set_interface_property led_disp_err  PORT_NAME_MAP    {led_disp_err led_disp_err}
    
    add_interface led_an conduit start
    set_interface_property led_an EXPORT_OF eth_2_5g_pcs_16b.led_an
    set_interface_property led_an  PORT_NAME_MAP    {led_an led_an}
    
    if {[_is_phy_ip] == "5" } {
        add_interface txp conduit start
        set_interface_property txp EXPORT_OF xcvr_native.tx_serial_data
        set_interface_property txp  PORT_NAME_MAP   {txp tx_serial_data}
        
        add_interface rxp conduit end
        set_interface_property rxp EXPORT_OF xcvr_native.rx_serial_data
        set_interface_property rxp  PORT_NAME_MAP   {rxp rx_serial_data}
        
        # common ref_clk source for tx_serial_clk0 and rx_cdr_refclk0
        add_instance ref_clk_module altera_clock_bridge
        set_instance_parameter ref_clk_module EXPLICIT_CLOCK_RATE "125000000"
        add_interface          ref_clk_module                      clock           end
        set_interface_property ref_clk_module                      EXPORT_OF       ref_clk_module.in_clk

        # connect the ref_clk to native phy instance
        add_connection ref_clk_module.out_clk xcvr_native.tx_serial_clk0
        add_connection ref_clk_module.out_clk xcvr_native.rx_cdr_refclk0

        # export the following clock input interface from native phy
        add_interface tx_serial_clk hssi_serial_clock end
        set_interface_property tx_serial_clk EXPORT_OF xcvr_native.tx_serial_clk0

        add_interface rx_cdr_refclk clock end
        set_interface_property rx_cdr_refclk EXPORT_OF xcvr_native.rx_cdr_refclk0
        
        # export the interfaces below from native phy
        foreach {phyip_conduit_interface} {
           tx_analogreset \
           tx_digitalreset \
           rx_analogreset \
           rx_digitalreset \
           tx_cal_busy \
           rx_cal_busy \
           rx_set_locktodata \
           rx_set_locktoref \
           rx_is_lockedtoref \
           rx_is_lockedtodata \
           unused_tx_parallel_data \
           unused_rx_parallel_data 
          } {

           add_interface $phyip_conduit_interface conduit end
           set_interface_property $phyip_conduit_interface EXPORT_OF xcvr_native.$phyip_conduit_interface
           set_interface_property $phyip_conduit_interface PORT_NAME_MAP {$phyip_conduit_interface $phyip_conduit_interface}
        }
                     
        add_connection xcvr_native.tx_clkout/xcvr_native.tx_coreclkin
        add_connection xcvr_native.rx_clkout/xcvr_native.rx_coreclkin
        
        #need loopback to phy rx_coreclkin
        add_connection xcvr_native.rx_clkout/eth_2_5g_pcs_16b.rx_clkout  
        add_connection xcvr_native.tx_clkout/eth_2_5g_pcs_16b.tx_clkout

        add_connection xcvr_native.rx_runningdisp/eth_2_5g_pcs_16b.rx_runningdisp
        add_connection xcvr_native.rx_disperr/eth_2_5g_pcs_16b.rx_disperr
        add_connection xcvr_native.rx_errdetect/eth_2_5g_pcs_16b.rx_errdetect
        add_connection xcvr_native.rx_patterndetect/eth_2_5g_pcs_16b.rx_patterndetect
        add_connection xcvr_native.rx_syncstatus/eth_2_5g_pcs_16b.rx_syncstatus
        add_connection xcvr_native.rx_rmfifostatus/eth_2_5g_pcs_16b.rx_rmfifostatus
        
        # provide 0
        #need loopback to phy tx_coreclkin    
        add_connection eth_2_5g_pcs_16b.tx_parallel_data/xcvr_native.tx_parallel_data        
        add_connection eth_2_5g_pcs_16b.tx_datak/xcvr_native.tx_datak
        add_connection xcvr_native.rx_parallel_data/eth_2_5g_pcs_16b.rx_parallel_data
        add_connection xcvr_native.rx_datak/eth_2_5g_pcs_16b.rx_datak
        
    } elseif {[_is_phy_ip]} {
        add_interface txp conduit start
        set_interface_property txp EXPORT_OF xcvr_phy.tx_serial_data
        set_interface_property txp  PORT_NAME_MAP   {txp tx_serial_data}
        
        add_interface rxp conduit end
        set_interface_property rxp EXPORT_OF xcvr_phy.rx_serial_data
        set_interface_property rxp  PORT_NAME_MAP   {rxp rx_serial_data}
        
        add_interface reconfig_togxb conduit end
        set_interface_property reconfig_togxb EXPORT_OF xcvr_phy.reconfig_to_xcvr
        set_interface_property reconfig_togxb  PORT_NAME_MAP   {reconfig_togxb reconfig_to_xcvr}
        
        add_interface reconfig_fromgxb conduit start
        set_interface_property reconfig_fromgxb EXPORT_OF xcvr_phy.reconfig_from_xcvr
        set_interface_property reconfig_fromgxb  PORT_NAME_MAP   {reconfig_fromgxb reconfig_from_xcvr}

        if {[_is_phy_ip] != "3" 
        && [_is_phy_ip] != "4" } {
            # rx_recovered_clk not supported for Cyclone V & Arria V
            add_interface rx_recovered_clk conduit start
            set_interface_property rx_recovered_clk EXPORT_OF xcvr_phy.rx_recovered_clk
            set_interface_property rx_recovered_clk  PORT_NAME_MAP   {rx_recovered_clk rx_recovered_clk}
        }

        add_interface tx_pll_locked conduit end
        set_interface_property tx_pll_locked EXPORT_OF xcvr_phy.pll_locked
        set_interface_property tx_pll_locked  PORT_NAME_MAP   {tx_pll_locked pll_locked}

	     add_interface ref_clk clock end
        set_interface_property ref_clk EXPORT_OF xcvr_phy.pll_ref_clk
        set_interface_property ref_clk  PORT_NAME_MAP   {ref_clk pll_ref_clk}	 

        add_connection eth_2_5g_pcs_16b.phy_mgmt_clk/xcvr_phy.phy_mgmt_clk
        add_connection eth_2_5g_pcs_16b.phy_mgmt_clk_reset/xcvr_phy.phy_mgmt_clk_reset
        add_connection eth_2_5g_pcs_16b.phy_mgmt_csr/xcvr_phy.phy_mgmt
        add_connection eth_2_5g_pcs_16b.rx_clkout/xcvr_phy.rx_clkout
        add_connection eth_2_5g_pcs_16b.tx_ready/xcvr_phy.tx_ready
        add_connection eth_2_5g_pcs_16b.rx_ready/xcvr_phy.rx_ready


        # Tied off
        # add_interface tx_ready conduit end
        # set_interface_property tx_ready EXPORT_OF xcvr_phy.tx_ready
        
        # Tied off
        # add_interface rx_ready conduit end
        # set_interface_property rx_ready EXPORT_OF xcvr_phy.rx_ready
        
        add_connection xcvr_phy.rx_runningdisp/eth_2_5g_pcs_16b.rx_runningdisp
        
        add_connection xcvr_phy.rx_disperr/eth_2_5g_pcs_16b.rx_disperr
        
        add_connection xcvr_phy.rx_errdetect/eth_2_5g_pcs_16b.rx_errdetect
        
        add_connection xcvr_phy.rx_patterndetect/eth_2_5g_pcs_16b.rx_patterndetect
        
        add_connection xcvr_phy.rx_syncstatus/eth_2_5g_pcs_16b.rx_syncstatus
        
        add_connection xcvr_phy.rx_rmfifodatainserted/eth_2_5g_pcs_16b.rx_rmfifodatainserted
        
        add_connection xcvr_phy.rx_rmfifodatadeleted/eth_2_5g_pcs_16b.rx_rmfifodatadeleted
        
        add_connection xcvr_phy.rx_rlv/eth_2_5g_pcs_16b.rx_rlv
        
        add_connection xcvr_phy.tx_clkout/eth_2_5g_pcs_16b.tx_clkout
        
        add_connection eth_2_5g_pcs_16b.tx_parallel_data/xcvr_phy.tx_parallel_data
        
        add_connection eth_2_5g_pcs_16b.tx_datak/xcvr_phy.tx_datak
        
        add_connection xcvr_phy.rx_parallel_data/eth_2_5g_pcs_16b.rx_parallel_data
        
        add_connection xcvr_phy.rx_datak/eth_2_5g_pcs_16b.rx_datak
    
    } else {
        add_interface txp conduit start
        set_interface_property txp EXPORT_OF eth_2_5g_pcs_16b.txp
        set_interface_property txp  PORT_NAME_MAP   {txp txp}
        
        add_interface rxp conduit end
        set_interface_property rxp EXPORT_OF eth_2_5g_pcs_16b.rxp
        set_interface_property rxp  PORT_NAME_MAP   {rxp rxp}

		add_interface ref_clk clock end
        set_interface_property ref_clk EXPORT_OF eth_2_5g_pcs_16b.ref_clk
        set_interface_property ref_clk  PORT_NAME_MAP   {ref_clk ref_clk}	

        add_interface reconfig_togxb conduit end
        set_interface_property reconfig_togxb EXPORT_OF eth_2_5g_pcs_16b.reconfig_togxb
        set_interface_property reconfig_togxb  PORT_NAME_MAP   {reconfig_togxb reconfig_togxb}
        
        add_interface reconfig_busy conduit end
        set_interface_property reconfig_busy EXPORT_OF eth_2_5g_pcs_16b.reconfig_busy
        set_interface_property reconfig_busy  PORT_NAME_MAP   {reconfig_busy reconfig_busy}
        
        add_interface reconfig_clk conduit end
        set_interface_property reconfig_clk EXPORT_OF eth_2_5g_pcs_16b.reconfig_clk
        set_interface_property reconfig_clk  PORT_NAME_MAP   {reconfig_clk reconfig_clk}
        
        add_interface reconfig_fromgxb conduit start
        set_interface_property reconfig_fromgxb EXPORT_OF eth_2_5g_pcs_16b.reconfig_fromgxb
    	set_interface_property reconfig_fromgxb  PORT_NAME_MAP    {reconfig_fromgxb reconfig_fromgxb}

        add_interface rx_recovered_clk conduit start
        set_interface_property rx_recovered_clk EXPORT_OF eth_2_5g_pcs_16b.rx_recovered_clk
        set_interface_property rx_recovered_clk  PORT_NAME_MAP   {rx_recovered_clk rx_recovered_clk}
        
        add_interface tx_pll_locked conduit start
        set_interface_property tx_pll_locked EXPORT_OF eth_2_5g_pcs_16b.tx_pll_locked
        set_interface_property tx_pll_locked  PORT_NAME_MAP   {tx_pll_locked tx_pll_locked}	
        
        add_interface gxb_cal_blk_clk conduit end
        set_interface_property gxb_cal_blk_clk EXPORT_OF eth_2_5g_pcs_16b.gxb_cal_blk_clk
        set_interface_property gxb_cal_blk_clk  PORT_NAME_MAP    {gxb_cal_blk_clk gxb_cal_blk_clk}
        
        add_interface pll_powerdown conduit end
        set_interface_property pll_powerdown EXPORT_OF eth_2_5g_pcs_16b.pll_powerdown
        set_interface_property pll_powerdown  PORT_NAME_MAP    {pll_powerdown pll_powerdown}
        
        add_interface gxb_pwrdn_in conduit end
        set_interface_property gxb_pwrdn_in EXPORT_OF eth_2_5g_pcs_16b.gxb_pwrdn_in
        set_interface_property gxb_pwrdn_in  PORT_NAME_MAP    {gxb_pwrdn_in gxb_pwrdn_in}        
    }
    
}

proc _is_phy_ip {} {
    set device_family [get_parameter_value DEVICE_FAMILY]
    
    if {![string compare $device_family "Stratix V"]} {
        return 1;
    } elseif {![string compare $device_family "Arria V GZ"]} {
        return 2;
    } elseif {![string compare $device_family "Arria V"]} {
        return 3;
    } elseif {![string compare $device_family "Cyclone V"]} {
        return 4;
    } elseif {![string compare $device_family "Arria 10"]} {
        return 5;
    } else {
        return 0;
    }
}
