//IP Functional Simulation Model
//VERSION_BEGIN 10.1 cbx_mgl 2010:09:08:21:22:34:PN cbx_simgen 2010:09:08:21:07:32:PN  VERSION_END
// synthesis VERILOG_INPUT_VERSION VERILOG_2001
// altera message_off 10463



// Copyright (C) 1991-2010 Altera Corporation
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, Altera MegaCore Function License 
// Agreement, or other applicable license agreement, including, 
// without limitation, that your use is for the sole purpose of 
// programming logic devices manufactured by Altera and sold by 
// Altera or its authorized distributors.  Please refer to the 
// applicable agreement for further details.

// You may only use these simulation model output files for simulation
// purposes and expressly not for synthesis or any other purposes (in which
// event Altera disclaims all warranties of any kind).


//synopsys translate_off

//synthesis_resources = altera_std_synchronizer 2 dcfifo 1 lut 274 mux21 712 oper_add 2 oper_less_than 1 oper_mux 20 oper_selector 8 stratixiv_hssi_calibration_block 1 stratixiv_hssi_clock_divider 1 stratixiv_hssi_cmu 1 stratixiv_hssi_pll 1 stratixiv_hssi_tx_pcs 1 stratixiv_hssi_tx_pma 1 
`timescale 1 ps / 1 ps
module  tr_tx
	( 
	enable_crc,
	enable_ln,
	gxb4_cal_clk,
	gxb_tx_clkout,
	rst_tx,
	sdi_gxb_powerdown,
	sdi_reconfig_clk,
	sdi_reconfig_fromgxb,
	sdi_reconfig_togxb,
	sdi_tx,
	tx_ln,
	tx_pclk,
	tx_serial_refclk,
	tx_status,
	tx_std,
	tx_trs,
	txdata) /* synthesis synthesis_clearbox=1 */;
	input   [0:0]  enable_crc;
	input   [0:0]  enable_ln;
	input   gxb4_cal_clk;
	output   [0:0]  gxb_tx_clkout;
	input   rst_tx;
	input   sdi_gxb_powerdown;
	input   sdi_reconfig_clk;
	output   [16:0]  sdi_reconfig_fromgxb;
	input   [3:0]  sdi_reconfig_togxb;
	output   [0:0]  sdi_tx;
	input   [21:0]  tx_ln;
	input   tx_pclk;
	input   tx_serial_refclk;
	output   [0:0]  tx_status;
	input   [1:0]  tx_std;
	input   [0:0]  tx_trs;
	input   [19:0]  txdata;

	wire  wire_n00l0l_dout;
	wire  wire_n00lOi_dout;
	wire  [19:0]   wire_n00llO_q;
	wire  [3:0]   wire_n00llO_rdusedw;
	reg	n0000i17;
	reg	n0000i18;
	reg	n0001i19;
	reg	n0001i20;
	reg	n000ii15;
	reg	n000ii16;
	reg	n000ll13;
	reg	n000ll14;
	reg	n000Ol11;
	reg	n000Ol12;
	reg	n0011O27;
	reg	n0011O28;
	reg	n001ii25;
	reg	n001ii26;
	reg	n001li23;
	reg	n001li24;
	reg	n001Oi21;
	reg	n001Oi22;
	reg	n00i0O7;
	reg	n00i0O8;
	reg	n00i1O10;
	reg	n00i1O9;
	reg	n00ill5;
	reg	n00ill6;
	reg	n00iOl3;
	reg	n00iOl4;
	reg	n00l1l1;
	reg	n00l1l2;
	reg	n0110l43;
	reg	n0110l44;
	reg	n01lil41;
	reg	n01lil42;
	reg	n01llO39;
	reg	n01llO40;
	reg	n01lOO37;
	reg	n01lOO38;
	reg	n01O0O33;
	reg	n01O0O34;
	reg	n01O1l35;
	reg	n01O1l36;
	reg	n01Oll31;
	reg	n01Oll32;
	reg	n01OOl29;
	reg	n01OOl30;
	reg	n1OliO47;
	reg	n1OliO48;
	reg	n1Olli45;
	reg	n1Olli46;
	reg	n100i;
	reg	n100l;
	reg	n100O;
	reg	n101i;
	reg	n101l;
	reg	n101O;
	reg	n10ii;
	reg	n10il;
	reg	n10iO;
	reg	n10li;
	reg	n10ll;
	reg	n10lO;
	reg	n10Oi;
	reg	n10Ol;
	reg	n10OO;
	reg	n11il;
	reg	n11iO;
	reg	n11li;
	reg	n11ll;
	reg	n11lO;
	reg	n11Oi;
	reg	n11Ol;
	reg	n11OO;
	reg	n1i0i;
	reg	n1i0O;
	reg	n1i1i;
	reg	n1i1l;
	reg	n1i1O;
	reg	nllilO;
	reg	nlliOi;
	reg	nlliOl;
	reg	nlliOO;
	reg	nlll0i;
	reg	nlll0l;
	reg	nlll0O;
	reg	nlll1i;
	reg	nlll1l;
	reg	nlll1O;
	reg	nlllii;
	reg	nlllil;
	reg	nllliO;
	reg	nlllli;
	reg	nlllll;
	reg	nllllO;
	reg	nlllOi;
	reg	nlllOl;
	reg	nlllOO;
	reg	nllO0i;
	reg	nllO0l;
	reg	nllO0O;
	reg	nllO1i;
	reg	nllO1l;
	reg	nllO1O;
	reg	nllOii;
	reg	nllOil;
	reg	nllOiO;
	reg	n0l00i;
	reg	n0l00l;
	reg	n0l00O;
	reg	n0l01i;
	reg	n0l01l;
	reg	n0l01O;
	reg	n0l0ii;
	reg	n0l0il;
	reg	n0l0iO;
	reg	n0l0li;
	reg	n0l0ll;
	reg	n0l0lO;
	reg	n0l0Oi;
	reg	n0l0Ol;
	reg	n0l0OO;
	reg	n0l1il;
	reg	n0l1iO;
	reg	n0l1li;
	reg	n0l1ll;
	reg	n0l1lO;
	reg	n0l1Oi;
	reg	n0l1Ol;
	reg	n0l1OO;
	reg	n0li1i;
	reg	niiOii;
	reg	niiOil;
	reg	niiOiO;
	reg	niiOli;
	reg	niiOll;
	reg	niiOlO;
	reg	niiOOi;
	reg	niiOOl;
	reg	niiOOO;
	reg	nil00O;
	reg	nil01i;
	reg	nil01l;
	reg	nil01O;
	reg	nil10i;
	reg	nil10l;
	reg	nil10O;
	reg	nil11i;
	reg	nil11l;
	reg	nil11O;
	reg	nil1ii;
	reg	nil1il;
	reg	nil1iO;
	reg	nil1li;
	reg	nil1ll;
	reg	nil1lO;
	reg	nil1Oi;
	reg	nil1Ol;
	reg	nil1OO;
	reg	niO00i;
	reg	niO00l;
	reg	niO00O;
	reg	niO01i;
	reg	niO01l;
	reg	niO01O;
	reg	niO0ii;
	reg	niO0il;
	reg	niO0iO;
	reg	niO0ll;
	reg	nil0lO;
	reg	niO10O;
	reg	niO1ii;
	reg	niO1il;
	reg	niO1iO;
	reg	niO1li;
	reg	niO1ll;
	reg	niO1lO;
	reg	niO1Oi;
	reg	niO1OO;
	reg	niO1Ol_clk_prev;
	wire	wire_niO1Ol_PRN;
	reg	niO0Oi;
	reg	niO0Ol;
	reg	niO0OO;
	reg	niOi0i;
	reg	niOi0O;
	reg	niOi1i;
	reg	niOi1l;
	reg	niOi1O;
	reg	niOiil;
	wire	wire_niOiii_PRN;
	reg	nl0OOO;
	reg	nl1i0i;
	reg	nl1i0l;
	reg	nl1i0O;
	reg	nl1iii;
	reg	nl1iil;
	reg	nl1iiO;
	reg	nl1ili;
	reg	nl1ill;
	reg	nl1ilO;
	reg	nl1iOi;
	reg	nl1iOl;
	reg	nl1iOO;
	reg	nl1l0i;
	reg	nl1l0l;
	reg	nl1l0O;
	reg	nl1l1i;
	reg	nl1l1l;
	reg	nl1l1O;
	reg	nl1lii;
	reg	nl1lil;
	reg	nl1liO;
	reg	nl1lli;
	reg	nl1lll;
	reg	nl1llO;
	reg	nl1lOi;
	reg	nl1lOl;
	reg	nl1lOO;
	reg	nl1O1i;
	reg	nli00i;
	reg	nli00l;
	reg	nli00O;
	reg	nli01i;
	reg	nli01l;
	reg	nli01O;
	reg	nli0ii;
	reg	nli0il;
	reg	nli0iO;
	reg	nli0li;
	reg	nli0ll;
	reg	nli0Oi;
	reg	nli10i;
	reg	nli10l;
	reg	nli10O;
	reg	nli11i;
	reg	nli11l;
	reg	nli11O;
	reg	nli1ii;
	reg	nli1il;
	reg	nli1iO;
	reg	nli1li;
	reg	nli1ll;
	reg	nli1lO;
	reg	nli1Oi;
	reg	nli1Ol;
	reg	nli1OO;
	reg	nli0lO_clk_prev;
	wire	wire_nli0lO_PRN;
	reg	nlOii;
	reg	n0l0l;
	reg	n0l0O;
	reg	n0lii;
	reg	n0lil;
	reg	n0liO;
	reg	n0lli;
	reg	n0lll;
	reg	n0llO;
	reg	n0lOi;
	reg	n0lOl;
	reg	n0lOO;
	reg	n0O0i;
	reg	n0O0l;
	reg	n0O0O;
	reg	n0O1i;
	reg	n0O1l;
	reg	n0O1O;
	reg	n0Oii;
	reg	n0Oil;
	reg	n0OiO;
	reg	n0Oli;
	reg	n0Oll;
	reg	n0OlO;
	reg	n0OOi;
	reg	n0OOl;
	reg	n0OOO;
	reg	ni10i;
	reg	ni11i;
	reg	ni11l;
	reg	ni11O;
	reg	niO0lO;
	reg	nlOlO;
	wire	wire_nlOll_CLRN;
	wire	wire_n000i_dataout;
	wire	wire_n001i_dataout;
	wire	wire_n001l_dataout;
	wire	wire_n001O_dataout;
	wire	wire_n010i_dataout;
	wire	wire_n010l_dataout;
	wire	wire_n010O_dataout;
	wire	wire_n011l_dataout;
	wire	wire_n011O_dataout;
	wire	wire_n01ii_dataout;
	wire	wire_n01il_dataout;
	wire	wire_n01iO_dataout;
	wire	wire_n01li_dataout;
	wire	wire_n01ll_dataout;
	wire	wire_n01lO_dataout;
	wire	wire_n01Oi_dataout;
	wire	wire_n01Ol_dataout;
	wire	wire_n01OO_dataout;
	wire	wire_n0li0i_dataout;
	wire	wire_n0li0l_dataout;
	wire	wire_n0li0O_dataout;
	wire	wire_n0li1l_dataout;
	wire	wire_n0li1O_dataout;
	wire	wire_n0liii_dataout;
	wire	wire_n0liil_dataout;
	wire	wire_n0liiO_dataout;
	wire	wire_n0lili_dataout;
	wire	wire_n0lill_dataout;
	wire	wire_n0lilO_dataout;
	wire	wire_n0liOi_dataout;
	wire	wire_n0liOl_dataout;
	wire	wire_n0liOO_dataout;
	wire	wire_n0ll0i_dataout;
	wire	wire_n0ll0l_dataout;
	wire	wire_n0ll0O_dataout;
	wire	wire_n0ll1i_dataout;
	wire	wire_n0ll1l_dataout;
	wire	wire_n0ll1O_dataout;
	wire	wire_n0llii_dataout;
	wire	wire_n0llil_dataout;
	wire	wire_n0lliO_dataout;
	wire	wire_n0llli_dataout;
	wire	wire_n0llll_dataout;
	wire	wire_n0lllO_dataout;
	wire	wire_n0llOi_dataout;
	wire	wire_n0llOl_dataout;
	wire	wire_n0llOO_dataout;
	wire	wire_n0lO0i_dataout;
	wire	wire_n0lO0l_dataout;
	wire	wire_n0lO0O_dataout;
	wire	wire_n0lO1i_dataout;
	wire	wire_n0lO1l_dataout;
	wire	wire_n0lO1O_dataout;
	wire	wire_n0lOii_dataout;
	wire	wire_n0lOil_dataout;
	wire	wire_n0lOiO_dataout;
	wire	wire_n0lOli_dataout;
	wire	wire_n0lOll_dataout;
	wire	wire_n0lOlO_dataout;
	wire	wire_n0lOOi_dataout;
	wire	wire_n0lOOl_dataout;
	wire	wire_n0lOOO_dataout;
	wire	wire_n0O00i_dataout;
	wire	wire_n0O00l_dataout;
	wire	wire_n0O00O_dataout;
	wire	wire_n0O01i_dataout;
	wire	wire_n0O01l_dataout;
	wire	wire_n0O01O_dataout;
	wire	wire_n0O0ii_dataout;
	wire	wire_n0O0il_dataout;
	wire	wire_n0O0iO_dataout;
	wire	wire_n0O0li_dataout;
	wire	wire_n0O0ll_dataout;
	wire	wire_n0O0lO_dataout;
	wire	wire_n0O0Oi_dataout;
	wire	wire_n0O10i_dataout;
	wire	wire_n0O10l_dataout;
	wire	wire_n0O10O_dataout;
	wire	wire_n0O11i_dataout;
	wire	wire_n0O11l_dataout;
	wire	wire_n0O11O_dataout;
	wire	wire_n0O1ii_dataout;
	wire	wire_n0O1il_dataout;
	wire	wire_n0O1iO_dataout;
	wire	wire_n0O1li_dataout;
	wire	wire_n0O1ll_dataout;
	wire	wire_n0O1lO_dataout;
	wire	wire_n0O1Oi_dataout;
	wire	wire_n0O1Ol_dataout;
	wire	wire_n0O1OO_dataout;
	wire	wire_n0Ol0O_dataout;
	wire	wire_n0Olii_dataout;
	wire	wire_n0Olil_dataout;
	wire	wire_n0OliO_dataout;
	wire	wire_n0Olli_dataout;
	wire	wire_n0Olll_dataout;
	wire	wire_n0OllO_dataout;
	wire	wire_n0OlOi_dataout;
	wire	wire_n0OlOl_dataout;
	wire	wire_n0OlOO_dataout;
	wire	wire_n0OO0i_dataout;
	wire	wire_n0OO0l_dataout;
	wire	wire_n0OO0O_dataout;
	wire	wire_n0OO1i_dataout;
	wire	wire_n0OO1l_dataout;
	wire	wire_n0OO1O_dataout;
	wire	wire_n0OOii_dataout;
	wire	wire_n0OOil_dataout;
	wire	wire_n0OOiO_dataout;
	wire	wire_n0OOli_dataout;
	wire	wire_n0OOll_dataout;
	wire	wire_n0OOlO_dataout;
	wire	wire_n0OOOi_dataout;
	wire	wire_n0OOOl_dataout;
	wire	wire_n0OOOO_dataout;
	wire	wire_n1iii_dataout;
	wire	wire_n1iil_dataout;
	wire	wire_n1iiO_dataout;
	wire	wire_n1ili_dataout;
	wire	wire_n1ill_dataout;
	wire	wire_n1ilO_dataout;
	wire	wire_n1iOi_dataout;
	wire	wire_n1iOl_dataout;
	wire	wire_n1iOO_dataout;
	wire	wire_n1l0i_dataout;
	wire	wire_n1l0l_dataout;
	wire	wire_n1l0O_dataout;
	wire	wire_n1l1i_dataout;
	wire	wire_n1l1l_dataout;
	wire	wire_n1l1O_dataout;
	wire	wire_n1lii_dataout;
	wire	wire_n1lil_dataout;
	wire	wire_n1liO_dataout;
	wire	wire_n1lli_dataout;
	wire	wire_n1lll_dataout;
	wire	wire_n1llO_dataout;
	wire	wire_n1lOi_dataout;
	wire	wire_n1lOl_dataout;
	wire	wire_n1lOO_dataout;
	wire	wire_n1O0i_dataout;
	wire	wire_n1O0l_dataout;
	wire	wire_n1O0O_dataout;
	wire	wire_n1O1i_dataout;
	wire	wire_n1O1l_dataout;
	wire	wire_n1O1O_dataout;
	wire	wire_n1Oii_dataout;
	wire	wire_n1Oil_dataout;
	wire	wire_n1OiO_dataout;
	wire	wire_n1Oli_dataout;
	wire	wire_n1Oll_dataout;
	wire	wire_n1OlO_dataout;
	wire	wire_n1OOi_dataout;
	wire	wire_n1OOl_dataout;
	wire	wire_ni000i_dataout;
	wire	wire_ni000l_dataout;
	wire	wire_ni000O_dataout;
	wire	wire_ni001i_dataout;
	wire	wire_ni001l_dataout;
	wire	wire_ni001O_dataout;
	wire	wire_ni00i_dataout;
	wire	wire_ni00ii_dataout;
	wire	wire_ni00il_dataout;
	wire	wire_ni00iO_dataout;
	wire	wire_ni00l_dataout;
	wire	wire_ni00li_dataout;
	wire	wire_ni00ll_dataout;
	wire	wire_ni00lO_dataout;
	wire	wire_ni00O_dataout;
	wire	wire_ni00Oi_dataout;
	wire	wire_ni00Ol_dataout;
	wire	wire_ni00OO_dataout;
	wire	wire_ni010i_dataout;
	wire	wire_ni010l_dataout;
	wire	wire_ni010O_dataout;
	wire	wire_ni011i_dataout;
	wire	wire_ni011l_dataout;
	wire	wire_ni011O_dataout;
	wire	wire_ni01i_dataout;
	wire	wire_ni01ii_dataout;
	wire	wire_ni01il_dataout;
	wire	wire_ni01iO_dataout;
	wire	wire_ni01l_dataout;
	wire	wire_ni01li_dataout;
	wire	wire_ni01ll_dataout;
	wire	wire_ni01lO_dataout;
	wire	wire_ni01O_dataout;
	wire	wire_ni01Oi_dataout;
	wire	wire_ni01Ol_dataout;
	wire	wire_ni01OO_dataout;
	wire	wire_ni0i0i_dataout;
	wire	wire_ni0i0l_dataout;
	wire	wire_ni0i0O_dataout;
	wire	wire_ni0i1i_dataout;
	wire	wire_ni0i1l_dataout;
	wire	wire_ni0i1O_dataout;
	wire	wire_ni0ii_dataout;
	wire	wire_ni0iii_dataout;
	wire	wire_ni0iil_dataout;
	wire	wire_ni0iiO_dataout;
	wire	wire_ni0il_dataout;
	wire	wire_ni0ili_dataout;
	wire	wire_ni0ill_dataout;
	wire	wire_ni0ilO_dataout;
	wire	wire_ni0iO_dataout;
	wire	wire_ni0iOi_dataout;
	wire	wire_ni0iOl_dataout;
	wire	wire_ni0iOO_dataout;
	wire	wire_ni0l0i_dataout;
	wire	wire_ni0l0l_dataout;
	wire	wire_ni0l0O_dataout;
	wire	wire_ni0l1i_dataout;
	wire	wire_ni0l1l_dataout;
	wire	wire_ni0l1O_dataout;
	wire	wire_ni0lii_dataout;
	wire	wire_ni0lil_dataout;
	wire	wire_ni0liO_dataout;
	wire	wire_ni0lli_dataout;
	wire	wire_ni0lll_dataout;
	wire	wire_ni0llO_dataout;
	wire	wire_ni0lOi_dataout;
	wire	wire_ni0lOl_dataout;
	wire	wire_ni0lOO_dataout;
	wire	wire_ni0O0i_dataout;
	wire	wire_ni0O0l_dataout;
	wire	wire_ni0O0O_dataout;
	wire	wire_ni0O1i_dataout;
	wire	wire_ni0O1l_dataout;
	wire	wire_ni0O1O_dataout;
	wire	wire_ni0Oii_dataout;
	wire	wire_ni0Oil_dataout;
	wire	wire_ni0OiO_dataout;
	wire	wire_ni0Oli_dataout;
	wire	wire_ni0Oll_dataout;
	wire	wire_ni0OlO_dataout;
	wire	wire_ni0OOi_dataout;
	wire	wire_ni0OOl_dataout;
	wire	wire_ni0OOO_dataout;
	wire	wire_ni100i_dataout;
	wire	wire_ni100l_dataout;
	wire	wire_ni100O_dataout;
	wire	wire_ni101i_dataout;
	wire	wire_ni101l_dataout;
	wire	wire_ni101O_dataout;
	wire	wire_ni10ii_dataout;
	wire	wire_ni10il_dataout;
	wire	wire_ni10iO_dataout;
	wire	wire_ni10l_dataout;
	wire	wire_ni10li_dataout;
	wire	wire_ni10ll_dataout;
	wire	wire_ni10lO_dataout;
	wire	wire_ni10O_dataout;
	wire	wire_ni10Oi_dataout;
	wire	wire_ni10Ol_dataout;
	wire	wire_ni10OO_dataout;
	wire	wire_ni110i_dataout;
	wire	wire_ni110l_dataout;
	wire	wire_ni110O_dataout;
	wire	wire_ni111i_dataout;
	wire	wire_ni111l_dataout;
	wire	wire_ni111O_dataout;
	wire	wire_ni11ii_dataout;
	wire	wire_ni11il_dataout;
	wire	wire_ni11iO_dataout;
	wire	wire_ni11li_dataout;
	wire	wire_ni11ll_dataout;
	wire	wire_ni11lO_dataout;
	wire	wire_ni11Oi_dataout;
	wire	wire_ni11Ol_dataout;
	wire	wire_ni11OO_dataout;
	wire	wire_ni1i0i_dataout;
	wire	wire_ni1i0l_dataout;
	wire	wire_ni1i0O_dataout;
	wire	wire_ni1i1i_dataout;
	wire	wire_ni1i1l_dataout;
	wire	wire_ni1i1O_dataout;
	wire	wire_ni1ii_dataout;
	wire	wire_ni1iii_dataout;
	wire	wire_ni1iil_dataout;
	wire	wire_ni1iiO_dataout;
	wire	wire_ni1il_dataout;
	wire	wire_ni1ili_dataout;
	wire	wire_ni1ill_dataout;
	wire	wire_ni1ilO_dataout;
	wire	wire_ni1iO_dataout;
	wire	wire_ni1iOi_dataout;
	wire	wire_ni1iOl_dataout;
	wire	wire_ni1iOO_dataout;
	wire	wire_ni1l0i_dataout;
	wire	wire_ni1l0l_dataout;
	wire	wire_ni1l0O_dataout;
	wire	wire_ni1l1i_dataout;
	wire	wire_ni1l1l_dataout;
	wire	wire_ni1l1O_dataout;
	wire	wire_ni1li_dataout;
	wire	wire_ni1lii_dataout;
	wire	wire_ni1lil_dataout;
	wire	wire_ni1liO_dataout;
	wire	wire_ni1ll_dataout;
	wire	wire_ni1lli_dataout;
	wire	wire_ni1lll_dataout;
	wire	wire_ni1llO_dataout;
	wire	wire_ni1lO_dataout;
	wire	wire_ni1lOi_dataout;
	wire	wire_ni1lOl_dataout;
	wire	wire_ni1lOO_dataout;
	wire	wire_ni1O0i_dataout;
	wire	wire_ni1O0l_dataout;
	wire	wire_ni1O0O_dataout;
	wire	wire_ni1O1i_dataout;
	wire	wire_ni1O1l_dataout;
	wire	wire_ni1O1O_dataout;
	wire	wire_ni1Oi_dataout;
	wire	wire_ni1Oii_dataout;
	wire	wire_ni1Oil_dataout;
	wire	wire_ni1OiO_dataout;
	wire	wire_ni1Ol_dataout;
	wire	wire_ni1Oli_dataout;
	wire	wire_ni1Oll_dataout;
	wire	wire_ni1OlO_dataout;
	wire	wire_ni1OO_dataout;
	wire	wire_ni1OOi_dataout;
	wire	wire_ni1OOl_dataout;
	wire	wire_ni1OOO_dataout;
	wire	wire_nii00i_dataout;
	wire	wire_nii00l_dataout;
	wire	wire_nii00O_dataout;
	wire	wire_nii01i_dataout;
	wire	wire_nii01l_dataout;
	wire	wire_nii01O_dataout;
	wire	wire_nii0ii_dataout;
	wire	wire_nii0il_dataout;
	wire	wire_nii0iO_dataout;
	wire	wire_nii0li_dataout;
	wire	wire_nii0ll_dataout;
	wire	wire_nii0lO_dataout;
	wire	wire_nii0Oi_dataout;
	wire	wire_nii0Ol_dataout;
	wire	wire_nii0OO_dataout;
	wire	wire_nii10i_dataout;
	wire	wire_nii10l_dataout;
	wire	wire_nii10O_dataout;
	wire	wire_nii11i_dataout;
	wire	wire_nii11l_dataout;
	wire	wire_nii11O_dataout;
	wire	wire_nii1ii_dataout;
	wire	wire_nii1il_dataout;
	wire	wire_nii1iO_dataout;
	wire	wire_nii1li_dataout;
	wire	wire_nii1ll_dataout;
	wire	wire_nii1lO_dataout;
	wire	wire_nii1Oi_dataout;
	wire	wire_nii1Ol_dataout;
	wire	wire_nii1OO_dataout;
	wire	wire_niii0i_dataout;
	wire	wire_niii0l_dataout;
	wire	wire_niii0O_dataout;
	wire	wire_niii1i_dataout;
	wire	wire_niii1l_dataout;
	wire	wire_niii1O_dataout;
	wire	wire_niiiii_dataout;
	wire	wire_niiiil_dataout;
	wire	wire_niiiiO_dataout;
	wire	wire_niiili_dataout;
	wire	wire_niiill_dataout;
	wire	wire_niiilO_dataout;
	wire	wire_niiiOi_dataout;
	wire	wire_niil0i_dataout;
	wire	wire_niil0l_dataout;
	wire	wire_niil0O_dataout;
	wire	wire_niil1l_dataout;
	wire	wire_niil1O_dataout;
	wire	wire_niilii_dataout;
	wire	wire_niilil_dataout;
	wire	wire_niiliO_dataout;
	wire	wire_niilli_dataout;
	wire	wire_niilll_dataout;
	wire	wire_niillO_dataout;
	wire	wire_niilOi_dataout;
	wire	wire_niilOl_dataout;
	wire	wire_niilOO_dataout;
	wire	wire_niiO0i_dataout;
	wire	wire_niiO0l_dataout;
	wire	wire_niiO0O_dataout;
	wire	wire_niiO1i_dataout;
	wire	wire_niiO1l_dataout;
	wire	wire_niiO1O_dataout;
	wire	wire_nil00i_dataout;
	wire	wire_nil0ii_dataout;
	wire	wire_nil0il_dataout;
	wire	wire_nil0iO_dataout;
	wire	wire_nil0li_dataout;
	wire	wire_nil0ll_dataout;
	wire	wire_nil0Oi_dataout;
	wire	wire_nil0Ol_dataout;
	wire	wire_nil0OO_dataout;
	wire	wire_nili1i_dataout;
	wire	wire_niliil_dataout;
	wire	wire_niliiO_dataout;
	wire	wire_nilili_dataout;
	wire	wire_nilill_dataout;
	wire	wire_nililO_dataout;
	wire	wire_niliOi_dataout;
	wire	wire_niliOl_dataout;
	wire	wire_niliOO_dataout;
	wire	wire_nill0i_dataout;
	wire	wire_nill0l_dataout;
	wire	wire_nill0O_dataout;
	wire	wire_nill1i_dataout;
	wire	wire_nill1l_dataout;
	wire	wire_nill1O_dataout;
	wire	wire_nillii_dataout;
	wire	wire_nillil_dataout;
	wire	wire_nilliO_dataout;
	wire	wire_nillli_dataout;
	wire	wire_nillll_dataout;
	wire	wire_nilllO_dataout;
	wire	wire_nillOi_dataout;
	wire	wire_nillOl_dataout;
	wire	wire_nillOO_dataout;
	wire	wire_nilO0i_dataout;
	wire	wire_nilO0l_dataout;
	wire	wire_nilO0O_dataout;
	wire	wire_nilO1i_dataout;
	wire	wire_nilO1l_dataout;
	wire	wire_nilO1O_dataout;
	wire	wire_nilOii_dataout;
	wire	wire_nilOil_dataout;
	wire	wire_nilOiO_dataout;
	wire	wire_nilOli_dataout;
	wire	wire_nilOll_dataout;
	wire	wire_nilOlO_dataout;
	wire	wire_nilOOi_dataout;
	wire	wire_nilOOl_dataout;
	wire	wire_nilOOO_dataout;
	wire	wire_niO10i_dataout;
	wire	wire_niO10l_dataout;
	wire	wire_niO11i_dataout;
	wire	wire_niO11l_dataout;
	wire	wire_niO11O_dataout;
	wire	wire_niOlil_dataout;
	wire	wire_niOlll_dataout;
	wire	wire_niOllO_dataout;
	wire	wire_niOlOi_dataout;
	wire	wire_niOlOl_dataout;
	wire	wire_niOlOO_dataout;
	wire	wire_niOO0i_dataout;
	wire	wire_niOO0l_dataout;
	wire	wire_niOO0O_dataout;
	wire	wire_niOO1i_dataout;
	wire	wire_niOO1l_dataout;
	wire	wire_niOO1O_dataout;
	wire	wire_niOOii_dataout;
	wire	wire_niOOil_dataout;
	wire	wire_niOOiO_dataout;
	wire	wire_niOOli_dataout;
	wire	wire_niOOll_dataout;
	wire	wire_niOOlO_dataout;
	wire	wire_niOOOi_dataout;
	wire	wire_niOOOl_dataout;
	wire	wire_niOOOO_dataout;
	wire	wire_nl000i_dataout;
	wire	wire_nl000l_dataout;
	wire	wire_nl000O_dataout;
	wire	wire_nl001i_dataout;
	wire	wire_nl001l_dataout;
	wire	wire_nl001O_dataout;
	wire	wire_nl00i_dataout;
	wire	wire_nl00ii_dataout;
	wire	wire_nl00il_dataout;
	wire	wire_nl00iO_dataout;
	wire	wire_nl00l_dataout;
	wire	wire_nl00lO_dataout;
	wire	wire_nl00O_dataout;
	wire	wire_nl00Oi_dataout;
	wire	wire_nl00Ol_dataout;
	wire	wire_nl00OO_dataout;
	wire	wire_nl010i_dataout;
	wire	wire_nl010l_dataout;
	wire	wire_nl010O_dataout;
	wire	wire_nl011i_dataout;
	wire	wire_nl011l_dataout;
	wire	wire_nl011O_dataout;
	wire	wire_nl01i_dataout;
	wire	wire_nl01ii_dataout;
	wire	wire_nl01il_dataout;
	wire	wire_nl01iO_dataout;
	wire	wire_nl01l_dataout;
	wire	wire_nl01li_dataout;
	wire	wire_nl01ll_dataout;
	wire	wire_nl01lO_dataout;
	wire	wire_nl01O_dataout;
	wire	wire_nl01Oi_dataout;
	wire	wire_nl01Ol_dataout;
	wire	wire_nl01OO_dataout;
	wire	wire_nl0i0i_dataout;
	wire	wire_nl0i0l_dataout;
	wire	wire_nl0i0O_dataout;
	wire	wire_nl0i1i_dataout;
	wire	wire_nl0i1l_dataout;
	wire	wire_nl0i1O_dataout;
	wire	wire_nl0ii_dataout;
	wire	wire_nl0iii_dataout;
	wire	wire_nl0iil_dataout;
	wire	wire_nl0iiO_dataout;
	wire	wire_nl0il_dataout;
	wire	wire_nl0ili_dataout;
	wire	wire_nl0ill_dataout;
	wire	wire_nl0ilO_dataout;
	wire	wire_nl0iO_dataout;
	wire	wire_nl0iOi_dataout;
	wire	wire_nl0iOl_dataout;
	wire	wire_nl0li_dataout;
	wire	wire_nl0ll_dataout;
	wire	wire_nl0lO_dataout;
	wire	wire_nl0Oi_dataout;
	wire	wire_nl0Ol_dataout;
	wire	wire_nl0OO_dataout;
	wire	wire_nl100i_dataout;
	wire	wire_nl100l_dataout;
	wire	wire_nl100O_dataout;
	wire	wire_nl101i_dataout;
	wire	wire_nl101l_dataout;
	wire	wire_nl101O_dataout;
	wire	wire_nl10ii_dataout;
	wire	wire_nl10il_dataout;
	wire	wire_nl10iO_dataout;
	wire	wire_nl10li_dataout;
	wire	wire_nl10ll_dataout;
	wire	wire_nl10lO_dataout;
	wire	wire_nl10Oi_dataout;
	wire	wire_nl10Ol_dataout;
	wire	wire_nl10OO_dataout;
	wire	wire_nl110i_dataout;
	wire	wire_nl110l_dataout;
	wire	wire_nl110O_dataout;
	wire	wire_nl111i_dataout;
	wire	wire_nl111l_dataout;
	wire	wire_nl111O_dataout;
	wire	wire_nl11ii_dataout;
	wire	wire_nl11il_dataout;
	wire	wire_nl11iO_dataout;
	wire	wire_nl11lO_dataout;
	wire	wire_nl11Oi_dataout;
	wire	wire_nl11Ol_dataout;
	wire	wire_nl11OO_dataout;
	wire	wire_nl1i1i_dataout;
	wire	wire_nl1li_dataout;
	wire	wire_nl1ll_dataout;
	wire	wire_nl1lO_dataout;
	wire	wire_nl1O0i_dataout;
	wire	wire_nl1O0l_dataout;
	wire	wire_nl1O0O_dataout;
	wire	wire_nl1O1l_dataout;
	wire	wire_nl1O1O_dataout;
	wire	wire_nl1Oi_dataout;
	wire	wire_nl1Oii_dataout;
	wire	wire_nl1Oil_dataout;
	wire	wire_nl1OiO_dataout;
	wire	wire_nl1Ol_dataout;
	wire	wire_nl1Oli_dataout;
	wire	wire_nl1Oll_dataout;
	wire	wire_nl1OlO_dataout;
	wire	wire_nl1OO_dataout;
	wire	wire_nl1OOi_dataout;
	wire	wire_nl1OOl_dataout;
	wire	wire_nl1OOO_dataout;
	wire	wire_nli0i_dataout;
	wire	wire_nli0l_dataout;
	wire	wire_nli0O_dataout;
	wire	wire_nli0Ol_dataout;
	wire	wire_nli0OO_dataout;
	wire	wire_nli1i_dataout;
	wire	wire_nli1l_dataout;
	wire	wire_nli1O_dataout;
	wire	wire_nlii0i_dataout;
	wire	wire_nlii0l_dataout;
	wire	wire_nlii0O_dataout;
	wire	wire_nlii1i_dataout;
	wire	wire_nlii1l_dataout;
	wire	wire_nlii1O_dataout;
	wire	wire_nliii_dataout;
	wire	wire_nliiii_dataout;
	wire	wire_nliiil_dataout;
	wire	wire_nliiiO_dataout;
	wire	wire_nliil_dataout;
	wire	wire_nliili_dataout;
	wire	wire_nliill_dataout;
	wire	wire_nliilO_dataout;
	wire	wire_nliiO_dataout;
	wire	wire_nliiOi_dataout;
	wire	wire_nliiOl_dataout;
	wire	wire_nliiOO_dataout;
	wire	wire_nlil0i_dataout;
	wire	wire_nlil0l_dataout;
	wire	wire_nlil0O_dataout;
	wire	wire_nlil1i_dataout;
	wire	wire_nlil1l_dataout;
	wire	wire_nlil1O_dataout;
	wire	wire_nlili_dataout;
	wire	wire_nlilii_dataout;
	wire	wire_nlilil_dataout;
	wire	wire_nliliO_dataout;
	wire	wire_nlill_dataout;
	wire	wire_nlilli_dataout;
	wire	wire_nlilll_dataout;
	wire	wire_nlillO_dataout;
	wire	wire_nlilO_dataout;
	wire	wire_nlilOi_dataout;
	wire	wire_nlilOl_dataout;
	wire	wire_nlilOO_dataout;
	wire	wire_nliO0i_dataout;
	wire	wire_nliO0l_dataout;
	wire	wire_nliO0O_dataout;
	wire	wire_nliO1i_dataout;
	wire	wire_nliO1l_dataout;
	wire	wire_nliO1O_dataout;
	wire	wire_nliOi_dataout;
	wire	wire_nliOiO_dataout;
	wire	wire_nliOl_dataout;
	wire	wire_nliOli_dataout;
	wire	wire_nliOll_dataout;
	wire	wire_nliOlO_dataout;
	wire	wire_nliOO_dataout;
	wire	wire_nliOOi_dataout;
	wire	wire_nliOOl_dataout;
	wire	wire_nliOOO_dataout;
	wire	wire_nll0i_dataout;
	wire	wire_nll10i_dataout;
	wire	wire_nll10l_dataout;
	wire	wire_nll10O_dataout;
	wire	wire_nll11i_dataout;
	wire	wire_nll11l_dataout;
	wire	wire_nll11O_dataout;
	wire	wire_nll1i_dataout;
	wire	wire_nll1ii_dataout;
	wire	wire_nll1il_dataout;
	wire	wire_nll1iO_dataout;
	wire	wire_nll1l_dataout;
	wire	wire_nll1li_dataout;
	wire	wire_nll1ll_dataout;
	wire	wire_nll1O_dataout;
	wire	wire_nlliO_dataout;
	wire	wire_nllli_dataout;
	wire	wire_nllll_dataout;
	wire	wire_nlllO_dataout;
	wire	wire_nllOi_dataout;
	wire	wire_nllOl_dataout;
	wire	wire_nllOli_dataout;
	wire	wire_nllOll_dataout;
	wire	wire_nllOlO_dataout;
	wire	wire_nllOO_dataout;
	wire	wire_nllOOi_dataout;
	wire	wire_nllOOl_dataout;
	wire	wire_nllOOO_dataout;
	wire	wire_nlO00i_dataout;
	wire	wire_nlO00l_dataout;
	wire	wire_nlO00O_dataout;
	wire	wire_nlO01i_dataout;
	wire	wire_nlO01l_dataout;
	wire	wire_nlO01O_dataout;
	wire	wire_nlO0i_dataout;
	wire	wire_nlO0ii_dataout;
	wire	wire_nlO0il_dataout;
	wire	wire_nlO0iO_dataout;
	wire	wire_nlO0l_dataout;
	wire	wire_nlO0li_dataout;
	wire	wire_nlO0ll_dataout;
	wire	wire_nlO0lO_dataout;
	wire	wire_nlO0Oi_dataout;
	wire	wire_nlO0Ol_dataout;
	wire	wire_nlO0OO_dataout;
	wire	wire_nlO10i_dataout;
	wire	wire_nlO10l_dataout;
	wire	wire_nlO10O_dataout;
	wire	wire_nlO11i_dataout;
	wire	wire_nlO11l_dataout;
	wire	wire_nlO11O_dataout;
	wire	wire_nlO1i_dataout;
	wire	wire_nlO1ii_dataout;
	wire	wire_nlO1il_dataout;
	wire	wire_nlO1iO_dataout;
	wire	wire_nlO1l_dataout;
	wire	wire_nlO1li_dataout;
	wire	wire_nlO1ll_dataout;
	wire	wire_nlO1lO_dataout;
	wire	wire_nlO1O_dataout;
	wire	wire_nlO1Oi_dataout;
	wire	wire_nlO1Ol_dataout;
	wire	wire_nlO1OO_dataout;
	wire	wire_nlOi0l_dataout;
	wire	wire_nlOi0O_dataout;
	wire	wire_nlOi1i_dataout;
	wire	wire_nlOi1l_dataout;
	wire	wire_nlOiii_dataout;
	wire	wire_nlOiil_dataout;
	wire	wire_nlOiiO_dataout;
	wire	wire_nlOil_dataout;
	wire	wire_nlOili_dataout;
	wire	wire_nlOill_dataout;
	wire	wire_nlOilO_dataout;
	wire	wire_nlOiO_dataout;
	wire	wire_nlOiOi_dataout;
	wire	wire_nlOiOl_dataout;
	wire	wire_nlOiOO_dataout;
	wire	wire_nlOl0i_dataout;
	wire	wire_nlOl0l_dataout;
	wire	wire_nlOl0O_dataout;
	wire	wire_nlOl1i_dataout;
	wire	wire_nlOl1l_dataout;
	wire	wire_nlOl1O_dataout;
	wire	wire_nlOlii_dataout;
	wire	wire_nlOOi_dataout;
	wire  [3:0]   wire_n0O0Ol_o;
	wire  [3:0]   wire_nili1l_o;
	wire  wire_n0Ol0l_o;
	wire  wire_n0O0OO_o;
	wire  wire_n0Oi0i_o;
	wire  wire_n0Oi0l_o;
	wire  wire_n0Oi0O_o;
	wire  wire_n0Oi1i_o;
	wire  wire_n0Oi1l_o;
	wire  wire_n0Oi1O_o;
	wire  wire_n0Oiii_o;
	wire  wire_n0Oiil_o;
	wire  wire_n0OiiO_o;
	wire  wire_n0Oili_o;
	wire  wire_n0Oill_o;
	wire  wire_n0OilO_o;
	wire  wire_n0OiOi_o;
	wire  wire_n0OiOl_o;
	wire  wire_n0OiOO_o;
	wire  wire_n0Ol0i_o;
	wire  wire_n0Ol1i_o;
	wire  wire_n0Ol1l_o;
	wire  wire_n0Ol1O_o;
	wire  wire_niOiiO_o;
	wire  wire_niOill_o;
	wire  wire_niOiOi_o;
	wire  wire_niOiOO_o;
	wire  wire_niOl0i_o;
	wire  wire_niOl0O_o;
	wire  wire_niOl1l_o;
	wire  wire_niOliO_o;
	wire  wire_n00lll_nonusertocmu;
	wire  [1:0]   wire_n00lli_analogfastrefclkout;
	wire  [1:0]   wire_n00lli_analogrefclkout;
	wire  wire_n00lli_analogrefclkpulse;
	wire  [99:0]   wire_n00lli_dprioout;
	wire  [599:0]   wire_n00liO_cmudividerdprioout;
	wire  [1799:0]   wire_n00liO_cmuplldprioout;
	wire  wire_n00liO_dpriodisableout;
	wire  wire_n00liO_dprioout;
	wire  [1:0]   wire_n00liO_pllpowerdn;
	wire  [1:0]   wire_n00liO_pllresetout;
	wire  wire_n00liO_quadresetout;
	wire  [5:0]   wire_n00liO_txanalogresetout;
	wire  [3:0]   wire_n00liO_txctrlout;
	wire  [31:0]   wire_n00liO_txdataout;
	wire  [5:0]   wire_n00liO_txdetectrxpowerdown;
	wire  [3:0]   wire_n00liO_txdigitalresetout;
	wire  [5:0]   wire_n00liO_txobpowerdown;
	wire  [599:0]   wire_n00liO_txpcsdprioout;
	wire  [1799:0]   wire_n00liO_txpmadprioout;
	wire  [3:0]   wire_n00lil_clk;
	wire  [299:0]   wire_n00lil_dprioout;
	wire  wire_n00lil_locked;
	wire  wire_n00lii_clkout;
	wire  [19:0]   wire_n00lii_dataout;
	wire  [149:0]   wire_n00lii_dprioout;
	wire  wire_n00lii_txdetectrx;
	wire  wire_n00l0O_clockout;
	wire  wire_n00l0O_dataout;
	wire  [299:0]   wire_n00l0O_dprioout;
	wire  n0000O;
	wire  n0001O;
	wire  n000iO;
	wire  n000li;
	wire  n000Oi;
	wire  n0010l;
	wire  n0010O;
	wire  n0011i;
	wire  n0011l;
	wire  n001iO;
	wire  n001lO;
	wire  n001OO;
	wire  n00i0l;
	wire  n00i1i;
	wire  n00i1l;
	wire  n00iil;
	wire  n00iiO;
	wire  n00ili;
	wire  n00iOi;
	wire  n00l1i;
	wire  n00l1O;
	wire  n0100i;
	wire  n0100l;
	wire  n0100O;
	wire  n0101i;
	wire  n0101l;
	wire  n0101O;
	wire  n010ii;
	wire  n010il;
	wire  n010iO;
	wire  n010li;
	wire  n010ll;
	wire  n010lO;
	wire  n010Oi;
	wire  n010Ol;
	wire  n010OO;
	wire  n0110i;
	wire  n0110O;
	wire  n0111i;
	wire  n0111l;
	wire  n0111O;
	wire  n011ii;
	wire  n011il;
	wire  n011iO;
	wire  n011li;
	wire  n011ll;
	wire  n011lO;
	wire  n011Oi;
	wire  n011Ol;
	wire  n011OO;
	wire  n01i0i;
	wire  n01i0l;
	wire  n01i0O;
	wire  n01i1i;
	wire  n01i1l;
	wire  n01i1O;
	wire  n01iii;
	wire  n01iil;
	wire  n01iiO;
	wire  n01ili;
	wire  n01ill;
	wire  n01ilO;
	wire  n01iOi;
	wire  n01iOl;
	wire  n01iOO;
	wire  n01l0i;
	wire  n01l0l;
	wire  n01l0O;
	wire  n01l1i;
	wire  n01l1l;
	wire  n01l1O;
	wire  n01lii;
	wire  n01lli;
	wire  n01lll;
	wire  n01lOl;
	wire  n01O0i;
	wire  n01O0l;
	wire  n01Oil;
	wire  n01OiO;
	wire  n01Oli;
	wire  n01OOi;
	wire  n1Olil;
	wire  n1Olll;
	wire  n1OllO;
	wire  n1OlOi;
	wire  n1OlOl;
	wire  n1OlOO;
	wire  n1OO0i;
	wire  n1OO0l;
	wire  n1OO0O;
	wire  n1OO1i;
	wire  n1OO1l;
	wire  n1OO1O;
	wire  n1OOii;
	wire  n1OOil;
	wire  n1OOiO;
	wire  n1OOli;
	wire  n1OOll;
	wire  n1OOlO;
	wire  n1OOOi;
	wire  n1OOOl;
	wire  n1OOOO;

	altera_std_synchronizer   n00l0l
	( 
	.clk(tx_pclk),
	.din(rst_tx),
	.dout(wire_n00l0l_dout),
	.reset_n(1'b1));
	defparam
		n00l0l.depth = 4;
	altera_std_synchronizer   n00lOi
	( 
	.clk(wire_n00lii_clkout),
	.din(wire_n00l0l_dout),
	.dout(wire_n00lOi_dout),
	.reset_n(1'b1));
	defparam
		n00lOi.depth = 3;
	dcfifo   n00llO
	( 
	.aclr(wire_n00l0l_dout),
	.data({wire_nillOi_dataout, wire_nilllO_dataout, wire_nillll_dataout, wire_nillli_dataout, wire_nilliO_dataout, wire_nillil_dataout, wire_nillii_dataout, wire_nill0O_dataout, wire_nill0l_dataout, wire_nill0i_dataout, wire_nill1O_dataout, wire_nill1l_dataout, wire_nill1i_dataout, wire_niliOO_dataout, wire_niliOl_dataout, wire_niliOi_dataout, wire_nililO_dataout, wire_nilill_dataout, wire_nilili_dataout, wire_niliiO_dataout}),
	.q(wire_n00llO_q),
	.rdclk(wire_n00lii_clkout),
	.rdempty(),
	.rdfull(),
	.rdreq(nil1Oi),
	.rdusedw(wire_n00llO_rdusedw),
	.wrclk(tx_pclk),
	.wrempty(),
	.wrfull(),
	.wrreq(wire_niO10i_dataout),
	.wrusedw());
	defparam
		n00llO.add_ram_output_register = "OFF",
		n00llO.add_usedw_msb_bit = "OFF",
		n00llO.clocks_are_synchronized = "FALSE",
		n00llO.delay_rdusedw = 1,
		n00llO.delay_wrusedw = 1,
		n00llO.intended_device_family = "Stratix IV",
		n00llO.lpm_numwords = 16,
		n00llO.lpm_showahead = "OFF",
		n00llO.lpm_width = 20,
		n00llO.lpm_widthu = 4,
		n00llO.overflow_checking = "ON",
		n00llO.rdsync_delaypipe = 5,
		n00llO.underflow_checking = "ON",
		n00llO.use_eab = "ON",
		n00llO.write_aclr_synch = "OFF",
		n00llO.wrsync_delaypipe = 5,
		n00llO.lpm_hint = "MAXIMIZE_SPEED=5, WIDTH_BYTEENA=1";
	initial
		n0000i17 = 0;
	always @ ( posedge tx_pclk)
		  n0000i17 <= n0000i18;
	event n0000i17_event;
	initial
		#1 ->n0000i17_event;
	always @(n0000i17_event)
		n0000i17 <= {1{1'b1}};
	initial
		n0000i18 = 0;
	always @ ( posedge tx_pclk)
		  n0000i18 <= n0000i17;
	initial
		n0001i19 = 0;
	always @ ( posedge tx_pclk)
		  n0001i19 <= n0001i20;
	event n0001i19_event;
	initial
		#1 ->n0001i19_event;
	always @(n0001i19_event)
		n0001i19 <= {1{1'b1}};
	initial
		n0001i20 = 0;
	always @ ( posedge tx_pclk)
		  n0001i20 <= n0001i19;
	initial
		n000ii15 = 0;
	always @ ( posedge tx_pclk)
		  n000ii15 <= n000ii16;
	event n000ii15_event;
	initial
		#1 ->n000ii15_event;
	always @(n000ii15_event)
		n000ii15 <= {1{1'b1}};
	initial
		n000ii16 = 0;
	always @ ( posedge tx_pclk)
		  n000ii16 <= n000ii15;
	initial
		n000ll13 = 0;
	always @ ( posedge tx_pclk)
		  n000ll13 <= n000ll14;
	event n000ll13_event;
	initial
		#1 ->n000ll13_event;
	always @(n000ll13_event)
		n000ll13 <= {1{1'b1}};
	initial
		n000ll14 = 0;
	always @ ( posedge tx_pclk)
		  n000ll14 <= n000ll13;
	initial
		n000Ol11 = 0;
	always @ ( posedge tx_pclk)
		  n000Ol11 <= n000Ol12;
	event n000Ol11_event;
	initial
		#1 ->n000Ol11_event;
	always @(n000Ol11_event)
		n000Ol11 <= {1{1'b1}};
	initial
		n000Ol12 = 0;
	always @ ( posedge tx_pclk)
		  n000Ol12 <= n000Ol11;
	initial
		n0011O27 = 0;
	always @ ( posedge tx_pclk)
		  n0011O27 <= n0011O28;
	event n0011O27_event;
	initial
		#1 ->n0011O27_event;
	always @(n0011O27_event)
		n0011O27 <= {1{1'b1}};
	initial
		n0011O28 = 0;
	always @ ( posedge tx_pclk)
		  n0011O28 <= n0011O27;
	initial
		n001ii25 = 0;
	always @ ( posedge tx_pclk)
		  n001ii25 <= n001ii26;
	event n001ii25_event;
	initial
		#1 ->n001ii25_event;
	always @(n001ii25_event)
		n001ii25 <= {1{1'b1}};
	initial
		n001ii26 = 0;
	always @ ( posedge tx_pclk)
		  n001ii26 <= n001ii25;
	initial
		n001li23 = 0;
	always @ ( posedge tx_pclk)
		  n001li23 <= n001li24;
	event n001li23_event;
	initial
		#1 ->n001li23_event;
	always @(n001li23_event)
		n001li23 <= {1{1'b1}};
	initial
		n001li24 = 0;
	always @ ( posedge tx_pclk)
		  n001li24 <= n001li23;
	initial
		n001Oi21 = 0;
	always @ ( posedge tx_pclk)
		  n001Oi21 <= n001Oi22;
	event n001Oi21_event;
	initial
		#1 ->n001Oi21_event;
	always @(n001Oi21_event)
		n001Oi21 <= {1{1'b1}};
	initial
		n001Oi22 = 0;
	always @ ( posedge tx_pclk)
		  n001Oi22 <= n001Oi21;
	initial
		n00i0O7 = 0;
	always @ ( posedge tx_pclk)
		  n00i0O7 <= n00i0O8;
	event n00i0O7_event;
	initial
		#1 ->n00i0O7_event;
	always @(n00i0O7_event)
		n00i0O7 <= {1{1'b1}};
	initial
		n00i0O8 = 0;
	always @ ( posedge tx_pclk)
		  n00i0O8 <= n00i0O7;
	initial
		n00i1O10 = 0;
	always @ ( posedge tx_pclk)
		  n00i1O10 <= n00i1O9;
	initial
		n00i1O9 = 0;
	always @ ( posedge tx_pclk)
		  n00i1O9 <= n00i1O10;
	event n00i1O9_event;
	initial
		#1 ->n00i1O9_event;
	always @(n00i1O9_event)
		n00i1O9 <= {1{1'b1}};
	initial
		n00ill5 = 0;
	always @ ( posedge tx_pclk)
		  n00ill5 <= n00ill6;
	event n00ill5_event;
	initial
		#1 ->n00ill5_event;
	always @(n00ill5_event)
		n00ill5 <= {1{1'b1}};
	initial
		n00ill6 = 0;
	always @ ( posedge tx_pclk)
		  n00ill6 <= n00ill5;
	initial
		n00iOl3 = 0;
	always @ ( posedge tx_pclk)
		  n00iOl3 <= n00iOl4;
	event n00iOl3_event;
	initial
		#1 ->n00iOl3_event;
	always @(n00iOl3_event)
		n00iOl3 <= {1{1'b1}};
	initial
		n00iOl4 = 0;
	always @ ( posedge tx_pclk)
		  n00iOl4 <= n00iOl3;
	initial
		n00l1l1 = 0;
	always @ ( posedge tx_pclk)
		  n00l1l1 <= n00l1l2;
	event n00l1l1_event;
	initial
		#1 ->n00l1l1_event;
	always @(n00l1l1_event)
		n00l1l1 <= {1{1'b1}};
	initial
		n00l1l2 = 0;
	always @ ( posedge tx_pclk)
		  n00l1l2 <= n00l1l1;
	initial
		n0110l43 = 0;
	always @ ( posedge tx_pclk)
		  n0110l43 <= n0110l44;
	event n0110l43_event;
	initial
		#1 ->n0110l43_event;
	always @(n0110l43_event)
		n0110l43 <= {1{1'b1}};
	initial
		n0110l44 = 0;
	always @ ( posedge tx_pclk)
		  n0110l44 <= n0110l43;
	initial
		n01lil41 = 0;
	always @ ( posedge tx_pclk)
		  n01lil41 <= n01lil42;
	event n01lil41_event;
	initial
		#1 ->n01lil41_event;
	always @(n01lil41_event)
		n01lil41 <= {1{1'b1}};
	initial
		n01lil42 = 0;
	always @ ( posedge tx_pclk)
		  n01lil42 <= n01lil41;
	initial
		n01llO39 = 0;
	always @ ( posedge tx_pclk)
		  n01llO39 <= n01llO40;
	event n01llO39_event;
	initial
		#1 ->n01llO39_event;
	always @(n01llO39_event)
		n01llO39 <= {1{1'b1}};
	initial
		n01llO40 = 0;
	always @ ( posedge tx_pclk)
		  n01llO40 <= n01llO39;
	initial
		n01lOO37 = 0;
	always @ ( posedge tx_pclk)
		  n01lOO37 <= n01lOO38;
	event n01lOO37_event;
	initial
		#1 ->n01lOO37_event;
	always @(n01lOO37_event)
		n01lOO37 <= {1{1'b1}};
	initial
		n01lOO38 = 0;
	always @ ( posedge tx_pclk)
		  n01lOO38 <= n01lOO37;
	initial
		n01O0O33 = 0;
	always @ ( posedge tx_pclk)
		  n01O0O33 <= n01O0O34;
	event n01O0O33_event;
	initial
		#1 ->n01O0O33_event;
	always @(n01O0O33_event)
		n01O0O33 <= {1{1'b1}};
	initial
		n01O0O34 = 0;
	always @ ( posedge tx_pclk)
		  n01O0O34 <= n01O0O33;
	initial
		n01O1l35 = 0;
	always @ ( posedge tx_pclk)
		  n01O1l35 <= n01O1l36;
	event n01O1l35_event;
	initial
		#1 ->n01O1l35_event;
	always @(n01O1l35_event)
		n01O1l35 <= {1{1'b1}};
	initial
		n01O1l36 = 0;
	always @ ( posedge tx_pclk)
		  n01O1l36 <= n01O1l35;
	initial
		n01Oll31 = 0;
	always @ ( posedge tx_pclk)
		  n01Oll31 <= n01Oll32;
	event n01Oll31_event;
	initial
		#1 ->n01Oll31_event;
	always @(n01Oll31_event)
		n01Oll31 <= {1{1'b1}};
	initial
		n01Oll32 = 0;
	always @ ( posedge tx_pclk)
		  n01Oll32 <= n01Oll31;
	initial
		n01OOl29 = 0;
	always @ ( posedge tx_pclk)
		  n01OOl29 <= n01OOl30;
	event n01OOl29_event;
	initial
		#1 ->n01OOl29_event;
	always @(n01OOl29_event)
		n01OOl29 <= {1{1'b1}};
	initial
		n01OOl30 = 0;
	always @ ( posedge tx_pclk)
		  n01OOl30 <= n01OOl29;
	initial
		n1OliO47 = 0;
	always @ ( posedge tx_pclk)
		  n1OliO47 <= n1OliO48;
	event n1OliO47_event;
	initial
		#1 ->n1OliO47_event;
	always @(n1OliO47_event)
		n1OliO47 <= {1{1'b1}};
	initial
		n1OliO48 = 0;
	always @ ( posedge tx_pclk)
		  n1OliO48 <= n1OliO47;
	initial
		n1Olli45 = 0;
	always @ ( posedge tx_pclk)
		  n1Olli45 <= n1Olli46;
	event n1Olli45_event;
	initial
		#1 ->n1Olli45_event;
	always @(n1Olli45_event)
		n1Olli45 <= {1{1'b1}};
	initial
		n1Olli46 = 0;
	always @ ( posedge tx_pclk)
		  n1Olli46 <= n1Olli45;
	initial
	begin
		n100i = 0;
		n100l = 0;
		n100O = 0;
		n101i = 0;
		n101l = 0;
		n101O = 0;
		n10ii = 0;
		n10il = 0;
		n10iO = 0;
		n10li = 0;
		n10ll = 0;
		n10lO = 0;
		n10Oi = 0;
		n10Ol = 0;
		n10OO = 0;
		n11il = 0;
		n11iO = 0;
		n11li = 0;
		n11ll = 0;
		n11lO = 0;
		n11Oi = 0;
		n11Ol = 0;
		n11OO = 0;
		n1i0i = 0;
		n1i0O = 0;
		n1i1i = 0;
		n1i1l = 0;
		n1i1O = 0;
		nllilO = 0;
		nlliOi = 0;
		nlliOl = 0;
		nlliOO = 0;
		nlll0i = 0;
		nlll0l = 0;
		nlll0O = 0;
		nlll1i = 0;
		nlll1l = 0;
		nlll1O = 0;
		nlllii = 0;
		nlllil = 0;
		nllliO = 0;
		nlllli = 0;
		nlllll = 0;
		nllllO = 0;
		nlllOi = 0;
		nlllOl = 0;
		nlllOO = 0;
		nllO0i = 0;
		nllO0l = 0;
		nllO0O = 0;
		nllO1i = 0;
		nllO1l = 0;
		nllO1O = 0;
		nllOii = 0;
		nllOil = 0;
		nllOiO = 0;
	end
	always @ ( posedge tx_pclk or  posedge wire_n00l0l_dout)
	begin
		if (wire_n00l0l_dout == 1'b1) 
		begin
			n100i <= 0;
			n100l <= 0;
			n100O <= 0;
			n101i <= 0;
			n101l <= 0;
			n101O <= 0;
			n10ii <= 0;
			n10il <= 0;
			n10iO <= 0;
			n10li <= 0;
			n10ll <= 0;
			n10lO <= 0;
			n10Oi <= 0;
			n10Ol <= 0;
			n10OO <= 0;
			n11il <= 0;
			n11iO <= 0;
			n11li <= 0;
			n11ll <= 0;
			n11lO <= 0;
			n11Oi <= 0;
			n11Ol <= 0;
			n11OO <= 0;
			n1i0i <= 0;
			n1i0O <= 0;
			n1i1i <= 0;
			n1i1l <= 0;
			n1i1O <= 0;
			nllilO <= 0;
			nlliOi <= 0;
			nlliOl <= 0;
			nlliOO <= 0;
			nlll0i <= 0;
			nlll0l <= 0;
			nlll0O <= 0;
			nlll1i <= 0;
			nlll1l <= 0;
			nlll1O <= 0;
			nlllii <= 0;
			nlllil <= 0;
			nllliO <= 0;
			nlllli <= 0;
			nlllll <= 0;
			nllllO <= 0;
			nlllOi <= 0;
			nlllOl <= 0;
			nlllOO <= 0;
			nllO0i <= 0;
			nllO0l <= 0;
			nllO0O <= 0;
			nllO1i <= 0;
			nllO1l <= 0;
			nllO1O <= 0;
			nllOii <= 0;
			nllOil <= 0;
			nllOiO <= 0;
		end
		else if  (nlOii == 1'b0) 
		begin
			n100i <= wire_n1iil_dataout;
			n100l <= wire_n1iiO_dataout;
			n100O <= wire_n1ili_dataout;
			n101i <= wire_n1O1O_dataout;
			n101l <= wire_n1O0i_dataout;
			n101O <= wire_n1iii_dataout;
			n10ii <= wire_n1ill_dataout;
			n10il <= wire_n1ilO_dataout;
			n10iO <= wire_n1iOi_dataout;
			n10li <= wire_n1iOl_dataout;
			n10ll <= wire_n1iOO_dataout;
			n10lO <= wire_n1l1i_dataout;
			n10Oi <= wire_n1l1l_dataout;
			n10Ol <= wire_n1l1O_dataout;
			n10OO <= wire_n1l0i_dataout;
			n11il <= wire_n1lli_dataout;
			n11iO <= wire_n1lll_dataout;
			n11li <= wire_n1llO_dataout;
			n11ll <= wire_n1lOi_dataout;
			n11lO <= wire_n1lOl_dataout;
			n11Oi <= wire_n1lOO_dataout;
			n11Ol <= wire_n1O1i_dataout;
			n11OO <= wire_n1O1l_dataout;
			n1i0i <= wire_n1lil_dataout;
			n1i0O <= wire_n1liO_dataout;
			n1i1i <= wire_n1l0l_dataout;
			n1i1l <= wire_n1l0O_dataout;
			n1i1O <= wire_n1lii_dataout;
			nllilO <= wire_nlO1Oi_dataout;
			nlliOi <= wire_nlO1Ol_dataout;
			nlliOl <= wire_nlO1OO_dataout;
			nlliOO <= wire_nlO01i_dataout;
			nlll0i <= wire_nlO00l_dataout;
			nlll0l <= wire_nlO00O_dataout;
			nlll0O <= wire_nlO0ii_dataout;
			nlll1i <= wire_nlO01l_dataout;
			nlll1l <= wire_nlO01O_dataout;
			nlll1O <= wire_nlO00i_dataout;
			nlllii <= wire_nllOli_dataout;
			nlllil <= wire_nllOll_dataout;
			nllliO <= wire_nllOlO_dataout;
			nlllli <= wire_nllOOi_dataout;
			nlllll <= wire_nllOOl_dataout;
			nllllO <= wire_nllOOO_dataout;
			nlllOi <= wire_nlO11i_dataout;
			nlllOl <= wire_nlO11l_dataout;
			nlllOO <= wire_nlO11O_dataout;
			nllO0i <= wire_nlO1ii_dataout;
			nllO0l <= wire_nlO1il_dataout;
			nllO0O <= wire_nlO1iO_dataout;
			nllO1i <= wire_nlO10i_dataout;
			nllO1l <= wire_nlO10l_dataout;
			nllO1O <= wire_nlO10O_dataout;
			nllOii <= wire_nlO1li_dataout;
			nllOil <= wire_nlO1ll_dataout;
			nllOiO <= wire_nlO1lO_dataout;
		end
	end
	event n100i_event;
	event n100l_event;
	event n100O_event;
	event n101i_event;
	event n101l_event;
	event n101O_event;
	event n10ii_event;
	event n10il_event;
	event n10iO_event;
	event n10li_event;
	event n10ll_event;
	event n10lO_event;
	event n10Oi_event;
	event n10Ol_event;
	event n10OO_event;
	event n11il_event;
	event n11iO_event;
	event n11li_event;
	event n11ll_event;
	event n11lO_event;
	event n11Oi_event;
	event n11Ol_event;
	event n11OO_event;
	event n1i0i_event;
	event n1i0O_event;
	event n1i1i_event;
	event n1i1l_event;
	event n1i1O_event;
	event nllilO_event;
	event nlliOi_event;
	event nlliOl_event;
	event nlliOO_event;
	event nlll0i_event;
	event nlll0l_event;
	event nlll0O_event;
	event nlll1i_event;
	event nlll1l_event;
	event nlll1O_event;
	event nlllii_event;
	event nlllil_event;
	event nllliO_event;
	event nlllli_event;
	event nlllll_event;
	event nllllO_event;
	event nlllOi_event;
	event nlllOl_event;
	event nlllOO_event;
	event nllO0i_event;
	event nllO0l_event;
	event nllO0O_event;
	event nllO1i_event;
	event nllO1l_event;
	event nllO1O_event;
	event nllOii_event;
	event nllOil_event;
	event nllOiO_event;
	initial
		#1 ->n100i_event;
	initial
		#1 ->n100l_event;
	initial
		#1 ->n100O_event;
	initial
		#1 ->n101i_event;
	initial
		#1 ->n101l_event;
	initial
		#1 ->n101O_event;
	initial
		#1 ->n10ii_event;
	initial
		#1 ->n10il_event;
	initial
		#1 ->n10iO_event;
	initial
		#1 ->n10li_event;
	initial
		#1 ->n10ll_event;
	initial
		#1 ->n10lO_event;
	initial
		#1 ->n10Oi_event;
	initial
		#1 ->n10Ol_event;
	initial
		#1 ->n10OO_event;
	initial
		#1 ->n11il_event;
	initial
		#1 ->n11iO_event;
	initial
		#1 ->n11li_event;
	initial
		#1 ->n11ll_event;
	initial
		#1 ->n11lO_event;
	initial
		#1 ->n11Oi_event;
	initial
		#1 ->n11Ol_event;
	initial
		#1 ->n11OO_event;
	initial
		#1 ->n1i0i_event;
	initial
		#1 ->n1i0O_event;
	initial
		#1 ->n1i1i_event;
	initial
		#1 ->n1i1l_event;
	initial
		#1 ->n1i1O_event;
	initial
		#1 ->nllilO_event;
	initial
		#1 ->nlliOi_event;
	initial
		#1 ->nlliOl_event;
	initial
		#1 ->nlliOO_event;
	initial
		#1 ->nlll0i_event;
	initial
		#1 ->nlll0l_event;
	initial
		#1 ->nlll0O_event;
	initial
		#1 ->nlll1i_event;
	initial
		#1 ->nlll1l_event;
	initial
		#1 ->nlll1O_event;
	initial
		#1 ->nlllii_event;
	initial
		#1 ->nlllil_event;
	initial
		#1 ->nllliO_event;
	initial
		#1 ->nlllli_event;
	initial
		#1 ->nlllll_event;
	initial
		#1 ->nllllO_event;
	initial
		#1 ->nlllOi_event;
	initial
		#1 ->nlllOl_event;
	initial
		#1 ->nlllOO_event;
	initial
		#1 ->nllO0i_event;
	initial
		#1 ->nllO0l_event;
	initial
		#1 ->nllO0O_event;
	initial
		#1 ->nllO1i_event;
	initial
		#1 ->nllO1l_event;
	initial
		#1 ->nllO1O_event;
	initial
		#1 ->nllOii_event;
	initial
		#1 ->nllOil_event;
	initial
		#1 ->nllOiO_event;
	always @(n100i_event)
		n100i <= 1;
	always @(n100l_event)
		n100l <= 1;
	always @(n100O_event)
		n100O <= 1;
	always @(n101i_event)
		n101i <= 1;
	always @(n101l_event)
		n101l <= 1;
	always @(n101O_event)
		n101O <= 1;
	always @(n10ii_event)
		n10ii <= 1;
	always @(n10il_event)
		n10il <= 1;
	always @(n10iO_event)
		n10iO <= 1;
	always @(n10li_event)
		n10li <= 1;
	always @(n10ll_event)
		n10ll <= 1;
	always @(n10lO_event)
		n10lO <= 1;
	always @(n10Oi_event)
		n10Oi <= 1;
	always @(n10Ol_event)
		n10Ol <= 1;
	always @(n10OO_event)
		n10OO <= 1;
	always @(n11il_event)
		n11il <= 1;
	always @(n11iO_event)
		n11iO <= 1;
	always @(n11li_event)
		n11li <= 1;
	always @(n11ll_event)
		n11ll <= 1;
	always @(n11lO_event)
		n11lO <= 1;
	always @(n11Oi_event)
		n11Oi <= 1;
	always @(n11Ol_event)
		n11Ol <= 1;
	always @(n11OO_event)
		n11OO <= 1;
	always @(n1i0i_event)
		n1i0i <= 1;
	always @(n1i0O_event)
		n1i0O <= 1;
	always @(n1i1i_event)
		n1i1i <= 1;
	always @(n1i1l_event)
		n1i1l <= 1;
	always @(n1i1O_event)
		n1i1O <= 1;
	always @(nllilO_event)
		nllilO <= 1;
	always @(nlliOi_event)
		nlliOi <= 1;
	always @(nlliOl_event)
		nlliOl <= 1;
	always @(nlliOO_event)
		nlliOO <= 1;
	always @(nlll0i_event)
		nlll0i <= 1;
	always @(nlll0l_event)
		nlll0l <= 1;
	always @(nlll0O_event)
		nlll0O <= 1;
	always @(nlll1i_event)
		nlll1i <= 1;
	always @(nlll1l_event)
		nlll1l <= 1;
	always @(nlll1O_event)
		nlll1O <= 1;
	always @(nlllii_event)
		nlllii <= 1;
	always @(nlllil_event)
		nlllil <= 1;
	always @(nllliO_event)
		nllliO <= 1;
	always @(nlllli_event)
		nlllli <= 1;
	always @(nlllll_event)
		nlllll <= 1;
	always @(nllllO_event)
		nllllO <= 1;
	always @(nlllOi_event)
		nlllOi <= 1;
	always @(nlllOl_event)
		nlllOl <= 1;
	always @(nlllOO_event)
		nlllOO <= 1;
	always @(nllO0i_event)
		nllO0i <= 1;
	always @(nllO0l_event)
		nllO0l <= 1;
	always @(nllO0O_event)
		nllO0O <= 1;
	always @(nllO1i_event)
		nllO1i <= 1;
	always @(nllO1l_event)
		nllO1l <= 1;
	always @(nllO1O_event)
		nllO1O <= 1;
	always @(nllOii_event)
		nllOii <= 1;
	always @(nllOil_event)
		nllOil <= 1;
	always @(nllOiO_event)
		nllOiO <= 1;
	initial
	begin
		n0l00i = 0;
		n0l00l = 0;
		n0l00O = 0;
		n0l01i = 0;
		n0l01l = 0;
		n0l01O = 0;
		n0l0ii = 0;
		n0l0il = 0;
		n0l0iO = 0;
		n0l0li = 0;
		n0l0ll = 0;
		n0l0lO = 0;
		n0l0Oi = 0;
		n0l0Ol = 0;
		n0l0OO = 0;
		n0l1il = 0;
		n0l1iO = 0;
		n0l1li = 0;
		n0l1ll = 0;
		n0l1lO = 0;
		n0l1Oi = 0;
		n0l1Ol = 0;
		n0l1OO = 0;
		n0li1i = 0;
		niiOii = 0;
		niiOil = 0;
		niiOiO = 0;
		niiOli = 0;
		niiOll = 0;
		niiOlO = 0;
		niiOOi = 0;
		niiOOl = 0;
		niiOOO = 0;
		nil00O = 0;
		nil01i = 0;
		nil01l = 0;
		nil01O = 0;
		nil10i = 0;
		nil10l = 0;
		nil10O = 0;
		nil11i = 0;
		nil11l = 0;
		nil11O = 0;
		nil1ii = 0;
		nil1il = 0;
		nil1iO = 0;
		nil1li = 0;
		nil1ll = 0;
		nil1lO = 0;
		nil1Oi = 0;
		nil1Ol = 0;
		nil1OO = 0;
	end
	always @ ( posedge wire_n00lii_clkout or  posedge wire_n00lOi_dout)
	begin
		if (wire_n00lOi_dout == 1'b1) 
		begin
			n0l00i <= 0;
			n0l00l <= 0;
			n0l00O <= 0;
			n0l01i <= 0;
			n0l01l <= 0;
			n0l01O <= 0;
			n0l0ii <= 0;
			n0l0il <= 0;
			n0l0iO <= 0;
			n0l0li <= 0;
			n0l0ll <= 0;
			n0l0lO <= 0;
			n0l0Oi <= 0;
			n0l0Ol <= 0;
			n0l0OO <= 0;
			n0l1il <= 0;
			n0l1iO <= 0;
			n0l1li <= 0;
			n0l1ll <= 0;
			n0l1lO <= 0;
			n0l1Oi <= 0;
			n0l1Ol <= 0;
			n0l1OO <= 0;
			n0li1i <= 0;
			niiOii <= 0;
			niiOil <= 0;
			niiOiO <= 0;
			niiOli <= 0;
			niiOll <= 0;
			niiOlO <= 0;
			niiOOi <= 0;
			niiOOl <= 0;
			niiOOO <= 0;
			nil00O <= 0;
			nil01i <= 0;
			nil01l <= 0;
			nil01O <= 0;
			nil10i <= 0;
			nil10l <= 0;
			nil10O <= 0;
			nil11i <= 0;
			nil11l <= 0;
			nil11O <= 0;
			nil1ii <= 0;
			nil1il <= 0;
			nil1iO <= 0;
			nil1li <= 0;
			nil1ll <= 0;
			nil1lO <= 0;
			nil1Oi <= 0;
			nil1Ol <= 0;
			nil1OO <= 0;
		end
		else 
		begin
			n0l00i <= wire_n0ll1O_dataout;
			n0l00l <= wire_n0ll0i_dataout;
			n0l00O <= wire_n0ll0l_dataout;
			n0l01i <= wire_n0liOO_dataout;
			n0l01l <= wire_n0ll1i_dataout;
			n0l01O <= wire_n0ll1l_dataout;
			n0l0ii <= wire_n0ll0O_dataout;
			n0l0il <= wire_n0llii_dataout;
			n0l0iO <= wire_n0llil_dataout;
			n0l0li <= wire_n0lliO_dataout;
			n0l0ll <= wire_n0llli_dataout;
			n0l0lO <= wire_n0li1l_dataout;
			n0l0Oi <= wire_n0li1O_dataout;
			n0l0Ol <= wire_n0li0i_dataout;
			n0l0OO <= wire_n0li0l_dataout;
			n0l1il <= wire_n0liii_dataout;
			n0l1iO <= wire_n0liil_dataout;
			n0l1li <= wire_n0liiO_dataout;
			n0l1ll <= wire_n0lili_dataout;
			n0l1lO <= wire_n0lill_dataout;
			n0l1Oi <= wire_n0lilO_dataout;
			n0l1Ol <= wire_n0liOi_dataout;
			n0l1OO <= wire_n0liOl_dataout;
			n0li1i <= wire_n0li0O_dataout;
			niiOii <= wire_n00llO_q[0];
			niiOil <= wire_n00llO_q[1];
			niiOiO <= wire_n00llO_q[2];
			niiOli <= wire_n00llO_q[3];
			niiOll <= wire_n00llO_q[4];
			niiOlO <= wire_n00llO_q[5];
			niiOOi <= wire_n00llO_q[6];
			niiOOl <= wire_n00llO_q[7];
			niiOOO <= wire_n00llO_q[8];
			nil00O <= nil1lO;
			nil01i <= wire_nil0il_dataout;
			nil01l <= wire_nil0iO_dataout;
			nil01O <= wire_nil0li_dataout;
			nil10i <= wire_n00llO_q[12];
			nil10l <= wire_n00llO_q[13];
			nil10O <= wire_n00llO_q[14];
			nil11i <= wire_n00llO_q[9];
			nil11l <= wire_n00llO_q[10];
			nil11O <= wire_n00llO_q[11];
			nil1ii <= wire_n00llO_q[15];
			nil1il <= wire_n00llO_q[16];
			nil1iO <= wire_n00llO_q[17];
			nil1li <= wire_n00llO_q[18];
			nil1ll <= wire_n00llO_q[19];
			nil1lO <= nil1Oi;
			nil1Oi <= wire_nil00i_dataout;
			nil1Ol <= wire_niliil_dataout;
			nil1OO <= wire_nil0ii_dataout;
		end
	end
	event n0l00i_event;
	event n0l00l_event;
	event n0l00O_event;
	event n0l01i_event;
	event n0l01l_event;
	event n0l01O_event;
	event n0l0ii_event;
	event n0l0il_event;
	event n0l0iO_event;
	event n0l0li_event;
	event n0l0ll_event;
	event n0l0lO_event;
	event n0l0Oi_event;
	event n0l0Ol_event;
	event n0l0OO_event;
	event n0l1il_event;
	event n0l1iO_event;
	event n0l1li_event;
	event n0l1ll_event;
	event n0l1lO_event;
	event n0l1Oi_event;
	event n0l1Ol_event;
	event n0l1OO_event;
	event n0li1i_event;
	event niiOii_event;
	event niiOil_event;
	event niiOiO_event;
	event niiOli_event;
	event niiOll_event;
	event niiOlO_event;
	event niiOOi_event;
	event niiOOl_event;
	event niiOOO_event;
	event nil00O_event;
	event nil01i_event;
	event nil01l_event;
	event nil01O_event;
	event nil10i_event;
	event nil10l_event;
	event nil10O_event;
	event nil11i_event;
	event nil11l_event;
	event nil11O_event;
	event nil1ii_event;
	event nil1il_event;
	event nil1iO_event;
	event nil1li_event;
	event nil1ll_event;
	event nil1lO_event;
	event nil1Oi_event;
	event nil1Ol_event;
	event nil1OO_event;
	initial
		#1 ->n0l00i_event;
	initial
		#1 ->n0l00l_event;
	initial
		#1 ->n0l00O_event;
	initial
		#1 ->n0l01i_event;
	initial
		#1 ->n0l01l_event;
	initial
		#1 ->n0l01O_event;
	initial
		#1 ->n0l0ii_event;
	initial
		#1 ->n0l0il_event;
	initial
		#1 ->n0l0iO_event;
	initial
		#1 ->n0l0li_event;
	initial
		#1 ->n0l0ll_event;
	initial
		#1 ->n0l0lO_event;
	initial
		#1 ->n0l0Oi_event;
	initial
		#1 ->n0l0Ol_event;
	initial
		#1 ->n0l0OO_event;
	initial
		#1 ->n0l1il_event;
	initial
		#1 ->n0l1iO_event;
	initial
		#1 ->n0l1li_event;
	initial
		#1 ->n0l1ll_event;
	initial
		#1 ->n0l1lO_event;
	initial
		#1 ->n0l1Oi_event;
	initial
		#1 ->n0l1Ol_event;
	initial
		#1 ->n0l1OO_event;
	initial
		#1 ->n0li1i_event;
	initial
		#1 ->niiOii_event;
	initial
		#1 ->niiOil_event;
	initial
		#1 ->niiOiO_event;
	initial
		#1 ->niiOli_event;
	initial
		#1 ->niiOll_event;
	initial
		#1 ->niiOlO_event;
	initial
		#1 ->niiOOi_event;
	initial
		#1 ->niiOOl_event;
	initial
		#1 ->niiOOO_event;
	initial
		#1 ->nil00O_event;
	initial
		#1 ->nil01i_event;
	initial
		#1 ->nil01l_event;
	initial
		#1 ->nil01O_event;
	initial
		#1 ->nil10i_event;
	initial
		#1 ->nil10l_event;
	initial
		#1 ->nil10O_event;
	initial
		#1 ->nil11i_event;
	initial
		#1 ->nil11l_event;
	initial
		#1 ->nil11O_event;
	initial
		#1 ->nil1ii_event;
	initial
		#1 ->nil1il_event;
	initial
		#1 ->nil1iO_event;
	initial
		#1 ->nil1li_event;
	initial
		#1 ->nil1ll_event;
	initial
		#1 ->nil1lO_event;
	initial
		#1 ->nil1Oi_event;
	initial
		#1 ->nil1Ol_event;
	initial
		#1 ->nil1OO_event;
	always @(n0l00i_event)
		n0l00i <= 1;
	always @(n0l00l_event)
		n0l00l <= 1;
	always @(n0l00O_event)
		n0l00O <= 1;
	always @(n0l01i_event)
		n0l01i <= 1;
	always @(n0l01l_event)
		n0l01l <= 1;
	always @(n0l01O_event)
		n0l01O <= 1;
	always @(n0l0ii_event)
		n0l0ii <= 1;
	always @(n0l0il_event)
		n0l0il <= 1;
	always @(n0l0iO_event)
		n0l0iO <= 1;
	always @(n0l0li_event)
		n0l0li <= 1;
	always @(n0l0ll_event)
		n0l0ll <= 1;
	always @(n0l0lO_event)
		n0l0lO <= 1;
	always @(n0l0Oi_event)
		n0l0Oi <= 1;
	always @(n0l0Ol_event)
		n0l0Ol <= 1;
	always @(n0l0OO_event)
		n0l0OO <= 1;
	always @(n0l1il_event)
		n0l1il <= 1;
	always @(n0l1iO_event)
		n0l1iO <= 1;
	always @(n0l1li_event)
		n0l1li <= 1;
	always @(n0l1ll_event)
		n0l1ll <= 1;
	always @(n0l1lO_event)
		n0l1lO <= 1;
	always @(n0l1Oi_event)
		n0l1Oi <= 1;
	always @(n0l1Ol_event)
		n0l1Ol <= 1;
	always @(n0l1OO_event)
		n0l1OO <= 1;
	always @(n0li1i_event)
		n0li1i <= 1;
	always @(niiOii_event)
		niiOii <= 1;
	always @(niiOil_event)
		niiOil <= 1;
	always @(niiOiO_event)
		niiOiO <= 1;
	always @(niiOli_event)
		niiOli <= 1;
	always @(niiOll_event)
		niiOll <= 1;
	always @(niiOlO_event)
		niiOlO <= 1;
	always @(niiOOi_event)
		niiOOi <= 1;
	always @(niiOOl_event)
		niiOOl <= 1;
	always @(niiOOO_event)
		niiOOO <= 1;
	always @(nil00O_event)
		nil00O <= 1;
	always @(nil01i_event)
		nil01i <= 1;
	always @(nil01l_event)
		nil01l <= 1;
	always @(nil01O_event)
		nil01O <= 1;
	always @(nil10i_event)
		nil10i <= 1;
	always @(nil10l_event)
		nil10l <= 1;
	always @(nil10O_event)
		nil10O <= 1;
	always @(nil11i_event)
		nil11i <= 1;
	always @(nil11l_event)
		nil11l <= 1;
	always @(nil11O_event)
		nil11O <= 1;
	always @(nil1ii_event)
		nil1ii <= 1;
	always @(nil1il_event)
		nil1il <= 1;
	always @(nil1iO_event)
		nil1iO <= 1;
	always @(nil1li_event)
		nil1li <= 1;
	always @(nil1ll_event)
		nil1ll <= 1;
	always @(nil1lO_event)
		nil1lO <= 1;
	always @(nil1Oi_event)
		nil1Oi <= 1;
	always @(nil1Ol_event)
		nil1Ol <= 1;
	always @(nil1OO_event)
		nil1OO <= 1;
	initial
	begin
		niO00i = 0;
		niO00l = 0;
		niO00O = 0;
		niO01i = 0;
		niO01l = 0;
		niO01O = 0;
		niO0ii = 0;
		niO0il = 0;
		niO0iO = 0;
		niO0ll = 0;
	end
	always @ ( posedge tx_pclk or  posedge wire_n00l0l_dout)
	begin
		if (wire_n00l0l_dout == 1'b1) 
		begin
			niO00i <= 0;
			niO00l <= 0;
			niO00O <= 0;
			niO01i <= 0;
			niO01l <= 0;
			niO01O <= 0;
			niO0ii <= 0;
			niO0il <= 0;
			niO0iO <= 0;
			niO0ll <= 0;
		end
		else if  (niO0lO == 1'b0) 
		begin
			niO00i <= n0lil;
			niO00l <= n0liO;
			niO00O <= n0lli;
			niO01i <= n0l0l;
			niO01l <= n0l0O;
			niO01O <= n0lii;
			niO0ii <= n0lll;
			niO0il <= n0llO;
			niO0iO <= n0lOi;
			niO0ll <= n0lOl;
		end
	end
	initial
	begin
		nil0lO = 0;
		niO10O = 0;
		niO1ii = 0;
		niO1il = 0;
		niO1iO = 0;
		niO1li = 0;
		niO1ll = 0;
		niO1lO = 0;
		niO1Oi = 0;
		niO1OO = 0;
	end
	always @ (tx_pclk or wire_niO1Ol_PRN or wire_n00l0l_dout)
	begin
		if (wire_niO1Ol_PRN == 1'b0) 
		begin
			nil0lO <= 1;
			niO10O <= 1;
			niO1ii <= 1;
			niO1il <= 1;
			niO1iO <= 1;
			niO1li <= 1;
			niO1ll <= 1;
			niO1lO <= 1;
			niO1Oi <= 1;
			niO1OO <= 1;
		end
		else if  (wire_n00l0l_dout == 1'b1) 
		begin
			nil0lO <= 0;
			niO10O <= 0;
			niO1ii <= 0;
			niO1il <= 0;
			niO1iO <= 0;
			niO1li <= 0;
			niO1ll <= 0;
			niO1lO <= 0;
			niO1Oi <= 0;
			niO1OO <= 0;
		end
		else if  (niO0lO == 1'b1) 
		if (tx_pclk != niO1Ol_clk_prev && tx_pclk == 1'b1) 
		begin
			nil0lO <= n0l0l;
			niO10O <= n0l0O;
			niO1ii <= n0lii;
			niO1il <= n0lil;
			niO1iO <= n0liO;
			niO1li <= n0lli;
			niO1ll <= n0lll;
			niO1lO <= n0llO;
			niO1Oi <= n0lOi;
			niO1OO <= n0lOl;
		end
		niO1Ol_clk_prev <= tx_pclk;
	end
	assign
		wire_niO1Ol_PRN = (n1OliO48 ^ n1OliO47);
	event nil0lO_event;
	event niO10O_event;
	event niO1ii_event;
	event niO1il_event;
	event niO1iO_event;
	event niO1li_event;
	event niO1ll_event;
	event niO1lO_event;
	event niO1Oi_event;
	event niO1OO_event;
	initial
		#1 ->nil0lO_event;
	initial
		#1 ->niO10O_event;
	initial
		#1 ->niO1ii_event;
	initial
		#1 ->niO1il_event;
	initial
		#1 ->niO1iO_event;
	initial
		#1 ->niO1li_event;
	initial
		#1 ->niO1ll_event;
	initial
		#1 ->niO1lO_event;
	initial
		#1 ->niO1Oi_event;
	initial
		#1 ->niO1OO_event;
	always @(nil0lO_event)
		nil0lO <= 1;
	always @(niO10O_event)
		niO10O <= 1;
	always @(niO1ii_event)
		niO1ii <= 1;
	always @(niO1il_event)
		niO1il <= 1;
	always @(niO1iO_event)
		niO1iO <= 1;
	always @(niO1li_event)
		niO1li <= 1;
	always @(niO1ll_event)
		niO1ll <= 1;
	always @(niO1lO_event)
		niO1lO <= 1;
	always @(niO1Oi_event)
		niO1Oi <= 1;
	always @(niO1OO_event)
		niO1OO <= 1;
	initial
	begin
		niO0Oi = 0;
		niO0Ol = 0;
		niO0OO = 0;
		niOi0i = 0;
		niOi0O = 0;
		niOi1i = 0;
		niOi1l = 0;
		niOi1O = 0;
	end
	always @ ( posedge tx_pclk or  posedge wire_n00l0l_dout)
	begin
		if (wire_n00l0l_dout == 1'b1) 
		begin
			niO0Oi <= 0;
			niO0Ol <= 0;
			niO0OO <= 0;
			niOi0i <= 0;
			niOi0O <= 0;
			niOi1i <= 0;
			niOi1l <= 0;
			niOi1O <= 0;
		end
		else if  (wire_nlO0l_dataout == 1'b1) 
		begin
			niO0Oi <= wire_niOiiO_o;
			niO0Ol <= wire_niOill_o;
			niO0OO <= wire_niOiOi_o;
			niOi0i <= wire_niOl0O_o;
			niOi0O <= wire_niOlil_dataout;
			niOi1i <= wire_niOiOO_o;
			niOi1l <= wire_niOl1l_o;
			niOi1O <= wire_niOl0i_o;
		end
	end
	initial
	begin
		niOiil = 0;
	end
	always @ ( posedge tx_pclk or  negedge wire_niOiii_PRN)
	begin
		if (wire_niOiii_PRN == 1'b0) 
		begin
			niOiil <= 1;
		end
		else if  (wire_nlO0l_dataout == 1'b1) 
		begin
			niOiil <= wire_niOliO_o;
		end
	end
	assign
		wire_niOiii_PRN = ((n1Olli46 ^ n1Olli45) & (~ wire_n00l0l_dout));
	event niOiil_event;
	initial
		#1 ->niOiil_event;
	always @(niOiil_event)
		niOiil <= 1;
	initial
	begin
		nl0OOO = 0;
		nl1i0i = 0;
		nl1i0l = 0;
		nl1i0O = 0;
		nl1iii = 0;
		nl1iil = 0;
		nl1iiO = 0;
		nl1ili = 0;
		nl1ill = 0;
		nl1ilO = 0;
		nl1iOi = 0;
		nl1iOl = 0;
		nl1iOO = 0;
		nl1l0i = 0;
		nl1l0l = 0;
		nl1l0O = 0;
		nl1l1i = 0;
		nl1l1l = 0;
		nl1l1O = 0;
		nl1lii = 0;
		nl1lil = 0;
		nl1liO = 0;
		nl1lli = 0;
		nl1lll = 0;
		nl1llO = 0;
		nl1lOi = 0;
		nl1lOl = 0;
		nl1lOO = 0;
		nl1O1i = 0;
		nli00i = 0;
		nli00l = 0;
		nli00O = 0;
		nli01i = 0;
		nli01l = 0;
		nli01O = 0;
		nli0ii = 0;
		nli0il = 0;
		nli0iO = 0;
		nli0li = 0;
		nli0ll = 0;
		nli0Oi = 0;
		nli10i = 0;
		nli10l = 0;
		nli10O = 0;
		nli11i = 0;
		nli11l = 0;
		nli11O = 0;
		nli1ii = 0;
		nli1il = 0;
		nli1iO = 0;
		nli1li = 0;
		nli1ll = 0;
		nli1lO = 0;
		nli1Oi = 0;
		nli1Ol = 0;
		nli1OO = 0;
	end
	always @ (tx_pclk or wire_nli0lO_PRN or wire_n00l0l_dout)
	begin
		if (wire_nli0lO_PRN == 1'b0) 
		begin
			nl0OOO <= 1;
			nl1i0i <= 1;
			nl1i0l <= 1;
			nl1i0O <= 1;
			nl1iii <= 1;
			nl1iil <= 1;
			nl1iiO <= 1;
			nl1ili <= 1;
			nl1ill <= 1;
			nl1ilO <= 1;
			nl1iOi <= 1;
			nl1iOl <= 1;
			nl1iOO <= 1;
			nl1l0i <= 1;
			nl1l0l <= 1;
			nl1l0O <= 1;
			nl1l1i <= 1;
			nl1l1l <= 1;
			nl1l1O <= 1;
			nl1lii <= 1;
			nl1lil <= 1;
			nl1liO <= 1;
			nl1lli <= 1;
			nl1lll <= 1;
			nl1llO <= 1;
			nl1lOi <= 1;
			nl1lOl <= 1;
			nl1lOO <= 1;
			nl1O1i <= 1;
			nli00i <= 1;
			nli00l <= 1;
			nli00O <= 1;
			nli01i <= 1;
			nli01l <= 1;
			nli01O <= 1;
			nli0ii <= 1;
			nli0il <= 1;
			nli0iO <= 1;
			nli0li <= 1;
			nli0ll <= 1;
			nli0Oi <= 1;
			nli10i <= 1;
			nli10l <= 1;
			nli10O <= 1;
			nli11i <= 1;
			nli11l <= 1;
			nli11O <= 1;
			nli1ii <= 1;
			nli1il <= 1;
			nli1iO <= 1;
			nli1li <= 1;
			nli1ll <= 1;
			nli1lO <= 1;
			nli1Oi <= 1;
			nli1Ol <= 1;
			nli1OO <= 1;
		end
		else if  (wire_n00l0l_dout == 1'b1) 
		begin
			nl0OOO <= 0;
			nl1i0i <= 0;
			nl1i0l <= 0;
			nl1i0O <= 0;
			nl1iii <= 0;
			nl1iil <= 0;
			nl1iiO <= 0;
			nl1ili <= 0;
			nl1ill <= 0;
			nl1ilO <= 0;
			nl1iOi <= 0;
			nl1iOl <= 0;
			nl1iOO <= 0;
			nl1l0i <= 0;
			nl1l0l <= 0;
			nl1l0O <= 0;
			nl1l1i <= 0;
			nl1l1l <= 0;
			nl1l1O <= 0;
			nl1lii <= 0;
			nl1lil <= 0;
			nl1liO <= 0;
			nl1lli <= 0;
			nl1lll <= 0;
			nl1llO <= 0;
			nl1lOi <= 0;
			nl1lOl <= 0;
			nl1lOO <= 0;
			nl1O1i <= 0;
			nli00i <= 0;
			nli00l <= 0;
			nli00O <= 0;
			nli01i <= 0;
			nli01l <= 0;
			nli01O <= 0;
			nli0ii <= 0;
			nli0il <= 0;
			nli0iO <= 0;
			nli0li <= 0;
			nli0ll <= 0;
			nli0Oi <= 0;
			nli10i <= 0;
			nli10l <= 0;
			nli10O <= 0;
			nli11i <= 0;
			nli11l <= 0;
			nli11O <= 0;
			nli1ii <= 0;
			nli1il <= 0;
			nli1iO <= 0;
			nli1li <= 0;
			nli1ll <= 0;
			nli1lO <= 0;
			nli1Oi <= 0;
			nli1Ol <= 0;
			nli1OO <= 0;
		end
		else if  (nlOii == 1'b1) 
		if (tx_pclk != nli0lO_clk_prev && tx_pclk == 1'b1) 
		begin
			nl0OOO <= wire_nlil1l_dataout;
			nl1i0i <= wire_nl010l_dataout;
			nl1i0l <= wire_nl010O_dataout;
			nl1i0O <= wire_nl01ii_dataout;
			nl1iii <= wire_nl01il_dataout;
			nl1iil <= wire_nl01iO_dataout;
			nl1iiO <= wire_nl01li_dataout;
			nl1ili <= wire_nl01ll_dataout;
			nl1ill <= wire_nl01lO_dataout;
			nl1ilO <= wire_nl01Oi_dataout;
			nl1iOi <= wire_nl01Ol_dataout;
			nl1iOl <= wire_nl1O1l_dataout;
			nl1iOO <= wire_nl1O1O_dataout;
			nl1l0i <= wire_nl1Oii_dataout;
			nl1l0l <= wire_nl1Oil_dataout;
			nl1l0O <= wire_nl1OiO_dataout;
			nl1l1i <= wire_nl1O0i_dataout;
			nl1l1l <= wire_nl1O0l_dataout;
			nl1l1O <= wire_nl1O0O_dataout;
			nl1lii <= wire_nl1Oli_dataout;
			nl1lil <= wire_nl1Oll_dataout;
			nl1liO <= wire_nl1OlO_dataout;
			nl1lli <= wire_nl1OOi_dataout;
			nl1lll <= wire_nl1OOl_dataout;
			nl1llO <= wire_nl1OOO_dataout;
			nl1lOi <= wire_nl011i_dataout;
			nl1lOl <= wire_nl011l_dataout;
			nl1lOO <= wire_nl011O_dataout;
			nl1O1i <= wire_nl010i_dataout;
			nli00i <= wire_nliiil_dataout;
			nli00l <= wire_nliiiO_dataout;
			nli00O <= wire_nliili_dataout;
			nli01i <= wire_nlii0l_dataout;
			nli01l <= wire_nlii0O_dataout;
			nli01O <= wire_nliiii_dataout;
			nli0ii <= wire_nliill_dataout;
			nli0il <= wire_nliilO_dataout;
			nli0iO <= wire_nliiOi_dataout;
			nli0li <= wire_nliiOl_dataout;
			nli0ll <= wire_nliiOO_dataout;
			nli0Oi <= wire_nlil1i_dataout;
			nli10i <= wire_nlil0O_dataout;
			nli10l <= wire_nlilii_dataout;
			nli10O <= wire_nlilil_dataout;
			nli11i <= wire_nlil1O_dataout;
			nli11l <= wire_nlil0i_dataout;
			nli11O <= wire_nlil0l_dataout;
			nli1ii <= wire_nliliO_dataout;
			nli1il <= wire_nlilli_dataout;
			nli1iO <= wire_nlilll_dataout;
			nli1li <= wire_nli0Ol_dataout;
			nli1ll <= wire_nli0OO_dataout;
			nli1lO <= wire_nlii1i_dataout;
			nli1Oi <= wire_nlii1l_dataout;
			nli1Ol <= wire_nlii1O_dataout;
			nli1OO <= wire_nlii0i_dataout;
		end
		nli0lO_clk_prev <= tx_pclk;
	end
	assign
		wire_nli0lO_PRN = (n0110l44 ^ n0110l43);
	initial
	begin
		nlOii = 0;
	end
	always @ ( posedge tx_pclk or  posedge wire_n00l0l_dout)
	begin
		if (wire_n00l0l_dout == 1'b1) 
		begin
			nlOii <= 1;
		end
		else 
		begin
			nlOii <= wire_nlOil_dataout;
		end
	end
	event nlOii_event;
	initial
		#1 ->nlOii_event;
	always @(nlOii_event)
		nlOii <= 1;
	initial
	begin
		n0l0l = 0;
		n0l0O = 0;
		n0lii = 0;
		n0lil = 0;
		n0liO = 0;
		n0lli = 0;
		n0lll = 0;
		n0llO = 0;
		n0lOi = 0;
		n0lOl = 0;
		n0lOO = 0;
		n0O0i = 0;
		n0O0l = 0;
		n0O0O = 0;
		n0O1i = 0;
		n0O1l = 0;
		n0O1O = 0;
		n0Oii = 0;
		n0Oil = 0;
		n0OiO = 0;
		n0Oli = 0;
		n0Oll = 0;
		n0OlO = 0;
		n0OOi = 0;
		n0OOl = 0;
		n0OOO = 0;
		ni10i = 0;
		ni11i = 0;
		ni11l = 0;
		ni11O = 0;
		niO0lO = 0;
		nlOlO = 0;
	end
	always @ ( posedge tx_pclk or  negedge wire_nlOll_CLRN)
	begin
		if (wire_nlOll_CLRN == 1'b0) 
		begin
			n0l0l <= 0;
			n0l0O <= 0;
			n0lii <= 0;
			n0lil <= 0;
			n0liO <= 0;
			n0lli <= 0;
			n0lll <= 0;
			n0llO <= 0;
			n0lOi <= 0;
			n0lOl <= 0;
			n0lOO <= 0;
			n0O0i <= 0;
			n0O0l <= 0;
			n0O0O <= 0;
			n0O1i <= 0;
			n0O1l <= 0;
			n0O1O <= 0;
			n0Oii <= 0;
			n0Oil <= 0;
			n0OiO <= 0;
			n0Oli <= 0;
			n0Oll <= 0;
			n0OlO <= 0;
			n0OOi <= 0;
			n0OOl <= 0;
			n0OOO <= 0;
			ni10i <= 0;
			ni11i <= 0;
			ni11l <= 0;
			ni11O <= 0;
			niO0lO <= 0;
			nlOlO <= 0;
		end
		else 
		begin
			n0l0l <= n00i0l;
			n0l0O <= n00i1i;
			n0lii <= n000li;
			n0lil <= n0000O;
			n0liO <= n001OO;
			n0lli <= n001iO;
			n0lll <= n0010l;
			n0llO <= n0011i;
			n0lOi <= n01Oli;
			n0lOl <= n01Oil;
			n0lOO <= wire_ni10l_dataout;
			n0O0i <= wire_ni1iO_dataout;
			n0O0l <= wire_ni1li_dataout;
			n0O0O <= wire_ni1ll_dataout;
			n0O1i <= wire_ni10O_dataout;
			n0O1l <= wire_ni1ii_dataout;
			n0O1O <= wire_ni1il_dataout;
			n0Oii <= wire_ni1lO_dataout;
			n0Oil <= wire_ni1Oi_dataout;
			n0OiO <= wire_ni1Ol_dataout;
			n0Oli <= wire_ni0iO_dataout;
			n0Oll <= wire_ni1OO_dataout;
			n0OlO <= wire_ni01i_dataout;
			n0OOi <= wire_ni01l_dataout;
			n0OOl <= wire_ni01O_dataout;
			n0OOO <= wire_ni00i_dataout;
			ni10i <= wire_ni0il_dataout;
			ni11i <= wire_ni00l_dataout;
			ni11l <= wire_ni00O_dataout;
			ni11O <= wire_ni0ii_dataout;
			niO0lO <= (~ niO0lO);
			nlOlO <= tx_trs[0];
		end
	end
	assign
		wire_nlOll_CLRN = ((n00l1l2 ^ n00l1l1) & (~ wire_n00l0l_dout));
	assign		wire_n000i_dataout = (niO0Oi === 1'b1) ? n01i1l : n1i0O;
	assign		wire_n001i_dataout = (niO0Oi === 1'b1) ? n01i0l : n1i1l;
	assign		wire_n001l_dataout = (niO0Oi === 1'b1) ? n01i0i : n1i1O;
	assign		wire_n001O_dataout = (niO0Oi === 1'b1) ? n01i1O : n1i0i;
	assign		wire_n010i_dataout = (niO0Oi === 1'b1) ? n10OO : n100l;
	assign		wire_n010l_dataout = (niO0Oi === 1'b1) ? (n01ill ^ n1i1i) : n100O;
	assign		wire_n010O_dataout = (niO0Oi === 1'b1) ? ((n01ill ^ n1i1l) ^ n01ili) : n10ii;
	assign		wire_n011l_dataout = (niO0Oi === 1'b1) ? n10Oi : n101O;
	assign		wire_n011O_dataout = (niO0Oi === 1'b1) ? n10Ol : n100i;
	assign		wire_n01ii_dataout = (niO0Oi === 1'b1) ? ((n01ili ^ n1i1O) ^ n01iiO) : n10il;
	assign		wire_n01il_dataout = (niO0Oi === 1'b1) ? ((n01iiO ^ n1i0i) ^ n01iil) : n10iO;
	assign		wire_n01iO_dataout = (niO0Oi === 1'b1) ? ((n01iil ^ n1i0O) ^ n01iii) : n10li;
	assign		wire_n01li_dataout = (niO0Oi === 1'b1) ? ((n01ill ^ n01iii) ^ n01i0O) : n10ll;
	assign		wire_n01ll_dataout = (niO0Oi === 1'b1) ? ((n01ili ^ n01i0O) ^ n01i0l) : n10lO;
	assign		wire_n01lO_dataout = (niO0Oi === 1'b1) ? ((n01iiO ^ n01i0l) ^ n01i0i) : n10Oi;
	assign		wire_n01Oi_dataout = (niO0Oi === 1'b1) ? ((n01iil ^ n01i0i) ^ n01i1O) : n10Ol;
	assign		wire_n01Ol_dataout = (niO0Oi === 1'b1) ? ((n01iii ^ n01i1O) ^ n01i1l) : n10OO;
	assign		wire_n01OO_dataout = (niO0Oi === 1'b1) ? (n01i0O ^ n01i1l) : n1i1i;
	and(wire_n0li0i_dataout, wire_n0llOi_dataout, ~(nil00O));
	and(wire_n0li0l_dataout, wire_n0llOl_dataout, ~(nil00O));
	assign		wire_n0li0O_dataout = (nil00O === 1'b1) ? niiOii : wire_n0llOO_dataout;
	or(wire_n0li1l_dataout, wire_n0llll_dataout, nil00O);
	and(wire_n0li1O_dataout, wire_n0lllO_dataout, ~(nil00O));
	assign		wire_n0liii_dataout = (nil00O === 1'b1) ? niiOii : wire_n0lO1i_dataout;
	assign		wire_n0liil_dataout = (nil00O === 1'b1) ? wire_n0Ol0O_dataout : wire_n0lO1l_dataout;
	assign		wire_n0liiO_dataout = (nil00O === 1'b1) ? wire_n0Olii_dataout : wire_n0lO1O_dataout;
	assign		wire_n0lili_dataout = (nil00O === 1'b1) ? wire_n0Olil_dataout : wire_n0lO0i_dataout;
	assign		wire_n0lill_dataout = (nil00O === 1'b1) ? wire_n0OliO_dataout : wire_n0lO0l_dataout;
	assign		wire_n0lilO_dataout = (nil00O === 1'b1) ? wire_n0Olli_dataout : wire_n0lO0O_dataout;
	assign		wire_n0liOi_dataout = (nil00O === 1'b1) ? wire_n0Olll_dataout : wire_n0lOii_dataout;
	assign		wire_n0liOl_dataout = (nil00O === 1'b1) ? wire_n0OllO_dataout : wire_n0lOil_dataout;
	assign		wire_n0liOO_dataout = (nil00O === 1'b1) ? wire_n0OlOi_dataout : wire_n0lOiO_dataout;
	assign		wire_n0ll0i_dataout = (nil00O === 1'b1) ? wire_n0OO1l_dataout : wire_n0lOOi_dataout;
	assign		wire_n0ll0l_dataout = (nil00O === 1'b1) ? wire_n0OO1O_dataout : wire_n0lOOl_dataout;
	assign		wire_n0ll0O_dataout = (nil00O === 1'b1) ? wire_n0OO0i_dataout : wire_n0lOOO_dataout;
	assign		wire_n0ll1i_dataout = (nil00O === 1'b1) ? wire_n0OlOl_dataout : wire_n0lOli_dataout;
	assign		wire_n0ll1l_dataout = (nil00O === 1'b1) ? wire_n0OlOO_dataout : wire_n0lOll_dataout;
	assign		wire_n0ll1O_dataout = (nil00O === 1'b1) ? wire_n0OO1i_dataout : wire_n0lOlO_dataout;
	assign		wire_n0llii_dataout = (nil00O === 1'b1) ? wire_n0OO0l_dataout : wire_n0O11i_dataout;
	assign		wire_n0llil_dataout = (nil00O === 1'b1) ? wire_n0OO0O_dataout : wire_n0O11l_dataout;
	assign		wire_n0lliO_dataout = (nil00O === 1'b1) ? wire_n0OOii_dataout : wire_n0O11O_dataout;
	assign		wire_n0llli_dataout = (nil00O === 1'b1) ? wire_n0OOil_dataout : wire_n0O10i_dataout;
	assign		wire_n0llll_dataout = (tx_std[0] === 1'b1) ? n0l0lO : wire_n0O10l_dataout;
	assign		wire_n0lllO_dataout = (tx_std[0] === 1'b1) ? n0l0Oi : wire_n0O10O_dataout;
	assign		wire_n0llOi_dataout = (tx_std[0] === 1'b1) ? n0l0Ol : wire_n0O1ii_dataout;
	assign		wire_n0llOl_dataout = (tx_std[0] === 1'b1) ? n0l0OO : wire_n0O1il_dataout;
	assign		wire_n0llOO_dataout = (tx_std[0] === 1'b1) ? wire_n0OOiO_dataout : wire_n0O1iO_dataout;
	assign		wire_n0lO0i_dataout = (tx_std[0] === 1'b1) ? wire_n0OOOi_dataout : wire_n0O1Oi_dataout;
	assign		wire_n0lO0l_dataout = (tx_std[0] === 1'b1) ? wire_n0OOOl_dataout : wire_n0O1Ol_dataout;
	assign		wire_n0lO0O_dataout = (tx_std[0] === 1'b1) ? wire_n0OOOO_dataout : wire_n0O1OO_dataout;
	assign		wire_n0lO1i_dataout = (tx_std[0] === 1'b1) ? wire_n0OOli_dataout : wire_n0O1li_dataout;
	assign		wire_n0lO1l_dataout = (tx_std[0] === 1'b1) ? wire_n0OOll_dataout : wire_n0O1ll_dataout;
	assign		wire_n0lO1O_dataout = (tx_std[0] === 1'b1) ? wire_n0OOlO_dataout : wire_n0O1lO_dataout;
	assign		wire_n0lOii_dataout = (tx_std[0] === 1'b1) ? wire_ni111i_dataout : wire_n0O01i_dataout;
	assign		wire_n0lOil_dataout = (tx_std[0] === 1'b1) ? wire_ni111l_dataout : wire_n0O01l_dataout;
	assign		wire_n0lOiO_dataout = (tx_std[0] === 1'b1) ? wire_ni111O_dataout : wire_n0O01O_dataout;
	assign		wire_n0lOli_dataout = (tx_std[0] === 1'b1) ? wire_ni110i_dataout : wire_n0O00i_dataout;
	assign		wire_n0lOll_dataout = (tx_std[0] === 1'b1) ? wire_ni110l_dataout : wire_n0O00l_dataout;
	assign		wire_n0lOlO_dataout = (tx_std[0] === 1'b1) ? wire_ni110O_dataout : wire_n0O00O_dataout;
	assign		wire_n0lOOi_dataout = (tx_std[0] === 1'b1) ? wire_ni11ii_dataout : wire_n0O0ii_dataout;
	assign		wire_n0lOOl_dataout = (tx_std[0] === 1'b1) ? wire_ni11il_dataout : wire_n0O0il_dataout;
	assign		wire_n0lOOO_dataout = (tx_std[0] === 1'b1) ? wire_ni11iO_dataout : wire_n0O0iO_dataout;
	assign		wire_n0O00i_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oili_o : n0l01l;
	assign		wire_n0O00l_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oill_o : n0l01O;
	assign		wire_n0O00O_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0OilO_o : n0l00i;
	assign		wire_n0O01i_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oiii_o : n0l1Ol;
	assign		wire_n0O01l_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oiil_o : n0l1OO;
	assign		wire_n0O01O_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0OiiO_o : n0l01i;
	assign		wire_n0O0ii_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0OiOi_o : n0l00l;
	assign		wire_n0O0il_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0OiOl_o : n0l00O;
	assign		wire_n0O0iO_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0OiOO_o : n0l0ii;
	assign		wire_n0O0li_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Ol1i_o : n0l0il;
	assign		wire_n0O0ll_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Ol1l_o : n0l0iO;
	assign		wire_n0O0lO_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Ol1O_o : n0l0li;
	assign		wire_n0O0Oi_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Ol0i_o : n0l0ll;
	assign		wire_n0O10i_dataout = (tx_std[0] === 1'b1) ? wire_ni11Oi_dataout : wire_n0O0Oi_dataout;
	assign		wire_n0O10l_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0O0Ol_o[0] : n0l0lO;
	assign		wire_n0O10O_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0O0Ol_o[1] : n0l0Oi;
	assign		wire_n0O11i_dataout = (tx_std[0] === 1'b1) ? wire_ni11li_dataout : wire_n0O0li_dataout;
	assign		wire_n0O11l_dataout = (tx_std[0] === 1'b1) ? wire_ni11ll_dataout : wire_n0O0ll_dataout;
	assign		wire_n0O11O_dataout = (tx_std[0] === 1'b1) ? wire_ni11lO_dataout : wire_n0O0lO_dataout;
	assign		wire_n0O1ii_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0O0Ol_o[2] : n0l0Ol;
	assign		wire_n0O1il_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0O0Ol_o[3] : n0l0OO;
	assign		wire_n0O1iO_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0O0OO_o : n0li1i;
	assign		wire_n0O1li_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oi1i_o : n0l1il;
	assign		wire_n0O1ll_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oi1l_o : n0l1iO;
	assign		wire_n0O1lO_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oi1O_o : n0l1li;
	assign		wire_n0O1Oi_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oi0i_o : n0l1ll;
	assign		wire_n0O1Ol_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oi0l_o : n0l1lO;
	assign		wire_n0O1OO_dataout = (wire_n0Ol0l_o === 1'b1) ? wire_n0Oi0O_o : n0l1Oi;
	assign		wire_n0Ol0O_dataout = (tx_std[0] === 1'b1) ? niiOil : niiOii;
	assign		wire_n0Olii_dataout = (tx_std[0] === 1'b1) ? niiOil : niiOii;
	assign		wire_n0Olil_dataout = (tx_std[0] === 1'b1) ? niiOiO : niiOii;
	assign		wire_n0OliO_dataout = (tx_std[0] === 1'b1) ? niiOiO : niiOii;
	assign		wire_n0Olli_dataout = (tx_std[0] === 1'b1) ? niiOli : niiOii;
	assign		wire_n0Olll_dataout = (tx_std[0] === 1'b1) ? niiOli : niiOii;
	assign		wire_n0OllO_dataout = (tx_std[0] === 1'b1) ? niiOll : niiOii;
	assign		wire_n0OlOi_dataout = (tx_std[0] === 1'b1) ? niiOll : niiOii;
	assign		wire_n0OlOl_dataout = (tx_std[0] === 1'b1) ? niiOlO : niiOii;
	assign		wire_n0OlOO_dataout = (tx_std[0] === 1'b1) ? niiOlO : niiOil;
	assign		wire_n0OO0i_dataout = (tx_std[0] === 1'b1) ? niiOOl : niiOil;
	assign		wire_n0OO0l_dataout = (tx_std[0] === 1'b1) ? niiOOO : niiOil;
	assign		wire_n0OO0O_dataout = (tx_std[0] === 1'b1) ? niiOOO : niiOil;
	assign		wire_n0OO1i_dataout = (tx_std[0] === 1'b1) ? niiOOi : niiOil;
	assign		wire_n0OO1l_dataout = (tx_std[0] === 1'b1) ? niiOOi : niiOil;
	assign		wire_n0OO1O_dataout = (tx_std[0] === 1'b1) ? niiOOl : niiOil;
	assign		wire_n0OOii_dataout = (tx_std[0] === 1'b1) ? nil11i : niiOil;
	assign		wire_n0OOil_dataout = (tx_std[0] === 1'b1) ? nil11i : niiOil;
	assign		wire_n0OOiO_dataout = (tx_std[0] === 1'b1) ? nil11l : niiOil;
	assign		wire_n0OOli_dataout = (tx_std[0] === 1'b1) ? nil11l : niiOil;
	assign		wire_n0OOll_dataout = (tx_std[0] === 1'b1) ? nil11O : niiOiO;
	assign		wire_n0OOlO_dataout = (tx_std[0] === 1'b1) ? nil11O : niiOiO;
	assign		wire_n0OOOi_dataout = (tx_std[0] === 1'b1) ? nil10i : niiOiO;
	assign		wire_n0OOOl_dataout = (tx_std[0] === 1'b1) ? nil10i : niiOiO;
	assign		wire_n0OOOO_dataout = (tx_std[0] === 1'b1) ? nil10l : niiOiO;
	and(wire_n1iii_dataout, wire_n011l_dataout, ~(niO0Ol));
	and(wire_n1iil_dataout, wire_n011O_dataout, ~(niO0Ol));
	and(wire_n1iiO_dataout, wire_n010i_dataout, ~(niO0Ol));
	and(wire_n1ili_dataout, wire_n010l_dataout, ~(niO0Ol));
	and(wire_n1ill_dataout, wire_n010O_dataout, ~(niO0Ol));
	and(wire_n1ilO_dataout, wire_n01ii_dataout, ~(niO0Ol));
	and(wire_n1iOi_dataout, wire_n01il_dataout, ~(niO0Ol));
	and(wire_n1iOl_dataout, wire_n01iO_dataout, ~(niO0Ol));
	and(wire_n1iOO_dataout, wire_n01li_dataout, ~(niO0Ol));
	and(wire_n1l0i_dataout, wire_n01Ol_dataout, ~(niO0Ol));
	and(wire_n1l0l_dataout, wire_n01OO_dataout, ~(niO0Ol));
	and(wire_n1l0O_dataout, wire_n001i_dataout, ~(niO0Ol));
	and(wire_n1l1i_dataout, wire_n01ll_dataout, ~(niO0Ol));
	and(wire_n1l1l_dataout, wire_n01lO_dataout, ~(niO0Ol));
	and(wire_n1l1O_dataout, wire_n01Oi_dataout, ~(niO0Ol));
	and(wire_n1lii_dataout, wire_n001l_dataout, ~(niO0Ol));
	and(wire_n1lil_dataout, wire_n001O_dataout, ~(niO0Ol));
	and(wire_n1liO_dataout, wire_n000i_dataout, ~(niO0Ol));
	assign		wire_n1lli_dataout = (n01i1i === 1'b1) ? wire_n011l_dataout : wire_n1O0l_dataout;
	assign		wire_n1lll_dataout = (n01i1i === 1'b1) ? wire_n011O_dataout : wire_n1O0O_dataout;
	assign		wire_n1llO_dataout = (n01i1i === 1'b1) ? wire_n010i_dataout : wire_n1Oii_dataout;
	assign		wire_n1lOi_dataout = (n01i1i === 1'b1) ? wire_n010l_dataout : wire_n1Oil_dataout;
	assign		wire_n1lOl_dataout = (n01i1i === 1'b1) ? wire_n010O_dataout : wire_n1OiO_dataout;
	assign		wire_n1lOO_dataout = (n01i1i === 1'b1) ? wire_n01ii_dataout : wire_n1Oli_dataout;
	assign		wire_n1O0i_dataout = (n01i1i === 1'b1) ? (~ wire_n01li_dataout) : wire_n1OOl_dataout;
	assign		wire_n1O0l_dataout = (n010OO === 1'b1) ? wire_n01ll_dataout : wire_nl11lO_dataout;
	assign		wire_n1O0O_dataout = (n010OO === 1'b1) ? wire_n01lO_dataout : wire_nl11Oi_dataout;
	assign		wire_n1O1i_dataout = (n01i1i === 1'b1) ? wire_n01il_dataout : wire_n1Oll_dataout;
	assign		wire_n1O1l_dataout = (n01i1i === 1'b1) ? wire_n01iO_dataout : wire_n1OlO_dataout;
	assign		wire_n1O1O_dataout = (n01i1i === 1'b1) ? wire_n01li_dataout : wire_n1OOi_dataout;
	assign		wire_n1Oii_dataout = (n010OO === 1'b1) ? wire_n01Oi_dataout : wire_nl11Ol_dataout;
	assign		wire_n1Oil_dataout = (n010OO === 1'b1) ? wire_n01Ol_dataout : wire_nl11OO_dataout;
	assign		wire_n1OiO_dataout = (n010OO === 1'b1) ? wire_n01OO_dataout : wire_nl101i_dataout;
	assign		wire_n1Oli_dataout = (n010OO === 1'b1) ? wire_n001i_dataout : wire_nl101l_dataout;
	assign		wire_n1Oll_dataout = (n010OO === 1'b1) ? wire_n001l_dataout : wire_nl101O_dataout;
	assign		wire_n1OlO_dataout = (n010OO === 1'b1) ? wire_n001O_dataout : wire_nl100i_dataout;
	assign		wire_n1OOi_dataout = (n010OO === 1'b1) ? wire_n000i_dataout : wire_nl100l_dataout;
	assign		wire_n1OOl_dataout = (n010OO === 1'b1) ? (~ wire_n000i_dataout) : wire_nl100O_dataout;
	and(wire_ni000i_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni000l_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni000O_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni001i_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni001l_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni001O_dataout, nil11l, ~(tx_std[0]));
	assign		wire_ni00i_dataout = (wire_nlOOi_dataout === 1'b1) ? (n0011l ^ (wire_nl0li_dataout ^ n01lOl)) : n0010O;
	and(wire_ni00ii_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni00il_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni00iO_dataout, nil11O, ~(tx_std[0]));
	assign		wire_ni00l_dataout = (wire_nlOOi_dataout === 1'b1) ? n01l1l : n001lO;
	and(wire_ni00li_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni00ll_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni00lO_dataout, nil11O, ~(tx_std[0]));
	assign		wire_ni00O_dataout = (wire_nlOOi_dataout === 1'b1) ? n01l0i : n0001O;
	and(wire_ni00Oi_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni00Ol_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni00OO_dataout, nil11O, ~(tx_std[0]));
	and(wire_ni010i_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni010l_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni010O_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni011i_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni011l_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni011O_dataout, nil11i, ~(tx_std[0]));
	assign		wire_ni01i_dataout = (wire_nlOOi_dataout === 1'b1) ? (n01O0l ^ (wire_nl0Oi_dataout ^ n01l0i)) : n01OiO;
	and(wire_ni01ii_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni01il_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni01iO_dataout, nil11l, ~(tx_std[0]));
	assign		wire_ni01l_dataout = (wire_nlOOi_dataout === 1'b1) ? (n01OiO ^ (wire_nl0lO_dataout ^ n01l0O)) : n01OOi;
	and(wire_ni01li_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni01ll_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni01lO_dataout, nil11l, ~(tx_std[0]));
	assign		wire_ni01O_dataout = (wire_nlOOi_dataout === 1'b1) ? (n01OOi ^ (wire_nl0ll_dataout ^ n01lli)) : n0011l;
	and(wire_ni01Oi_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni01Ol_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni01OO_dataout, nil11l, ~(tx_std[0]));
	and(wire_ni0i0i_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0i0l_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0i0O_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0i1i_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0i1l_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0i1O_dataout, nil10i, ~(tx_std[0]));
	assign		wire_ni0ii_dataout = (wire_nlOOi_dataout === 1'b1) ? n01l0O : n000iO;
	and(wire_ni0iii_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0iil_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0iiO_dataout, nil10i, ~(tx_std[0]));
	assign		wire_ni0il_dataout = (wire_nlOOi_dataout === 1'b1) ? n01lli : n000Oi;
	and(wire_ni0ili_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0ill_dataout, nil10i, ~(tx_std[0]));
	and(wire_ni0ilO_dataout, nil10l, ~(tx_std[0]));
	assign		wire_ni0iO_dataout = (wire_nlOOi_dataout === 1'b1) ? n01ilO : n01Oil;
	and(wire_ni0iOi_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0iOl_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0iOO_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0l0i_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0l0l_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0l0O_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0l1i_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0l1l_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0l1O_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0lii_dataout, nil10l, ~(tx_std[0]));
	and(wire_ni0lil_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0liO_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0lli_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0lll_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0llO_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0lOi_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0lOl_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0lOO_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0O0i_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0O0l_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0O0O_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0O1i_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0O1l_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0O1O_dataout, nil10O, ~(tx_std[0]));
	and(wire_ni0Oii_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0Oil_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0OiO_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0Oli_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0Oll_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0OlO_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0OOi_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0OOl_dataout, nil1ii, ~(tx_std[0]));
	and(wire_ni0OOO_dataout, nil1il, ~(tx_std[0]));
	and(wire_ni100i_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni100l_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni100O_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni101i_dataout, niiOli, ~(tx_std[0]));
	and(wire_ni101l_dataout, niiOli, ~(tx_std[0]));
	and(wire_ni101O_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni10ii_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni10il_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni10iO_dataout, niiOll, ~(tx_std[0]));
	assign		wire_ni10l_dataout = (wire_nlOOi_dataout === 1'b1) ? n01O0i : n0lOO;
	and(wire_ni10li_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni10ll_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni10lO_dataout, niiOll, ~(tx_std[0]));
	assign		wire_ni10O_dataout = (wire_nlOOi_dataout === 1'b1) ? n01lll : n0O1i;
	and(wire_ni10Oi_dataout, niiOll, ~(tx_std[0]));
	and(wire_ni10Ol_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni10OO_dataout, niiOlO, ~(tx_std[0]));
	assign		wire_ni110i_dataout = (tx_std[0] === 1'b1) ? nil1ii : niiOiO;
	assign		wire_ni110l_dataout = (tx_std[0] === 1'b1) ? nil1ii : niiOiO;
	assign		wire_ni110O_dataout = (tx_std[0] === 1'b1) ? nil1il : niiOiO;
	assign		wire_ni111i_dataout = (tx_std[0] === 1'b1) ? nil10l : niiOiO;
	assign		wire_ni111l_dataout = (tx_std[0] === 1'b1) ? nil10O : niiOiO;
	assign		wire_ni111O_dataout = (tx_std[0] === 1'b1) ? nil10O : niiOiO;
	assign		wire_ni11ii_dataout = (tx_std[0] === 1'b1) ? nil1il : niiOli;
	assign		wire_ni11il_dataout = (tx_std[0] === 1'b1) ? nil1iO : niiOli;
	assign		wire_ni11iO_dataout = (tx_std[0] === 1'b1) ? nil1iO : niiOli;
	assign		wire_ni11li_dataout = (tx_std[0] === 1'b1) ? nil1li : niiOli;
	assign		wire_ni11ll_dataout = (tx_std[0] === 1'b1) ? nil1li : niiOli;
	assign		wire_ni11lO_dataout = (tx_std[0] === 1'b1) ? nil1ll : niiOli;
	assign		wire_ni11Oi_dataout = (tx_std[0] === 1'b1) ? nil1ll : niiOli;
	and(wire_ni11Ol_dataout, niiOli, ~(tx_std[0]));
	and(wire_ni11OO_dataout, niiOli, ~(tx_std[0]));
	and(wire_ni1i0i_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni1i0l_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni1i0O_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni1i1i_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni1i1l_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni1i1O_dataout, niiOlO, ~(tx_std[0]));
	assign		wire_ni1ii_dataout = (wire_nlOOi_dataout === 1'b1) ? n01lii : n0O1l;
	and(wire_ni1iii_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni1iil_dataout, niiOlO, ~(tx_std[0]));
	and(wire_ni1iiO_dataout, niiOlO, ~(tx_std[0]));
	assign		wire_ni1il_dataout = (wire_nlOOi_dataout === 1'b1) ? n01l0l : n0O1O;
	and(wire_ni1ili_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1ill_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1ilO_dataout, niiOOi, ~(tx_std[0]));
	assign		wire_ni1iO_dataout = (wire_nlOOi_dataout === 1'b1) ? n01l1O : n0O0i;
	and(wire_ni1iOi_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1iOl_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1iOO_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1l0i_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1l0l_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1l0O_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1l1i_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1l1l_dataout, niiOOi, ~(tx_std[0]));
	and(wire_ni1l1O_dataout, niiOOi, ~(tx_std[0]));
	assign		wire_ni1li_dataout = (wire_nlOOi_dataout === 1'b1) ? n01l1i : n0O0l;
	and(wire_ni1lii_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1lil_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1liO_dataout, niiOOl, ~(tx_std[0]));
	assign		wire_ni1ll_dataout = (wire_nlOOi_dataout === 1'b1) ? n01iOO : n0O0O;
	and(wire_ni1lli_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1lll_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1llO_dataout, niiOOl, ~(tx_std[0]));
	assign		wire_ni1lO_dataout = (wire_nlOOi_dataout === 1'b1) ? n01iOl : n0Oii;
	and(wire_ni1lOi_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1lOl_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1lOO_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1O0i_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1O0l_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1O0O_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1O1i_dataout, niiOOl, ~(tx_std[0]));
	and(wire_ni1O1l_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1O1O_dataout, niiOOO, ~(tx_std[0]));
	assign		wire_ni1Oi_dataout = (wire_nlOOi_dataout === 1'b1) ? n01iOi : n0Oil;
	and(wire_ni1Oii_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1Oil_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1OiO_dataout, niiOOO, ~(tx_std[0]));
	assign		wire_ni1Ol_dataout = (wire_nlOOi_dataout === 1'b1) ? n01ilO : n0OiO;
	and(wire_ni1Oli_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1Oll_dataout, niiOOO, ~(tx_std[0]));
	and(wire_ni1OlO_dataout, niiOOO, ~(tx_std[0]));
	assign		wire_ni1OO_dataout = (wire_nlOOi_dataout === 1'b1) ? (n01lOl ^ (wire_nl0Ol_dataout ^ n01l1l)) : n01O0l;
	and(wire_ni1OOi_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni1OOl_dataout, nil11i, ~(tx_std[0]));
	and(wire_ni1OOO_dataout, nil11i, ~(tx_std[0]));
	and(wire_nii00i_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii00l_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii00O_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii01i_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii01l_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii01O_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii0ii_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0il_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0iO_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0li_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0ll_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0lO_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0Oi_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0Ol_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii0OO_dataout, nil1li, ~(tx_std[0]));
	and(wire_nii10i_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii10l_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii10O_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii11i_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii11l_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii11O_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii1ii_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii1il_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii1iO_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii1li_dataout, nil1il, ~(tx_std[0]));
	and(wire_nii1ll_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii1lO_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii1Oi_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii1Ol_dataout, nil1iO, ~(tx_std[0]));
	and(wire_nii1OO_dataout, nil1iO, ~(tx_std[0]));
	and(wire_niii0i_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niii0l_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niii0O_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niii1i_dataout, nil1li, ~(tx_std[0]));
	and(wire_niii1l_dataout, nil1li, ~(tx_std[0]));
	and(wire_niii1O_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niiiii_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niiiil_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niiiiO_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niiili_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niiill_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niiilO_dataout, nil1ll, ~(tx_std[0]));
	and(wire_niiiOi_dataout, nil1ll, ~(tx_std[0]));
	assign		wire_niil0i_dataout = (tx_std[1] === 1'b1) ? niiOiO : n0l1iO;
	assign		wire_niil0l_dataout = (tx_std[1] === 1'b1) ? niiOli : n0l1li;
	assign		wire_niil0O_dataout = (tx_std[1] === 1'b1) ? niiOll : n0l1ll;
	assign		wire_niil1l_dataout = (tx_std[1] === 1'b1) ? niiOii : n0li1i;
	assign		wire_niil1O_dataout = (tx_std[1] === 1'b1) ? niiOil : n0l1il;
	assign		wire_niilii_dataout = (tx_std[1] === 1'b1) ? niiOlO : n0l1lO;
	assign		wire_niilil_dataout = (tx_std[1] === 1'b1) ? niiOOi : n0l1Oi;
	assign		wire_niiliO_dataout = (tx_std[1] === 1'b1) ? niiOOl : n0l1Ol;
	assign		wire_niilli_dataout = (tx_std[1] === 1'b1) ? niiOOO : n0l1OO;
	assign		wire_niilll_dataout = (tx_std[1] === 1'b1) ? nil11i : n0l01i;
	assign		wire_niillO_dataout = (tx_std[1] === 1'b1) ? nil11l : n0l01l;
	assign		wire_niilOi_dataout = (tx_std[1] === 1'b1) ? nil11O : n0l01O;
	assign		wire_niilOl_dataout = (tx_std[1] === 1'b1) ? nil10i : n0l00i;
	assign		wire_niilOO_dataout = (tx_std[1] === 1'b1) ? nil10l : n0l00l;
	assign		wire_niiO0i_dataout = (tx_std[1] === 1'b1) ? nil1iO : n0l0iO;
	assign		wire_niiO0l_dataout = (tx_std[1] === 1'b1) ? nil1li : n0l0li;
	assign		wire_niiO0O_dataout = (tx_std[1] === 1'b1) ? nil1ll : n0l0ll;
	assign		wire_niiO1i_dataout = (tx_std[1] === 1'b1) ? nil10O : n0l00O;
	assign		wire_niiO1l_dataout = (tx_std[1] === 1'b1) ? nil1ii : n0l0ii;
	assign		wire_niiO1O_dataout = (tx_std[1] === 1'b1) ? nil1il : n0l0il;
	or(wire_nil00i_dataout, wire_nil0ll_dataout, n1Olil);
	and(wire_nil0ii_dataout, wire_nil0Oi_dataout, ~(n1Olil));
	and(wire_nil0il_dataout, wire_nil0Ol_dataout, ~(n1Olil));
	and(wire_nil0iO_dataout, wire_nil0OO_dataout, ~(n1Olil));
	and(wire_nil0li_dataout, wire_nili1i_dataout, ~(n1Olil));
	and(wire_nil0ll_dataout, nil1Oi, ~(wire_niliil_dataout));
	assign		wire_nil0Oi_dataout = (wire_niliil_dataout === 1'b1) ? wire_nili1l_o[0] : nil1OO;
	assign		wire_nil0Ol_dataout = (wire_niliil_dataout === 1'b1) ? wire_nili1l_o[1] : nil01i;
	assign		wire_nil0OO_dataout = (wire_niliil_dataout === 1'b1) ? wire_nili1l_o[2] : nil01l;
	assign		wire_nili1i_dataout = (wire_niliil_dataout === 1'b1) ? wire_nili1l_o[3] : nil01O;
	or(wire_niliil_dataout, nil1Ol, wire_n00llO_rdusedw[3]);
	assign		wire_niliiO_dataout = (tx_std[1] === 1'b1) ? n0l0l : wire_nillOl_dataout;
	assign		wire_nilili_dataout = (tx_std[1] === 1'b1) ? n0l0O : wire_nillOO_dataout;
	assign		wire_nilill_dataout = (tx_std[1] === 1'b1) ? n0lii : wire_nilO1i_dataout;
	assign		wire_nililO_dataout = (tx_std[1] === 1'b1) ? n0lil : wire_nilO1l_dataout;
	assign		wire_niliOi_dataout = (tx_std[1] === 1'b1) ? n0liO : wire_nilO1O_dataout;
	assign		wire_niliOl_dataout = (tx_std[1] === 1'b1) ? n0lli : wire_nilO0i_dataout;
	assign		wire_niliOO_dataout = (tx_std[1] === 1'b1) ? n0lll : wire_nilO0l_dataout;
	assign		wire_nill0i_dataout = (tx_std[1] === 1'b1) ? n0lOO : wire_nilOiO_dataout;
	assign		wire_nill0l_dataout = (tx_std[1] === 1'b1) ? n0O1i : wire_nilOli_dataout;
	assign		wire_nill0O_dataout = (tx_std[1] === 1'b1) ? n0O1l : wire_nilOll_dataout;
	assign		wire_nill1i_dataout = (tx_std[1] === 1'b1) ? n0llO : wire_nilO0O_dataout;
	assign		wire_nill1l_dataout = (tx_std[1] === 1'b1) ? n0lOi : wire_nilOii_dataout;
	assign		wire_nill1O_dataout = (tx_std[1] === 1'b1) ? n0lOl : wire_nilOil_dataout;
	assign		wire_nillii_dataout = (tx_std[1] === 1'b1) ? n0O1O : wire_nilOlO_dataout;
	assign		wire_nillil_dataout = (tx_std[1] === 1'b1) ? n0O0i : wire_nilOOi_dataout;
	assign		wire_nilliO_dataout = (tx_std[1] === 1'b1) ? n0O0l : wire_nilOOl_dataout;
	assign		wire_nillli_dataout = (tx_std[1] === 1'b1) ? n0O0O : wire_nilOOO_dataout;
	assign		wire_nillll_dataout = (tx_std[1] === 1'b1) ? n0Oii : wire_niO11i_dataout;
	assign		wire_nilllO_dataout = (tx_std[1] === 1'b1) ? n0Oil : wire_niO11l_dataout;
	assign		wire_nillOi_dataout = (tx_std[1] === 1'b1) ? n0OiO : wire_niO11O_dataout;
	assign		wire_nillOl_dataout = (tx_std[0] === 1'b1) ? n0l0l : nil0lO;
	assign		wire_nillOO_dataout = (tx_std[0] === 1'b1) ? n0l0O : niO10O;
	assign		wire_nilO0i_dataout = (tx_std[0] === 1'b1) ? n0lli : niO1li;
	assign		wire_nilO0l_dataout = (tx_std[0] === 1'b1) ? n0lll : niO1ll;
	assign		wire_nilO0O_dataout = (tx_std[0] === 1'b1) ? n0llO : niO1lO;
	assign		wire_nilO1i_dataout = (tx_std[0] === 1'b1) ? n0lii : niO1ii;
	assign		wire_nilO1l_dataout = (tx_std[0] === 1'b1) ? n0lil : niO1il;
	assign		wire_nilO1O_dataout = (tx_std[0] === 1'b1) ? n0liO : niO1iO;
	assign		wire_nilOii_dataout = (tx_std[0] === 1'b1) ? n0lOi : niO1Oi;
	assign		wire_nilOil_dataout = (tx_std[0] === 1'b1) ? n0lOl : niO1OO;
	assign		wire_nilOiO_dataout = (tx_std[0] === 1'b1) ? n0lOO : niO01i;
	assign		wire_nilOli_dataout = (tx_std[0] === 1'b1) ? n0O1i : niO01l;
	assign		wire_nilOll_dataout = (tx_std[0] === 1'b1) ? n0O1l : niO01O;
	assign		wire_nilOlO_dataout = (tx_std[0] === 1'b1) ? n0O1O : niO00i;
	assign		wire_nilOOi_dataout = (tx_std[0] === 1'b1) ? n0O0i : niO00l;
	assign		wire_nilOOl_dataout = (tx_std[0] === 1'b1) ? n0O0l : niO00O;
	assign		wire_nilOOO_dataout = (tx_std[0] === 1'b1) ? n0O0O : niO0ii;
	or(wire_niO10i_dataout, wire_niO10l_dataout, tx_std[1]);
	or(wire_niO10l_dataout, niO0lO, tx_std[0]);
	assign		wire_niO11i_dataout = (tx_std[0] === 1'b1) ? n0Oii : niO0il;
	assign		wire_niO11l_dataout = (tx_std[0] === 1'b1) ? n0Oil : niO0iO;
	assign		wire_niO11O_dataout = (tx_std[0] === 1'b1) ? n0OiO : niO0ll;
	and(wire_niOlil_dataout, wire_niOO1O_dataout, niOiil);
	or(wire_niOlll_dataout, niO0Oi, ~(txdata[6]));
	and(wire_niOllO_dataout, niO0Ol, ~(tx_trs[0]));
	and(wire_niOlOi_dataout, niO0OO, ~(tx_trs[0]));
	and(wire_niOlOl_dataout, niOi1i, ~(tx_trs[0]));
	and(wire_niOlOO_dataout, niOi1l, ~(tx_trs[0]));
	and(wire_niOO0i_dataout, niOiil, ~(tx_trs[0]));
	and(wire_niOO0l_dataout, wire_niOOOO_dataout, ~(n1OO0l));
	and(wire_niOO0O_dataout, wire_nl111i_dataout, ~(n1OO0l));
	and(wire_niOO1i_dataout, niOi1O, ~(tx_trs[0]));
	and(wire_niOO1l_dataout, niOi0i, ~(tx_trs[0]));
	or(wire_niOO1O_dataout, niOi0O, tx_trs[0]);
	assign		wire_niOOii_dataout = (n1OO0l === 1'b1) ? tx_ln[0] : wire_nl111l_dataout;
	assign		wire_niOOil_dataout = (n1OO0l === 1'b1) ? tx_ln[1] : wire_nl111O_dataout;
	assign		wire_niOOiO_dataout = (n1OO0l === 1'b1) ? tx_ln[2] : wire_nl110i_dataout;
	assign		wire_niOOli_dataout = (n1OO0l === 1'b1) ? tx_ln[3] : wire_nl110l_dataout;
	assign		wire_niOOll_dataout = (n1OO0l === 1'b1) ? tx_ln[4] : wire_nl110O_dataout;
	assign		wire_niOOlO_dataout = (n1OO0l === 1'b1) ? tx_ln[5] : wire_nl11ii_dataout;
	assign		wire_niOOOi_dataout = (n1OO0l === 1'b1) ? tx_ln[6] : wire_nl11il_dataout;
	assign		wire_niOOOl_dataout = (n1OO0l === 1'b1) ? (~ tx_ln[6]) : wire_nl11iO_dataout;
	and(wire_niOOOO_dataout, txdata[0], ~(n1OO0i));
	assign		wire_nl000i_dataout = (n1OOil === 1'b1) ? wire_nl0ili_dataout : wire_niOOiO_dataout;
	assign		wire_nl000l_dataout = (n1OOil === 1'b1) ? wire_nl0ill_dataout : wire_niOOli_dataout;
	assign		wire_nl000O_dataout = (n1OOil === 1'b1) ? wire_nl0ilO_dataout : wire_niOOll_dataout;
	assign		wire_nl001i_dataout = (n1OOil === 1'b1) ? wire_nl0iii_dataout : wire_niOO0O_dataout;
	assign		wire_nl001l_dataout = (n1OOil === 1'b1) ? wire_nl0iil_dataout : wire_niOOii_dataout;
	assign		wire_nl001O_dataout = (n1OOil === 1'b1) ? wire_nl0iiO_dataout : wire_niOOil_dataout;
	assign		wire_nl00i_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nll0i_dataout : txdata[9];
	assign		wire_nl00ii_dataout = (n1OOil === 1'b1) ? wire_nl0iOi_dataout : wire_niOOlO_dataout;
	assign		wire_nl00il_dataout = (n1OOil === 1'b1) ? wire_nl0iOl_dataout : wire_niOOOi_dataout;
	assign		wire_nl00iO_dataout = (n1OOil === 1'b1) ? (~ wire_nl0iOl_dataout) : wire_niOOOl_dataout;
	assign		wire_nl00l_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nl0OO_dataout : txdata[10];
	assign		wire_nl00lO_dataout = (niO0Oi === 1'b1) ? nl1liO : nl1iOl;
	assign		wire_nl00O_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nli1i_dataout : txdata[11];
	assign		wire_nl00Oi_dataout = (niO0Oi === 1'b1) ? nl1lli : nl1iOO;
	assign		wire_nl00Ol_dataout = (niO0Oi === 1'b1) ? nl1lll : nl1l1i;
	assign		wire_nl00OO_dataout = (niO0Oi === 1'b1) ? (n0110i ^ nl1llO) : nl1l1l;
	and(wire_nl010i_dataout, wire_nl0iOl_dataout, ~(niO0Ol));
	assign		wire_nl010l_dataout = (n1OOiO === 1'b1) ? wire_nl00lO_dataout : wire_nl01OO_dataout;
	assign		wire_nl010O_dataout = (n1OOiO === 1'b1) ? wire_nl00Oi_dataout : wire_nl001i_dataout;
	and(wire_nl011i_dataout, wire_nl0ill_dataout, ~(niO0Ol));
	and(wire_nl011l_dataout, wire_nl0ilO_dataout, ~(niO0Ol));
	and(wire_nl011O_dataout, wire_nl0iOi_dataout, ~(niO0Ol));
	assign		wire_nl01i_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nll1i_dataout : txdata[6];
	assign		wire_nl01ii_dataout = (n1OOiO === 1'b1) ? wire_nl00Ol_dataout : wire_nl001l_dataout;
	assign		wire_nl01il_dataout = (n1OOiO === 1'b1) ? wire_nl00OO_dataout : wire_nl001O_dataout;
	assign		wire_nl01iO_dataout = (n1OOiO === 1'b1) ? wire_nl0i1i_dataout : wire_nl000i_dataout;
	assign		wire_nl01l_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nll1l_dataout : txdata[7];
	assign		wire_nl01li_dataout = (n1OOiO === 1'b1) ? wire_nl0i1l_dataout : wire_nl000l_dataout;
	assign		wire_nl01ll_dataout = (n1OOiO === 1'b1) ? wire_nl0i1O_dataout : wire_nl000O_dataout;
	assign		wire_nl01lO_dataout = (n1OOiO === 1'b1) ? wire_nl0i0i_dataout : wire_nl00ii_dataout;
	assign		wire_nl01O_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nll1O_dataout : txdata[8];
	assign		wire_nl01Oi_dataout = (n1OOiO === 1'b1) ? wire_nl0i0l_dataout : wire_nl00il_dataout;
	assign		wire_nl01Ol_dataout = (n1OOiO === 1'b1) ? (~ wire_nl0i0l_dataout) : wire_nl00iO_dataout;
	assign		wire_nl01OO_dataout = (n1OOil === 1'b1) ? wire_nl0i0O_dataout : wire_niOO0l_dataout;
	assign		wire_nl0i0i_dataout = (niO0Oi === 1'b1) ? ((n0111i ^ nl1O1i) ^ n1OOOO) : nl1l0O;
	assign		wire_nl0i0l_dataout = (niO0Oi === 1'b1) ? ((n0110i ^ n1OOOO) ^ n1OOOl) : nl1lii;
	assign		wire_nl0i0O_dataout = (niO0Oi === 1'b1) ? ((n0111O ^ n1OOOl) ^ n1OOOi) : nl1lil;
	assign		wire_nl0i1i_dataout = (niO0Oi === 1'b1) ? ((n0110i ^ nl1lOi) ^ n0111O) : nl1l1O;
	assign		wire_nl0i1l_dataout = (niO0Oi === 1'b1) ? ((n0111O ^ nl1lOl) ^ n0111l) : nl1l0i;
	assign		wire_nl0i1O_dataout = (niO0Oi === 1'b1) ? ((n0111l ^ nl1lOO) ^ n0111i) : nl1l0l;
	assign		wire_nl0ii_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nli1l_dataout : txdata[12];
	assign		wire_nl0iii_dataout = (niO0Oi === 1'b1) ? ((n0111l ^ n1OOOi) ^ n1OOlO) : nl1liO;
	assign		wire_nl0iil_dataout = (niO0Oi === 1'b1) ? ((n0111i ^ n1OOlO) ^ n1OOll) : nl1lli;
	assign		wire_nl0iiO_dataout = (niO0Oi === 1'b1) ? ((n1OOOO ^ n1OOll) ^ n1OOli) : nl1lll;
	assign		wire_nl0il_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nli1O_dataout : txdata[13];
	assign		wire_nl0ili_dataout = (niO0Oi === 1'b1) ? (n1OOOl ^ n1OOli) : nl1llO;
	assign		wire_nl0ill_dataout = (niO0Oi === 1'b1) ? n1OOOi : nl1lOi;
	assign		wire_nl0ilO_dataout = (niO0Oi === 1'b1) ? n1OOlO : nl1lOl;
	assign		wire_nl0iO_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nli0i_dataout : txdata[14];
	assign		wire_nl0iOi_dataout = (niO0Oi === 1'b1) ? n1OOll : nl1lOO;
	assign		wire_nl0iOl_dataout = (niO0Oi === 1'b1) ? n1OOli : nl1O1i;
	assign		wire_nl0li_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nli0l_dataout : txdata[15];
	assign		wire_nl0ll_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nli0O_dataout : txdata[16];
	assign		wire_nl0lO_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nliii_dataout : txdata[17];
	assign		wire_nl0Oi_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nliil_dataout : txdata[18];
	assign		wire_nl0Ol_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nliiO_dataout : txdata[19];
	assign		wire_nl0OO_dataout = (nlOii === 1'b1) ? nl0OOO : n11il;
	assign		wire_nl100i_dataout = (n1OOii === 1'b1) ? wire_nllOl_dataout : wire_nl10Ol_dataout;
	assign		wire_nl100l_dataout = (n1OOii === 1'b1) ? wire_nllOO_dataout : wire_nl10OO_dataout;
	assign		wire_nl100O_dataout = (n1OOii === 1'b1) ? (~ wire_nllOO_dataout) : wire_nl1i1i_dataout;
	assign		wire_nl101i_dataout = (n1OOii === 1'b1) ? wire_nllll_dataout : wire_nl10ll_dataout;
	assign		wire_nl101l_dataout = (n1OOii === 1'b1) ? wire_nlllO_dataout : wire_nl10lO_dataout;
	assign		wire_nl101O_dataout = (n1OOii === 1'b1) ? wire_nllOi_dataout : wire_nl10Oi_dataout;
	and(wire_nl10ii_dataout, txdata[10], ~(n1OO0O));
	and(wire_nl10il_dataout, txdata[11], ~(n1OO0O));
	assign		wire_nl10iO_dataout = (n1OO0O === 1'b1) ? wire_nlO1i_dataout : txdata[12];
	assign		wire_nl10li_dataout = (n1OO0O === 1'b1) ? wire_nlO1l_dataout : txdata[13];
	assign		wire_nl10ll_dataout = (n1OO0O === 1'b1) ? wire_nlO1O_dataout : txdata[14];
	assign		wire_nl10lO_dataout = (n1OO0O === 1'b1) ? wire_nlO0i_dataout : txdata[15];
	and(wire_nl10Oi_dataout, txdata[16], ~(n1OO0O));
	and(wire_nl10Ol_dataout, txdata[17], ~(n1OO0O));
	and(wire_nl10OO_dataout, txdata[18], ~(n1OO0O));
	assign		wire_nl110i_dataout = (n1OO0i === 1'b1) ? tx_ln[9] : txdata[4];
	assign		wire_nl110l_dataout = (n1OO0i === 1'b1) ? tx_ln[10] : txdata[5];
	and(wire_nl110O_dataout, txdata[6], ~(n1OO0i));
	and(wire_nl111i_dataout, txdata[1], ~(n1OO0i));
	assign		wire_nl111l_dataout = (n1OO0i === 1'b1) ? tx_ln[7] : txdata[2];
	assign		wire_nl111O_dataout = (n1OO0i === 1'b1) ? tx_ln[8] : txdata[3];
	and(wire_nl11ii_dataout, txdata[7], ~(n1OO0i));
	and(wire_nl11il_dataout, txdata[8], ~(n1OO0i));
	or(wire_nl11iO_dataout, txdata[9], n1OO0i);
	and(wire_nl11lO_dataout, wire_nl10ii_dataout, ~(n1OOii));
	and(wire_nl11Oi_dataout, wire_nl10il_dataout, ~(n1OOii));
	assign		wire_nl11Ol_dataout = (n1OOii === 1'b1) ? wire_nlliO_dataout : wire_nl10iO_dataout;
	assign		wire_nl11OO_dataout = (n1OOii === 1'b1) ? wire_nllli_dataout : wire_nl10li_dataout;
	or(wire_nl1i1i_dataout, txdata[19], n1OO0O);
	assign		wire_nl1li_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nlili_dataout : txdata[0];
	assign		wire_nl1ll_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nlill_dataout : txdata[1];
	assign		wire_nl1lO_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nlilO_dataout : txdata[2];
	and(wire_nl1O0i_dataout, wire_nl00Ol_dataout, ~(niO0Ol));
	and(wire_nl1O0l_dataout, wire_nl00OO_dataout, ~(niO0Ol));
	and(wire_nl1O0O_dataout, wire_nl0i1i_dataout, ~(niO0Ol));
	and(wire_nl1O1l_dataout, wire_nl00lO_dataout, ~(niO0Ol));
	and(wire_nl1O1O_dataout, wire_nl00Oi_dataout, ~(niO0Ol));
	assign		wire_nl1Oi_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nliOi_dataout : txdata[3];
	and(wire_nl1Oii_dataout, wire_nl0i1l_dataout, ~(niO0Ol));
	and(wire_nl1Oil_dataout, wire_nl0i1O_dataout, ~(niO0Ol));
	and(wire_nl1OiO_dataout, wire_nl0i0i_dataout, ~(niO0Ol));
	assign		wire_nl1Ol_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nliOl_dataout : txdata[4];
	and(wire_nl1Oli_dataout, wire_nl0i0l_dataout, ~(niO0Ol));
	and(wire_nl1Oll_dataout, wire_nl0i0O_dataout, ~(niO0Ol));
	and(wire_nl1OlO_dataout, wire_nl0iii_dataout, ~(niO0Ol));
	assign		wire_nl1OO_dataout = (wire_nlOOi_dataout === 1'b1) ? wire_nliOO_dataout : txdata[5];
	and(wire_nl1OOi_dataout, wire_nl0iil_dataout, ~(niO0Ol));
	and(wire_nl1OOl_dataout, wire_nl0iiO_dataout, ~(niO0Ol));
	and(wire_nl1OOO_dataout, wire_nl0ili_dataout, ~(niO0Ol));
	assign		wire_nli0i_dataout = (nlOii === 1'b1) ? nli10i : n11lO;
	assign		wire_nli0l_dataout = (nlOii === 1'b1) ? nli10l : n11Oi;
	assign		wire_nli0O_dataout = (nlOii === 1'b1) ? nli10O : n11Ol;
	and(wire_nli0Ol_dataout, wire_nliOiO_dataout, ~(niO0Ol));
	and(wire_nli0OO_dataout, wire_nliOli_dataout, ~(niO0Ol));
	assign		wire_nli1i_dataout = (nlOii === 1'b1) ? nli11i : n11iO;
	assign		wire_nli1l_dataout = (nlOii === 1'b1) ? nli11l : n11li;
	assign		wire_nli1O_dataout = (nlOii === 1'b1) ? nli11O : n11ll;
	and(wire_nlii0i_dataout, wire_nliOOl_dataout, ~(niO0Ol));
	and(wire_nlii0l_dataout, wire_nliOOO_dataout, ~(niO0Ol));
	and(wire_nlii0O_dataout, wire_nll11i_dataout, ~(niO0Ol));
	and(wire_nlii1i_dataout, wire_nliOll_dataout, ~(niO0Ol));
	and(wire_nlii1l_dataout, wire_nliOlO_dataout, ~(niO0Ol));
	and(wire_nlii1O_dataout, wire_nliOOi_dataout, ~(niO0Ol));
	assign		wire_nliii_dataout = (nlOii === 1'b1) ? nli1ii : n11OO;
	and(wire_nliiii_dataout, wire_nll11l_dataout, ~(niO0Ol));
	and(wire_nliiil_dataout, wire_nll11O_dataout, ~(niO0Ol));
	and(wire_nliiiO_dataout, wire_nll10i_dataout, ~(niO0Ol));
	assign		wire_nliil_dataout = (nlOii === 1'b1) ? nli1il : n101i;
	and(wire_nliili_dataout, wire_nll10l_dataout, ~(niO0Ol));
	and(wire_nliill_dataout, wire_nll10O_dataout, ~(niO0Ol));
	and(wire_nliilO_dataout, wire_nll1ii_dataout, ~(niO0Ol));
	assign		wire_nliiO_dataout = (nlOii === 1'b1) ? nli1iO : n101l;
	and(wire_nliiOi_dataout, wire_nll1il_dataout, ~(niO0Ol));
	and(wire_nliiOl_dataout, wire_nll1iO_dataout, ~(niO0Ol));
	and(wire_nliiOO_dataout, wire_nll1li_dataout, ~(niO0Ol));
	assign		wire_nlil0i_dataout = (n011ii === 1'b1) ? wire_nliOll_dataout : wire_nlilOl_dataout;
	assign		wire_nlil0l_dataout = (n011ii === 1'b1) ? wire_nliOlO_dataout : wire_nlilOO_dataout;
	assign		wire_nlil0O_dataout = (n011ii === 1'b1) ? wire_nliOOi_dataout : wire_nliO1i_dataout;
	and(wire_nlil1i_dataout, wire_nll1ll_dataout, ~(niO0Ol));
	assign		wire_nlil1l_dataout = (n011ii === 1'b1) ? wire_nliOiO_dataout : wire_nlillO_dataout;
	assign		wire_nlil1O_dataout = (n011ii === 1'b1) ? wire_nliOli_dataout : wire_nlilOi_dataout;
	assign		wire_nlili_dataout = (nlOii === 1'b1) ? nl1i0i : nllilO;
	assign		wire_nlilii_dataout = (n011ii === 1'b1) ? wire_nliOOl_dataout : wire_nliO1l_dataout;
	assign		wire_nlilil_dataout = (n011ii === 1'b1) ? wire_nliOOO_dataout : wire_nliO1O_dataout;
	assign		wire_nliliO_dataout = (n011ii === 1'b1) ? wire_nll11i_dataout : wire_nliO0i_dataout;
	assign		wire_nlill_dataout = (nlOii === 1'b1) ? nl1i0l : nlliOi;
	assign		wire_nlilli_dataout = (n011ii === 1'b1) ? wire_nll11l_dataout : wire_nliO0l_dataout;
	assign		wire_nlilll_dataout = (n011ii === 1'b1) ? (~ wire_nll11l_dataout) : wire_nliO0O_dataout;
	assign		wire_nlillO_dataout = (n0110O === 1'b1) ? wire_nll11O_dataout : wire_nl11lO_dataout;
	assign		wire_nlilO_dataout = (nlOii === 1'b1) ? nl1i0O : nlliOl;
	assign		wire_nlilOi_dataout = (n0110O === 1'b1) ? wire_nll10i_dataout : wire_nl11Oi_dataout;
	assign		wire_nlilOl_dataout = (n0110O === 1'b1) ? wire_nll10l_dataout : wire_nl11Ol_dataout;
	assign		wire_nlilOO_dataout = (n0110O === 1'b1) ? wire_nll10O_dataout : wire_nl11OO_dataout;
	assign		wire_nliO0i_dataout = (n0110O === 1'b1) ? wire_nll1li_dataout : wire_nl100i_dataout;
	assign		wire_nliO0l_dataout = (n0110O === 1'b1) ? wire_nll1ll_dataout : wire_nl100l_dataout;
	assign		wire_nliO0O_dataout = (n0110O === 1'b1) ? (~ wire_nll1ll_dataout) : wire_nl100O_dataout;
	assign		wire_nliO1i_dataout = (n0110O === 1'b1) ? wire_nll1ii_dataout : wire_nl101i_dataout;
	assign		wire_nliO1l_dataout = (n0110O === 1'b1) ? wire_nll1il_dataout : wire_nl101l_dataout;
	assign		wire_nliO1O_dataout = (n0110O === 1'b1) ? wire_nll1iO_dataout : wire_nl101O_dataout;
	assign		wire_nliOi_dataout = (nlOii === 1'b1) ? nl1iii : nlliOO;
	assign		wire_nliOiO_dataout = (niO0Oi === 1'b1) ? nli00l : nli1li;
	assign		wire_nliOl_dataout = (nlOii === 1'b1) ? nl1iil : nlll1i;
	assign		wire_nliOli_dataout = (niO0Oi === 1'b1) ? nli00O : nli1ll;
	assign		wire_nliOll_dataout = (niO0Oi === 1'b1) ? nli0ii : nli1lO;
	assign		wire_nliOlO_dataout = (niO0Oi === 1'b1) ? (n0101l ^ nli0il) : nli1Oi;
	assign		wire_nliOO_dataout = (nlOii === 1'b1) ? nl1iiO : nlll1l;
	assign		wire_nliOOi_dataout = (niO0Oi === 1'b1) ? ((n0101l ^ nli0iO) ^ n0101i) : nli1Ol;
	assign		wire_nliOOl_dataout = (niO0Oi === 1'b1) ? ((n0101i ^ nli0li) ^ n011OO) : nli1OO;
	assign		wire_nliOOO_dataout = (niO0Oi === 1'b1) ? ((n011OO ^ nli0ll) ^ n011Ol) : nli01i;
	assign		wire_nll0i_dataout = (nlOii === 1'b1) ? nl1iOi : nlll0O;
	assign		wire_nll10i_dataout = (niO0Oi === 1'b1) ? ((n011OO ^ n011ll) ^ n011li) : nli00l;
	assign		wire_nll10l_dataout = (niO0Oi === 1'b1) ? ((n011Ol ^ n011li) ^ n011iO) : nli00O;
	assign		wire_nll10O_dataout = (niO0Oi === 1'b1) ? ((n011Oi ^ n011iO) ^ n011il) : nli0ii;
	assign		wire_nll11i_dataout = (niO0Oi === 1'b1) ? ((n011Ol ^ nli0Oi) ^ n011Oi) : nli01l;
	assign		wire_nll11l_dataout = (niO0Oi === 1'b1) ? ((n0101l ^ n011Oi) ^ n011lO) : nli01O;
	assign		wire_nll11O_dataout = (niO0Oi === 1'b1) ? ((n0101i ^ n011lO) ^ n011ll) : nli00i;
	assign		wire_nll1i_dataout = (nlOii === 1'b1) ? nl1ili : nlll1O;
	assign		wire_nll1ii_dataout = (niO0Oi === 1'b1) ? (n011lO ^ n011il) : nli0il;
	assign		wire_nll1il_dataout = (niO0Oi === 1'b1) ? n011ll : nli0iO;
	assign		wire_nll1iO_dataout = (niO0Oi === 1'b1) ? n011li : nli0li;
	assign		wire_nll1l_dataout = (nlOii === 1'b1) ? nl1ill : nlll0i;
	assign		wire_nll1li_dataout = (niO0Oi === 1'b1) ? n011iO : nli0ll;
	assign		wire_nll1ll_dataout = (niO0Oi === 1'b1) ? n011il : nli0Oi;
	assign		wire_nll1O_dataout = (nlOii === 1'b1) ? nl1ilO : nlll0l;
	assign		wire_nlliO_dataout = (tx_std[0] === 1'b1) ? tx_ln[0] : tx_ln[11];
	assign		wire_nllli_dataout = (tx_std[0] === 1'b1) ? tx_ln[1] : tx_ln[12];
	assign		wire_nllll_dataout = (tx_std[0] === 1'b1) ? tx_ln[2] : tx_ln[13];
	assign		wire_nlllO_dataout = (tx_std[0] === 1'b1) ? tx_ln[3] : tx_ln[14];
	assign		wire_nllOi_dataout = (tx_std[0] === 1'b1) ? tx_ln[4] : tx_ln[15];
	assign		wire_nllOl_dataout = (tx_std[0] === 1'b1) ? tx_ln[5] : tx_ln[16];
	and(wire_nllOli_dataout, wire_nlOi0l_dataout, ~(niO0Ol));
	and(wire_nllOll_dataout, wire_nlOi0O_dataout, ~(niO0Ol));
	and(wire_nllOlO_dataout, wire_nlOiii_dataout, ~(niO0Ol));
	assign		wire_nllOO_dataout = (tx_std[0] === 1'b1) ? tx_ln[6] : tx_ln[17];
	and(wire_nllOOi_dataout, wire_nlOiil_dataout, ~(niO0Ol));
	and(wire_nllOOl_dataout, wire_nlOiiO_dataout, ~(niO0Ol));
	and(wire_nllOOO_dataout, wire_nlOili_dataout, ~(niO0Ol));
	assign		wire_nlO00i_dataout = (n0100i === 1'b1) ? wire_nlOill_dataout : wire_nlO0Ol_dataout;
	assign		wire_nlO00l_dataout = (n0100i === 1'b1) ? wire_nlOilO_dataout : wire_nlO0OO_dataout;
	assign		wire_nlO00O_dataout = (n0100i === 1'b1) ? wire_nlOiOi_dataout : wire_nlOi1i_dataout;
	assign		wire_nlO01i_dataout = (n0100i === 1'b1) ? wire_nlOiil_dataout : wire_nlO0ll_dataout;
	assign		wire_nlO01l_dataout = (n0100i === 1'b1) ? wire_nlOiiO_dataout : wire_nlO0lO_dataout;
	assign		wire_nlO01O_dataout = (n0100i === 1'b1) ? wire_nlOili_dataout : wire_nlO0Oi_dataout;
	assign		wire_nlO0i_dataout = (tx_std[0] === 1'b1) ? tx_ln[10] : tx_ln[21];
	assign		wire_nlO0ii_dataout = (n0100i === 1'b1) ? (~ wire_nlOiOi_dataout) : wire_nlOi1l_dataout;
	assign		wire_nlO0il_dataout = (n0101O === 1'b1) ? wire_nlOiOl_dataout : wire_niOO0l_dataout;
	assign		wire_nlO0iO_dataout = (n0101O === 1'b1) ? wire_nlOiOO_dataout : wire_niOO0O_dataout;
	or(wire_nlO0l_dataout, (~ nlOii), tx_std[0]);
	assign		wire_nlO0li_dataout = (n0101O === 1'b1) ? wire_nlOl1i_dataout : wire_niOOii_dataout;
	assign		wire_nlO0ll_dataout = (n0101O === 1'b1) ? wire_nlOl1l_dataout : wire_niOOil_dataout;
	assign		wire_nlO0lO_dataout = (n0101O === 1'b1) ? wire_nlOl1O_dataout : wire_niOOiO_dataout;
	assign		wire_nlO0Oi_dataout = (n0101O === 1'b1) ? wire_nlOl0i_dataout : wire_niOOli_dataout;
	assign		wire_nlO0Ol_dataout = (n0101O === 1'b1) ? wire_nlOl0l_dataout : wire_niOOll_dataout;
	assign		wire_nlO0OO_dataout = (n0101O === 1'b1) ? wire_nlOl0O_dataout : wire_niOOlO_dataout;
	and(wire_nlO10i_dataout, wire_nlOiOl_dataout, ~(niO0Ol));
	and(wire_nlO10l_dataout, wire_nlOiOO_dataout, ~(niO0Ol));
	and(wire_nlO10O_dataout, wire_nlOl1i_dataout, ~(niO0Ol));
	and(wire_nlO11i_dataout, wire_nlOill_dataout, ~(niO0Ol));
	and(wire_nlO11l_dataout, wire_nlOilO_dataout, ~(niO0Ol));
	and(wire_nlO11O_dataout, wire_nlOiOi_dataout, ~(niO0Ol));
	assign		wire_nlO1i_dataout = (tx_std[0] === 1'b1) ? tx_ln[7] : tx_ln[18];
	and(wire_nlO1ii_dataout, wire_nlOl1l_dataout, ~(niO0Ol));
	and(wire_nlO1il_dataout, wire_nlOl1O_dataout, ~(niO0Ol));
	and(wire_nlO1iO_dataout, wire_nlOl0i_dataout, ~(niO0Ol));
	assign		wire_nlO1l_dataout = (tx_std[0] === 1'b1) ? tx_ln[8] : tx_ln[19];
	and(wire_nlO1li_dataout, wire_nlOl0l_dataout, ~(niO0Ol));
	and(wire_nlO1ll_dataout, wire_nlOl0O_dataout, ~(niO0Ol));
	and(wire_nlO1lO_dataout, wire_nlOlii_dataout, ~(niO0Ol));
	assign		wire_nlO1O_dataout = (tx_std[0] === 1'b1) ? tx_ln[9] : tx_ln[20];
	assign		wire_nlO1Oi_dataout = (n0100i === 1'b1) ? wire_nlOi0l_dataout : wire_nlO0il_dataout;
	assign		wire_nlO1Ol_dataout = (n0100i === 1'b1) ? wire_nlOi0O_dataout : wire_nlO0iO_dataout;
	assign		wire_nlO1OO_dataout = (n0100i === 1'b1) ? wire_nlOiii_dataout : wire_nlO0li_dataout;
	assign		wire_nlOi0l_dataout = (niO0Oi === 1'b1) ? nllO1l : nlllii;
	assign		wire_nlOi0O_dataout = (niO0Oi === 1'b1) ? nllO1O : nlllil;
	assign		wire_nlOi1i_dataout = (n0101O === 1'b1) ? wire_nlOlii_dataout : wire_niOOOi_dataout;
	assign		wire_nlOi1l_dataout = (n0101O === 1'b1) ? (~ wire_nlOlii_dataout) : wire_niOOOl_dataout;
	assign		wire_nlOiii_dataout = (niO0Oi === 1'b1) ? nllO0i : nllliO;
	assign		wire_nlOiil_dataout = (niO0Oi === 1'b1) ? (n010Ol ^ nllO0l) : nlllli;
	assign		wire_nlOiiO_dataout = (niO0Oi === 1'b1) ? ((n010Ol ^ nllO0O) ^ n010Oi) : nlllll;
	or(wire_nlOil_dataout, wire_nlOiO_dataout, tx_std[0]);
	assign		wire_nlOili_dataout = (niO0Oi === 1'b1) ? ((n010Oi ^ nllOii) ^ n010lO) : nllllO;
	assign		wire_nlOill_dataout = (niO0Oi === 1'b1) ? ((n010lO ^ nllOil) ^ n010ll) : nlllOi;
	assign		wire_nlOilO_dataout = (niO0Oi === 1'b1) ? ((n010ll ^ nllOiO) ^ n010li) : nlllOl;
	and(wire_nlOiO_dataout, (~ nlOii), ~(((tx_trs[0] & (~ nlOlO)) & (n00iOl4 ^ n00iOl3))));
	assign		wire_nlOiOi_dataout = (niO0Oi === 1'b1) ? ((n010Ol ^ n010li) ^ n010iO) : nlllOO;
	assign		wire_nlOiOl_dataout = (niO0Oi === 1'b1) ? ((n010Oi ^ n010iO) ^ n010il) : nllO1i;
	assign		wire_nlOiOO_dataout = (niO0Oi === 1'b1) ? ((n010lO ^ n010il) ^ n010ii) : nllO1l;
	assign		wire_nlOl0i_dataout = (niO0Oi === 1'b1) ? n010il : nllO0O;
	assign		wire_nlOl0l_dataout = (niO0Oi === 1'b1) ? n010ii : nllOii;
	assign		wire_nlOl0O_dataout = (niO0Oi === 1'b1) ? n0100O : nllOil;
	assign		wire_nlOl1i_dataout = (niO0Oi === 1'b1) ? ((n010ll ^ n010ii) ^ n0100O) : nllO1O;
	assign		wire_nlOl1l_dataout = (niO0Oi === 1'b1) ? ((n010li ^ n0100O) ^ n0100l) : nllO0i;
	assign		wire_nlOl1O_dataout = (niO0Oi === 1'b1) ? (n010iO ^ n0100l) : nllO0l;
	assign		wire_nlOlii_dataout = (niO0Oi === 1'b1) ? n0100l : nllOiO;
	or(wire_nlOOi_dataout, tx_std[0], tx_std[1]);
	oper_add   n0O0Ol
	( 
	.a({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_n0O0Ol_o));
	defparam
		n0O0Ol.sgate_representation = 0,
		n0O0Ol.width_a = 4,
		n0O0Ol.width_b = 4,
		n0O0Ol.width_o = 4;
	oper_add   nili1l
	( 
	.a({nil01O, nil01l, nil01i, nil1OO}),
	.b({{3{1'b0}}, 1'b1}),
	.cin(1'b0),
	.cout(),
	.o(wire_nili1l_o));
	defparam
		nili1l.sgate_representation = 0,
		nili1l.width_a = 4,
		nili1l.width_b = 4,
		nili1l.width_o = 4;
	oper_less_than   n0Ol0l
	( 
	.a({4{1'b0}}),
	.b({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}),
	.cin(1'b0),
	.o(wire_n0Ol0l_o));
	defparam
		n0Ol0l.sgate_representation = 0,
		n0Ol0l.width_a = 4,
		n0Ol0l.width_b = 4;
	oper_mux   n0O0OO
	( 
	.data({{5{n00l1O}}, wire_nii0iO_dataout, wire_nii10i_dataout, wire_ni0lOl_dataout, wire_ni0iiO_dataout, wire_ni000i_dataout, wire_ni1OOl_dataout, wire_ni1liO_dataout, wire_ni1i0i_dataout, wire_ni11Ol_dataout, wire_n0OOiO_dataout, niiOii}),
	.o(wire_n0O0OO_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0O0OO.width_data = 16,
		n0O0OO.width_sel = 4;
	oper_mux   n0Oi0i
	( 
	.data({{5{n00l1O}}, wire_nii0Oi_dataout, wire_nii1il_dataout, wire_ni0O1O_dataout, wire_ni0iOi_dataout, wire_ni00il_dataout, wire_ni011O_dataout, wire_ni1lOi_dataout, wire_ni1iil_dataout, wire_ni101O_dataout, wire_n0OOOi_dataout, wire_n0Olil_dataout}),
	.o(wire_n0Oi0i_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oi0i.width_data = 16,
		n0Oi0i.width_sel = 4;
	oper_mux   n0Oi0l
	( 
	.data({{5{n00l1O}}, wire_nii0Ol_dataout, wire_nii1iO_dataout, wire_ni0O0i_dataout, wire_ni0iOl_dataout, wire_ni00iO_dataout, wire_ni010i_dataout, wire_ni1lOl_dataout, wire_ni1iiO_dataout, wire_ni100i_dataout, wire_n0OOOl_dataout, wire_n0OliO_dataout}),
	.o(wire_n0Oi0l_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oi0l.width_data = 16,
		n0Oi0l.width_sel = 4;
	oper_mux   n0Oi0O
	( 
	.data({{5{n00l1O}}, wire_nii0OO_dataout, wire_nii1li_dataout, wire_ni0O0l_dataout, wire_ni0iOO_dataout, wire_ni00li_dataout, wire_ni010l_dataout, wire_ni1lOO_dataout, wire_ni1ili_dataout, wire_ni100l_dataout, wire_n0OOOO_dataout, wire_n0Olli_dataout}),
	.o(wire_n0Oi0O_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oi0O.width_data = 16,
		n0Oi0O.width_sel = 4;
	oper_mux   n0Oi1i
	( 
	.data({{5{n00l1O}}, wire_nii0li_dataout, wire_nii10l_dataout, wire_ni0lOO_dataout, wire_ni0ili_dataout, wire_ni000l_dataout, wire_ni1OOO_dataout, wire_ni1lli_dataout, wire_ni1i0l_dataout, wire_ni11OO_dataout, wire_n0OOli_dataout, niiOii}),
	.o(wire_n0Oi1i_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oi1i.width_data = 16,
		n0Oi1i.width_sel = 4;
	oper_mux   n0Oi1l
	( 
	.data({{5{n00l1O}}, wire_nii0ll_dataout, wire_nii10O_dataout, wire_ni0O1i_dataout, wire_ni0ill_dataout, wire_ni000O_dataout, wire_ni011i_dataout, wire_ni1lll_dataout, wire_ni1i0O_dataout, wire_ni101i_dataout, wire_n0OOll_dataout, wire_n0Ol0O_dataout}),
	.o(wire_n0Oi1l_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oi1l.width_data = 16,
		n0Oi1l.width_sel = 4;
	oper_mux   n0Oi1O
	( 
	.data({{5{n00l1O}}, wire_nii0lO_dataout, wire_nii1ii_dataout, wire_ni0O1l_dataout, wire_ni0ilO_dataout, wire_ni00ii_dataout, wire_ni011l_dataout, wire_ni1llO_dataout, wire_ni1iii_dataout, wire_ni101l_dataout, wire_n0OOlO_dataout, wire_n0Olii_dataout}),
	.o(wire_n0Oi1O_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oi1O.width_data = 16,
		n0Oi1O.width_sel = 4;
	oper_mux   n0Oiii
	( 
	.data({{5{n00l1O}}, wire_niii1i_dataout, wire_nii1ll_dataout, wire_ni0O0O_dataout, wire_ni0l1i_dataout, wire_ni00ll_dataout, wire_ni010O_dataout, wire_ni1O1i_dataout, wire_ni1ill_dataout, wire_ni100O_dataout, wire_ni111i_dataout, wire_n0Olll_dataout}),
	.o(wire_n0Oiii_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oiii.width_data = 16,
		n0Oiii.width_sel = 4;
	oper_mux   n0Oiil
	( 
	.data({{5{n00l1O}}, wire_niii1l_dataout, wire_nii1lO_dataout, wire_ni0Oii_dataout, wire_ni0l1l_dataout, wire_ni00lO_dataout, wire_ni01ii_dataout, wire_ni1O1l_dataout, wire_ni1ilO_dataout, wire_ni10ii_dataout, wire_ni111l_dataout, wire_n0OllO_dataout}),
	.o(wire_n0Oiil_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oiil.width_data = 16,
		n0Oiil.width_sel = 4;
	oper_mux   n0OiiO
	( 
	.data({{5{n00l1O}}, wire_niii1O_dataout, wire_nii1Oi_dataout, wire_ni0Oil_dataout, wire_ni0l1O_dataout, wire_ni00Oi_dataout, wire_ni01il_dataout, wire_ni1O1O_dataout, wire_ni1iOi_dataout, wire_ni10il_dataout, wire_ni111O_dataout, wire_n0OlOi_dataout}),
	.o(wire_n0OiiO_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0OiiO.width_data = 16,
		n0OiiO.width_sel = 4;
	oper_mux   n0Oili
	( 
	.data({{5{n00l1O}}, wire_niii0i_dataout, wire_nii1Ol_dataout, wire_ni0OiO_dataout, wire_ni0l0i_dataout, wire_ni00Ol_dataout, wire_ni01iO_dataout, wire_ni1O0i_dataout, wire_ni1iOl_dataout, wire_ni10iO_dataout, wire_ni110i_dataout, wire_n0OlOl_dataout}),
	.o(wire_n0Oili_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oili.width_data = 16,
		n0Oili.width_sel = 4;
	oper_mux   n0Oill
	( 
	.data({{5{n00l1O}}, wire_niii0l_dataout, wire_nii1OO_dataout, wire_ni0Oli_dataout, wire_ni0l0l_dataout, wire_ni00OO_dataout, wire_ni01li_dataout, wire_ni1O0l_dataout, wire_ni1iOO_dataout, wire_ni10li_dataout, wire_ni110l_dataout, wire_n0OlOO_dataout}),
	.o(wire_n0Oill_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Oill.width_data = 16,
		n0Oill.width_sel = 4;
	oper_mux   n0OilO
	( 
	.data({{5{n00l1O}}, wire_niii0O_dataout, wire_nii01i_dataout, wire_ni0Oll_dataout, wire_ni0l0O_dataout, wire_ni0i1i_dataout, wire_ni01ll_dataout, wire_ni1O0O_dataout, wire_ni1l1i_dataout, wire_ni10ll_dataout, wire_ni110O_dataout, wire_n0OO1i_dataout}),
	.o(wire_n0OilO_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0OilO.width_data = 16,
		n0OilO.width_sel = 4;
	oper_mux   n0OiOi
	( 
	.data({{5{n00l1O}}, wire_niiiii_dataout, wire_nii01l_dataout, wire_ni0OlO_dataout, wire_ni0lii_dataout, wire_ni0i1l_dataout, wire_ni01lO_dataout, wire_ni1Oii_dataout, wire_ni1l1l_dataout, wire_ni10lO_dataout, wire_ni11ii_dataout, wire_n0OO1l_dataout}),
	.o(wire_n0OiOi_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0OiOi.width_data = 16,
		n0OiOi.width_sel = 4;
	oper_mux   n0OiOl
	( 
	.data({{5{n00l1O}}, wire_niiiil_dataout, wire_nii01O_dataout, wire_ni0OOi_dataout, wire_ni0lil_dataout, wire_ni0i1O_dataout, wire_ni01Oi_dataout, wire_ni1Oil_dataout, wire_ni1l1O_dataout, wire_ni10Oi_dataout, wire_ni11il_dataout, wire_n0OO1O_dataout}),
	.o(wire_n0OiOl_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0OiOl.width_data = 16,
		n0OiOl.width_sel = 4;
	oper_mux   n0OiOO
	( 
	.data({{5{n00l1O}}, wire_niiiiO_dataout, wire_nii00i_dataout, wire_ni0OOl_dataout, wire_ni0liO_dataout, wire_ni0i0i_dataout, wire_ni01Ol_dataout, wire_ni1OiO_dataout, wire_ni1l0i_dataout, wire_ni10Ol_dataout, wire_ni11iO_dataout, wire_n0OO0i_dataout}),
	.o(wire_n0OiOO_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0OiOO.width_data = 16,
		n0OiOO.width_sel = 4;
	oper_mux   n0Ol0i
	( 
	.data({{5{n00l1O}}, wire_niiiOi_dataout, wire_nii0il_dataout, wire_nii11O_dataout, wire_ni0lOi_dataout, wire_ni0iil_dataout, wire_ni001O_dataout, wire_ni1OOi_dataout, wire_ni1lil_dataout, wire_ni1i1O_dataout, wire_ni11Oi_dataout, wire_n0OOil_dataout}),
	.o(wire_n0Ol0i_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Ol0i.width_data = 16,
		n0Ol0i.width_sel = 4;
	oper_mux   n0Ol1i
	( 
	.data({{5{n00l1O}}, wire_niiili_dataout, wire_nii00l_dataout, wire_ni0OOO_dataout, wire_ni0lli_dataout, wire_ni0i0l_dataout, wire_ni01OO_dataout, wire_ni1Oli_dataout, wire_ni1l0l_dataout, wire_ni10OO_dataout, wire_ni11li_dataout, wire_n0OO0l_dataout}),
	.o(wire_n0Ol1i_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Ol1i.width_data = 16,
		n0Ol1i.width_sel = 4;
	oper_mux   n0Ol1l
	( 
	.data({{5{n00l1O}}, wire_niiill_dataout, wire_nii00O_dataout, wire_nii11i_dataout, wire_ni0lll_dataout, wire_ni0i0O_dataout, wire_ni001i_dataout, wire_ni1Oll_dataout, wire_ni1l0O_dataout, wire_ni1i1i_dataout, wire_ni11ll_dataout, wire_n0OO0O_dataout}),
	.o(wire_n0Ol1l_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Ol1l.width_data = 16,
		n0Ol1l.width_sel = 4;
	oper_mux   n0Ol1O
	( 
	.data({{5{n00l1O}}, wire_niiilO_dataout, wire_nii0ii_dataout, wire_nii11l_dataout, wire_ni0llO_dataout, wire_ni0iii_dataout, wire_ni001l_dataout, wire_ni1OlO_dataout, wire_ni1lii_dataout, wire_ni1i1l_dataout, wire_ni11lO_dataout, wire_n0OOii_dataout}),
	.o(wire_n0Ol1O_o),
	.sel({n0l0OO, n0l0Ol, n0l0Oi, n0l0lO}));
	defparam
		n0Ol1O.width_data = 16,
		n0Ol1O.width_sel = 4;
	oper_selector   niOiiO
	( 
	.data({niO0Oi, wire_niOlll_dataout, 1'b0}),
	.o(wire_niOiiO_o),
	.sel({n1Olll, niOi1O, niOi1i}));
	defparam
		niOiiO.width_data = 3,
		niOiiO.width_sel = 3;
	oper_selector   niOill
	( 
	.data({wire_niOllO_dataout, 1'b0, 1'b1}),
	.o(wire_niOill_o),
	.sel({niOiil, n1OllO, niO0OO}));
	defparam
		niOill.width_data = 3,
		niOill.width_sel = 3;
	oper_selector   niOiOi
	( 
	.data({wire_niOlOi_dataout, 1'b0, 1'b1}),
	.o(wire_niOiOi_o),
	.sel({niOiil, n1OlOi, niOi1i}));
	defparam
		niOiOi.width_data = 3,
		niOiOi.width_sel = 3;
	oper_selector   niOiOO
	( 
	.data({wire_niOlOl_dataout, 1'b0, 1'b1}),
	.o(wire_niOiOO_o),
	.sel({niOiil, n1OlOl, niOi1l}));
	defparam
		niOiOO.width_data = 3,
		niOiOO.width_sel = 3;
	oper_selector   niOl0i
	( 
	.data({wire_niOO1i_dataout, 1'b0, 1'b1}),
	.o(wire_niOl0i_o),
	.sel({niOiil, n1OO1i, niOi0i}));
	defparam
		niOl0i.width_data = 3,
		niOl0i.width_sel = 3;
	oper_selector   niOl0O
	( 
	.data({wire_niOO1l_dataout, 1'b1, 1'b0}),
	.o(wire_niOl0O_o),
	.sel({niOiil, niOi0O, n1OO1l}));
	defparam
		niOl0O.width_data = 3,
		niOl0O.width_sel = 3;
	oper_selector   niOl1l
	( 
	.data({wire_niOlOO_dataout, 1'b0, txdata[6]}),
	.o(wire_niOl1l_o),
	.sel({niOiil, n1OlOO, niOi1O}));
	defparam
		niOl1l.width_data = 3,
		niOl1l.width_sel = 3;
	oper_selector   niOliO
	( 
	.data({wire_niOO0i_dataout, 1'b0, (~ txdata[6]), 1'b1}),
	.o(wire_niOliO_o),
	.sel({niOiil, n1OO1O, niOi1O, niO0Ol}));
	defparam
		niOliO.width_data = 4,
		niOliO.width_sel = 4;
	stratixiv_hssi_calibration_block   n00lll
	( 
	.calibrationstatus(),
	.clk(gxb4_cal_clk),
	.enabletestbus(1'b1),
	.nonusertocmu(wire_n00lll_nonusertocmu),
	.powerdn(1'b0),
	.testctrl()
	);
	stratixiv_hssi_clock_divider   n00lli
	( 
	.analogfastrefclkout(wire_n00lli_analogfastrefclkout),
	.analogfastrefclkoutshifted(),
	.analogrefclkout(wire_n00lli_analogrefclkout),
	.analogrefclkoutshifted(),
	.analogrefclkpulse(wire_n00lli_analogrefclkpulse),
	.analogrefclkpulseshifted(),
	.clk0in({wire_n00lil_clk[3:0]}),
	.coreclkout(),
	.dpriodisable(wire_n00liO_dpriodisableout),
	.dprioin({wire_n00liO_cmudividerdprioout[99:0]}),
	.dprioout(wire_n00lli_dprioout),
	.quadreset(wire_n00liO_quadresetout),
	.rateswitchbaseclock(),
	.rateswitchdone(),
	.rateswitchout(),
	.refclkout(),
	.clk1in(),
	.powerdn(),
	.rateswitch(),
	.rateswitchbaseclkin(),
	.rateswitchdonein(),
	.refclkdig(),
	.refclkin(),
	.vcobypassin()
	);
	defparam
		n00lli.channel_num = 0,
		n00lli.divide_by = 5,
		n00lli.divider_type = "CHANNEL_REGULAR",
		n00lli.dprio_config_mode = 6'h0A,
		n00lli.effective_data_rate = "2970 Mbps",
		n00lli.enable_dynamic_divider = "false",
		n00lli.enable_refclk_out = "false",
		n00lli.inclk_select = 0,
		n00lli.logical_channel_address = 0,
		n00lli.lpm_type = "stratixiv_hssi_clock_divider",
		n00lli.pre_divide_by = 1,
		n00lli.select_local_rate_switch_done = "false",
		n00lli.sim_analogfastrefclkout_phase_shift = 0,
		n00lli.sim_analogrefclkout_phase_shift = 0,
		n00lli.sim_coreclkout_phase_shift = 0,
		n00lli.sim_refclkout_phase_shift = 0,
		n00lli.use_coreclk_out_post_divider = "false",
		n00lli.use_refclk_post_divider = "false",
		n00lli.use_vco_bypass = "false";
	stratixiv_hssi_cmu   n00liO
	( 
	.adet({4{1'b0}}),
	.alignstatus(),
	.autospdx4configsel(),
	.autospdx4rateswitchout(),
	.autospdx4spdchg(),
	.clkdivpowerdn(),
	.cmudividerdprioin({{500{1'b0}}, wire_n00lli_dprioout[99:0]}),
	.cmudividerdprioout(wire_n00liO_cmudividerdprioout),
	.cmuplldprioin({{300{1'b0}}, wire_n00lil_dprioout[299:0], {1200{1'b0}}}),
	.cmuplldprioout(wire_n00liO_cmuplldprioout),
	.digitaltestout(),
	.dpclk(sdi_reconfig_clk),
	.dpriodisable(sdi_reconfig_togxb[1]),
	.dpriodisableout(wire_n00liO_dpriodisableout),
	.dprioin(sdi_reconfig_togxb[0]),
	.dprioload(sdi_reconfig_togxb[2]),
	.dpriooe(),
	.dprioout(wire_n00liO_dprioout),
	.enabledeskew(),
	.extra10gout(),
	.fiforesetrd(),
	.lccmutestbus(),
	.nonuserfromcal(wire_n00lll_nonusertocmu),
	.phfifiox4ptrsreset(),
	.pllpowerdn(wire_n00liO_pllpowerdn),
	.pllresetout(wire_n00liO_pllresetout),
	.quadreset(sdi_gxb_powerdown),
	.quadresetout(wire_n00liO_quadresetout),
	.rdalign({4{1'b0}}),
	.rdenablesync(1'b0),
	.recovclk(1'b0),
	.refclkdividerdprioin({2{1'b0}}),
	.refclkdividerdprioout(),
	.rxadcepowerdown(),
	.rxadceresetout(),
	.rxanalogreset({6{1'b0}}),
	.rxanalogresetout(),
	.rxcrupowerdown(),
	.rxcruresetout(),
	.rxctrl({4{1'b0}}),
	.rxctrlout(),
	.rxdatain({32{1'b0}}),
	.rxdataout(),
	.rxdatavalid({4{1'b0}}),
	.rxdigitalreset({4{1'b0}}),
	.rxdigitalresetout(),
	.rxibpowerdown(),
	.rxpcsdprioout(),
	.rxphfifox4byteselout(),
	.rxphfifox4rdenableout(),
	.rxphfifox4wrclkout(),
	.rxphfifox4wrenableout(),
	.rxpmadprioout(),
	.rxrunningdisp({4{1'b0}}),
	.scanout(),
	.syncstatus({4{1'b0}}),
	.testout(),
	.txanalogresetout(wire_n00liO_txanalogresetout),
	.txctrl({4{1'b0}}),
	.txctrlout(wire_n00liO_txctrlout),
	.txdatain({32{1'b0}}),
	.txdataout(wire_n00liO_txdataout),
	.txdetectrxpowerdown(wire_n00liO_txdetectrxpowerdown),
	.txdigitalreset({{3{1'b0}}, wire_n00l0l_dout}),
	.txdigitalresetout(wire_n00liO_txdigitalresetout),
	.txdividerpowerdown(),
	.txobpowerdown(wire_n00liO_txobpowerdown),
	.txpcsdprioin({{450{1'b0}}, wire_n00lii_dprioout[149:0]}),
	.txpcsdprioout(wire_n00liO_txpcsdprioout),
	.txphfifox4byteselout(),
	.txphfifox4rdclkout(),
	.txphfifox4rdenableout(),
	.txphfifox4wrenableout(),
	.txpllreset({2{1'b0}}),
	.txpmadprioin({{1500{1'b0}}, wire_n00l0O_dprioout[299:0]}),
	.txpmadprioout(wire_n00liO_txpmadprioout),
	.extra10gin(),
	.fixedclk(),
	.lccmurtestbussel(),
	.pmacramtest(),
	.rateswitch(),
	.rateswitchdonein(),
	.rxclk(),
	.rxcoreclk(),
	.rxpcsdprioin(),
	.rxphfifordenable(),
	.rxphfiforeset(),
	.rxphfifowrdisable(),
	.rxpmadprioin(),
	.rxpowerdown(),
	.scanclk(),
	.scanin(),
	.scanmode(),
	.scanshift(),
	.testin(),
	.txclk(),
	.txcoreclk(),
	.txphfiforddisable(),
	.txphfiforeset(),
	.txphfifowrenable()
	);
	defparam
		n00liO.auto_spd_deassert_ph_fifo_rst_count = 8,
		n00liO.auto_spd_phystatus_notify_count = 14,
		n00liO.bonded_quad_mode = "none",
		n00liO.devaddr = 1,
		n00liO.in_xaui_mode = "false",
		n00liO.lpm_type = "stratixiv_hssi_cmu",
		n00liO.offset_all_errors_align = "false",
		n00liO.pipe_auto_speed_nego_enable = "false",
		n00liO.pipe_freq_scale_mode = "Frequency",
		n00liO.pma_done_count = 249950,
		n00liO.portaddr = 1,
		n00liO.rx0_auto_spd_self_switch_enable = "false",
		n00liO.rx0_ph_fifo_reg_mode = "false",
		n00liO.tx0_auto_spd_self_switch_enable = "false",
		n00liO.tx0_channel_bonding = "none",
		n00liO.tx0_ph_fifo_reg_mode = "false",
		n00liO.tx0_rd_clk_mux_select = "cmu_clock_divider",
		n00liO.tx0_use_double_data_mode = "true",
		n00liO.tx0_wr_clk_mux_select = "core_clk",
		n00liO.use_deskew_fifo = "false",
		n00liO.vcceh_voltage = "Auto";
	stratixiv_hssi_pll   n00lil
	( 
	.areset(wire_n00liO_pllresetout[0]),
	.clk(wire_n00lil_clk),
	.dataout(),
	.dpriodisable(wire_n00liO_dpriodisableout),
	.dprioin({wire_n00liO_cmuplldprioout[1499:1200]}),
	.dprioout(wire_n00lil_dprioout),
	.freqlocked(),
	.inclk({{9{1'b0}}, tx_serial_refclk}),
	.locked(wire_n00lil_locked),
	.pfdfbclkout(),
	.pfdrefclkout(),
	.powerdown(wire_n00liO_pllpowerdn[0]),
	.vcobypassout(),
	.datain(),
	.earlyeios(),
	.extra10gin(),
	.locktorefclk(),
	.pfdfbclk(),
	.rateswitch()
	);
	defparam
		n00lil.bandwidth_type = "High",
		n00lil.base_data_rate = "2970 Mbps",
		n00lil.channel_num = 4,
		n00lil.dprio_config_mode = 6'h00,
		n00lil.inclk0_input_period = 6734,
		n00lil.input_clock_frequency = "148.50MHz",
		n00lil.logical_tx_pll_number = 0,
		n00lil.lpm_type = "stratixiv_hssi_pll",
		n00lil.m = 10,
		n00lil.n = 1,
		n00lil.pfd_clk_select = 0,
		n00lil.pfd_fb_select = "internal",
		n00lil.pll_type = "CMU",
		n00lil.use_refclk_pin = "false",
		n00lil.vco_post_scale = 1;
	stratixiv_hssi_tx_pcs   n00lii
	( 
	.clkout(wire_n00lii_clkout),
	.coreclk(wire_n00lii_clkout),
	.coreclkout(),
	.ctrlenable({4{1'b0}}),
	.datain({{20{1'b0}}, wire_niiO0O_dataout, wire_niiO0l_dataout, wire_niiO0i_dataout, wire_niiO1O_dataout, wire_niiO1l_dataout, wire_niiO1i_dataout, wire_niilOO_dataout, wire_niilOl_dataout, wire_niilOi_dataout, wire_niillO_dataout, wire_niilll_dataout, wire_niilli_dataout, wire_niiliO_dataout, wire_niilil_dataout, wire_niilii_dataout, wire_niil0O_dataout, wire_niil0l_dataout, wire_niil0i_dataout, wire_niil1O_dataout, wire_niil1l_dataout}),
	.datainfull({44{1'b0}}),
	.dataout(wire_n00lii_dataout),
	.detectrxloop(1'b0),
	.digitalreset(wire_n00liO_txdigitalresetout[0]),
	.dispval({4{1'b0}}),
	.dpriodisable(wire_n00liO_dpriodisableout),
	.dprioin({wire_n00liO_txpcsdprioout[149:0]}),
	.dprioout(wire_n00lii_dprioout),
	.enrevparallellpbk(1'b0),
	.forcedisp({4{1'b0}}),
	.forcedispcompliance(1'b0),
	.forceelecidleout(),
	.grayelecidleinferselout(),
	.hiptxclkout(),
	.invpol(1'b0),
	.iqpphfifobyteselout(),
	.iqpphfifordclkout(),
	.iqpphfifordenableout(),
	.iqpphfifowrenableout(),
	.localrefclk(wire_n00l0O_clockout),
	.parallelfdbkout(),
	.phfifobyteselout(),
	.phfifooverflow(),
	.phfifordclkout(),
	.phfiforddisable(1'b0),
	.phfiforddisableout(),
	.phfifordenableout(),
	.phfiforeset(1'b0),
	.phfiforesetout(),
	.phfifounderflow(),
	.phfifowrenable(1'b1),
	.phfifowrenableout(),
	.pipeenrevparallellpbkout(),
	.pipepowerdownout(),
	.pipepowerstateout(),
	.pipestatetransdone(1'b0),
	.powerdn({2{1'b0}}),
	.quadreset(wire_n00liO_quadresetout),
	.rateswitchout(),
	.rdenablesync(),
	.revparallelfdbk({20{1'b0}}),
	.txdetectrx(wire_n00lii_txdetectrx),
	.xgmctrl(wire_n00liO_txctrlout[0]),
	.xgmctrlenable(),
	.xgmdatain({wire_n00liO_txdataout[7:0]}),
	.xgmdataout(),
	.bitslipboundaryselect(),
	.elecidleinfersel(),
	.forceelecidle(),
	.freezptr(),
	.hipdatain(),
	.hipdetectrxloop(),
	.hipelecidleinfersel(),
	.hipforceelecidle(),
	.hippowerdn(),
	.hiptxdeemph(),
	.hiptxmargin(),
	.iqpphfifoxnbytesel(),
	.iqpphfifoxnrdclk(),
	.iqpphfifoxnrdenable(),
	.iqpphfifoxnwrenable(),
	.phfifobyteserdisable(),
	.phfifoptrsreset(),
	.phfifox4bytesel(),
	.phfifox4rdclk(),
	.phfifox4rdenable(),
	.phfifox4wrenable(),
	.phfifoxnbottombytesel(),
	.phfifoxnbottomrdclk(),
	.phfifoxnbottomrdenable(),
	.phfifoxnbottomwrenable(),
	.phfifoxnbytesel(),
	.phfifoxnptrsreset(),
	.phfifoxnrdclk(),
	.phfifoxnrdenable(),
	.phfifoxntopbytesel(),
	.phfifoxntoprdclk(),
	.phfifoxntoprdenable(),
	.phfifoxntopwrenable(),
	.phfifoxnwrenable(),
	.pipetxdeemph(),
	.pipetxmargin(),
	.pipetxswing(),
	.prbscidenable(),
	.rateswitch(),
	.rateswitchisdone(),
	.rateswitchxndone(),
	.refclk()
	);
	defparam
		n00lii.allow_polarity_inversion = "false",
		n00lii.auto_spd_self_switch_enable = "false",
		n00lii.bitslip_enable = "false",
		n00lii.channel_bonding = "none",
		n00lii.channel_number = 0,
		n00lii.channel_width = 20,
		n00lii.core_clock_0ppm = "false",
		n00lii.datapath_low_latency_mode = "false",
		n00lii.datapath_protocol = "basic",
		n00lii.disable_ph_low_latency_mode = "false",
		n00lii.disparity_mode = "none",
		n00lii.dprio_config_mode = 6'h02,
		n00lii.elec_idle_delay = 6,
		n00lii.enable_bit_reversal = "false",
		n00lii.enable_idle_selection = "false",
		n00lii.enable_reverse_parallel_loopback = "false",
		n00lii.enable_self_test_mode = "false",
		n00lii.enable_symbol_swap = "false",
		n00lii.enc_8b_10b_compatibility_mode = "true",
		n00lii.enc_8b_10b_mode = "none",
		n00lii.force_echar = "false",
		n00lii.force_kchar = "false",
		n00lii.hip_enable = "false",
		n00lii.logical_channel_address = 0,
		n00lii.lpm_type = "stratixiv_hssi_tx_pcs",
		n00lii.ph_fifo_reg_mode = "false",
		n00lii.ph_fifo_xn_mapping0 = "none",
		n00lii.ph_fifo_xn_mapping1 = "none",
		n00lii.ph_fifo_xn_mapping2 = "none",
		n00lii.ph_fifo_xn_select = 1,
		n00lii.pipe_auto_speed_nego_enable = "false",
		n00lii.pipe_freq_scale_mode = "Frequency",
		n00lii.prbs_cid_pattern = "false",
		n00lii.protocol_hint = "basic",
		n00lii.refclk_select = "local",
		n00lii.self_test_mode = "incremental",
		n00lii.use_double_data_mode = "true",
		n00lii.use_serializer_double_data_mode = "false",
		n00lii.wr_clk_mux_select = "core_clk";
	stratixiv_hssi_tx_pma   n00l0O
	( 
	.clockout(wire_n00l0O_clockout),
	.datain({{44{1'b0}}, wire_n00lii_dataout[19:0]}),
	.dataout(wire_n00l0O_dataout),
	.detectrxpowerdown(wire_n00liO_txdetectrxpowerdown[0]),
	.dftout(),
	.dpriodisable(wire_n00liO_dpriodisableout),
	.dprioin({wire_n00liO_txpmadprioout[299:0]}),
	.dprioout(wire_n00l0O_dprioout),
	.fastrefclk0in({wire_n00lli_analogfastrefclkout[1:0]}),
	.fastrefclk1in({2{1'b0}}),
	.fastrefclk2in({2{1'b0}}),
	.fastrefclk4in({2{1'b0}}),
	.forceelecidle(1'b0),
	.powerdn(wire_n00liO_txobpowerdown[0]),
	.refclk0in({wire_n00lli_analogrefclkout[1:0]}),
	.refclk0inpulse(wire_n00lli_analogrefclkpulse),
	.refclk1in({2{1'b0}}),
	.refclk1inpulse(1'b0),
	.refclk2in({2{1'b0}}),
	.refclk2inpulse(1'b0),
	.refclk4in({2{1'b0}}),
	.refclk4inpulse(1'b0),
	.revserialfdbk(1'b0),
	.rxdetecten(wire_n00lii_txdetectrx),
	.rxdetectvalidout(),
	.rxfoundout(),
	.seriallpbkout(),
	.txpmareset(wire_n00liO_txanalogresetout[0]),
	.datainfull(),
	.extra10gin(),
	.fastrefclk3in(),
	.pclk(),
	.refclk3in(),
	.refclk3inpulse(),
	.rxdetectclk()
	);
	defparam
		n00l0O.analog_power = "auto",
		n00l0O.channel_number = 0,
		n00l0O.channel_type = "auto",
		n00l0O.clkin_select = 0,
		n00l0O.clkmux_delay = "false",
		n00l0O.common_mode = "0.65V",
		n00l0O.dprio_config_mode = 6'h02,
		n00l0O.enable_reverse_serial_loopback = "false",
		n00l0O.logical_channel_address = 0,
		n00l0O.logical_protocol_hint_0 = "basic",
		n00l0O.low_speed_test_select = 0,
		n00l0O.lpm_type = "stratixiv_hssi_tx_pma",
		n00l0O.physical_clkin0_mapping = "x1",
		n00l0O.preemp_pretap = 0,
		n00l0O.preemp_pretap_inv = "false",
		n00l0O.preemp_tap_1 = 0,
		n00l0O.preemp_tap_2 = 0,
		n00l0O.preemp_tap_2_inv = "false",
		n00l0O.protocol_hint = "basic",
		n00l0O.rx_detect = 0,
		n00l0O.serialization_factor = 10,
		n00l0O.slew_rate = "off",
		n00l0O.termination = "OCT 100 Ohms",
		n00l0O.use_external_termination = "false",
		n00l0O.use_pma_direct = "false",
		n00l0O.use_ser_double_data_mode = "false",
		n00l0O.vod_selection = 4;
	assign
		gxb_tx_clkout = {wire_n00lii_clkout},
		n0000O = ((n000li ^ ni11i) ^ (~ (n000ii16 ^ n000ii15))),
		n0001O = (((wire_nl1Oi_dataout ^ n0OlO) ^ ni11i) ^ (~ (n0000i18 ^ n0000i17))),
		n000iO = ((wire_nl1lO_dataout ^ n0OOi) ^ ni11l),
		n000li = ((n00i1i ^ ni11l) ^ (~ (n000ll14 ^ n000ll13))),
		n000Oi = (((wire_nl1ll_dataout ^ n0OOl) ^ ni11O) ^ (~ (n000Ol12 ^ n000Ol11))),
		n0010l = (n001iO ^ n0OOi),
		n0010O = (((wire_nl1OO_dataout ^ n00i1l) ^ n0OOl) ^ (~ (n001ii26 ^ n001ii25))),
		n0011i = (n0010l ^ n0OlO),
		n0011l = (((wire_nl01i_dataout ^ n000Oi) ^ n0OOi) ^ (~ (n0011O28 ^ n0011O27))),
		n001iO = ((n001OO ^ n0OOl) ^ (~ (n001li24 ^ n001li23))),
		n001lO = (((wire_nl1Ol_dataout ^ n0Oll) ^ (~ (n001Oi22 ^ n001Oi21))) ^ n0OOO),
		n001OO = ((n0000O ^ n0OOO) ^ (~ (n0001i20 ^ n0001i19))),
		n00i0l = ((ni10i ^ n0Oli) ^ (~ (n00i0O8 ^ n00i0O7))),
		n00i1i = (n00i0l ^ ni11O),
		n00i1l = (((wire_nl1li_dataout ^ n0OOO) ^ (~ (n00i1O10 ^ n00i1O9))) ^ ni10i),
		n00iil = (enable_crc[0] & wire_nlOOi_dataout),
		n00iiO = (enable_crc[0] & wire_nlOOi_dataout),
		n00ili = ((enable_crc[0] & wire_nlOOi_dataout) & (n00ill6 ^ n00ill5)),
		n00iOi = (enable_crc[0] & wire_nlOOi_dataout),
		n00l1i = 1'b1,
		n00l1O = 1'b0,
		n0100i = (n00iiO & niO0OO),
		n0100l = (wire_niOOOl_dataout ^ nllO1i),
		n0100O = (wire_niOOOi_dataout ^ nlllOO),
		n0101i = (wire_nl11Oi_dataout ^ nli1ll),
		n0101l = (wire_nl11lO_dataout ^ nli1li),
		n0101O = (n00iiO & niO0Ol),
		n010ii = (wire_niOOlO_dataout ^ nlllOl),
		n010il = (wire_niOOll_dataout ^ nlllOi),
		n010iO = (wire_niOOli_dataout ^ nllllO),
		n010li = (wire_niOOiO_dataout ^ nlllll),
		n010ll = (wire_niOOil_dataout ^ nlllli),
		n010lO = (wire_niOOii_dataout ^ nllliO),
		n010Oi = (wire_niOO0O_dataout ^ nlllil),
		n010Ol = (wire_niOO0l_dataout ^ nlllii),
		n010OO = (n00iil & niO0Ol),
		n0110i = (wire_niOO0l_dataout ^ nl1iOl),
		n0110O = (n00ili & niO0Ol),
		n0111i = (wire_niOOil_dataout ^ nl1l1l),
		n0111l = (wire_niOOii_dataout ^ nl1l1i),
		n0111O = (wire_niOO0O_dataout ^ nl1iOO),
		n011ii = (n00ili & niO0OO),
		n011il = (wire_nl100O_dataout ^ nli00i),
		n011iO = (wire_nl100l_dataout ^ nli01O),
		n011li = (wire_nl100i_dataout ^ nli01l),
		n011ll = (wire_nl101O_dataout ^ nli01i),
		n011lO = (wire_nl101l_dataout ^ nli1OO),
		n011Oi = (wire_nl101i_dataout ^ nli1Ol),
		n011Ol = (wire_nl11OO_dataout ^ nli1Oi),
		n011OO = (wire_nl11Ol_dataout ^ nli1lO),
		n01i0i = (wire_nl100i_dataout ^ n10li),
		n01i0l = (wire_nl101O_dataout ^ n10iO),
		n01i0O = (wire_nl101l_dataout ^ n10il),
		n01i1i = (n00iil & niO0OO),
		n01i1l = (wire_nl100O_dataout ^ n10lO),
		n01i1O = (wire_nl100l_dataout ^ n10ll),
		n01iii = (wire_nl101i_dataout ^ n10ii),
		n01iil = (wire_nl11OO_dataout ^ n100O),
		n01iiO = (wire_nl11Ol_dataout ^ n100l),
		n01ili = (wire_nl11Oi_dataout ^ n100i),
		n01ill = (wire_nl11lO_dataout ^ n101O),
		n01ilO = (n01lOl ^ n01iOi),
		n01iOi = (n01O0l ^ n01iOl),
		n01iOl = (n01OiO ^ n01iOO),
		n01iOO = (n01OOi ^ n01l1i),
		n01l0i = (n001lO ^ (wire_nl0il_dataout ^ n01OiO)),
		n01l0l = (n001lO ^ n01lii),
		n01l0O = (n0001O ^ (wire_nl0ii_dataout ^ n01OOi)),
		n01l1i = (n0011l ^ n01l1O),
		n01l1l = (n0010O ^ (wire_nl0iO_dataout ^ n01O0l)),
		n01l1O = (n0010O ^ n01l0l),
		n01lii = ((n0001O ^ n01lll) ^ (~ (n01lil42 ^ n01lil41))),
		n01lli = (n000iO ^ (wire_nl00O_dataout ^ n0011l)),
		n01lll = ((n000iO ^ n01O0i) ^ (~ (n01llO40 ^ n01llO39))),
		n01lOl = ((n000Oi ^ ((wire_nl00l_dataout ^ n0010O) ^ (~ (n01O1l36 ^ n01O1l35)))) ^ (~ (n01lOO38 ^ n01lOO37))),
		n01O0i = (n000Oi ^ n01Oil),
		n01O0l = ((n00i1l ^ (wire_nl00i_dataout ^ n001lO)) ^ (~ (n01O0O34 ^ n01O0O33))),
		n01Oil = (n00i1l ^ n01Oli),
		n01OiO = ((wire_nl01O_dataout ^ n0001O) ^ n0Oll),
		n01Oli = ((n0011i ^ n0Oll) ^ (~ (n01Oll32 ^ n01Oll31))),
		n01OOi = (((wire_nl01l_dataout ^ n000iO) ^ n0OlO) ^ (~ (n01OOl30 ^ n01OOl29))),
		n1Olil = (((tx_std[1] & wire_niliil_dataout) | (tx_std[0] & ((((~ nil01O) & (~ nil01l)) & (~ nil01i)) & nil1OO))) | ((~ tx_std[0]) & (((nil01O & (~ nil01l)) & nil01i) & (~ nil1OO)))),
		n1Olll = (((((niOiil | niOi0O) | niOi0i) | niOi1l) | niO0OO) | niO0Ol),
		n1OllO = (((((niOi0O | niOi0i) | niOi1O) | niOi1l) | niOi1i) | niO0Ol),
		n1OlOi = (((((niOi0O | niOi0i) | niOi1O) | niOi1l) | niO0OO) | niO0Ol),
		n1OlOl = (((((niOi0O | niOi0i) | niOi1O) | niOi1i) | niO0OO) | niO0Ol),
		n1OlOO = (((((niOi0O | niOi0i) | niOi1l) | niOi1i) | niO0OO) | niO0Ol),
		n1OO0i = (enable_ln[0] & niOi1i),
		n1OO0l = (enable_ln[0] & niOi1l),
		n1OO0O = (enable_ln[0] & niOi1i),
		n1OO1i = (((((niOi0O | niOi1O) | niOi1l) | niOi1i) | niO0OO) | niO0Ol),
		n1OO1l = (((((niOi0i | niOi1O) | niOi1l) | niOi1i) | niO0OO) | niO0Ol),
		n1OO1O = ((((niOi0O | niOi0i) | niOi1l) | niOi1i) | niO0OO),
		n1OOii = (enable_ln[0] & niOi1l),
		n1OOil = (n00iOi & niO0Ol),
		n1OOiO = (n00iOi & niO0OO),
		n1OOli = (wire_niOOOl_dataout ^ nl1lil),
		n1OOll = (wire_niOOOi_dataout ^ nl1lii),
		n1OOlO = (wire_niOOlO_dataout ^ nl1l0O),
		n1OOOi = (wire_niOOll_dataout ^ nl1l0l),
		n1OOOl = (wire_niOOli_dataout ^ nl1l0i),
		n1OOOO = (wire_niOOiO_dataout ^ nl1l1O),
		sdi_reconfig_fromgxb = {{16{1'b0}}, wire_n00liO_dprioout},
		sdi_tx = {wire_n00l0O_dataout},
		tx_status = {(~ wire_n00lil_locked)};
endmodule //tr_tx
//synopsys translate_on
//VALID FILE
