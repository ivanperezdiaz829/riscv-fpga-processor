# (C) 2001-2013 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License Subscription 
# Agreement, Altera MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


####################################################################################
#
# SerialLite III Streaming Source Timing Constraints
#
####################################################################################


#
# Clock constraints
#

# The following three clocks(xcvr_pll_ref_clk, phy_mgmt_clk, reconfig_to_xcvr[0]) should be 
# adjusted to the frequency used for the design 

# Reference clock to transceivers.
create_clock -period "487.609682 MHz" -name xcvr_pll_ref_clk [get_ports xcvr_pll_ref_clk]

# Management clock driving the Interlaken PHY IP management module.
create_clock -period "100 MHz" -name phy_mgmt_clk [get_ports phy_mgmt_clk]

# Reconfiguration Clock 
create_clock -period "100 MHz" -name reconfig_to_xcvr[0] [get_ports reconfig_to_xcvr[0]]

# Clocks generated by the PLL.
derive_pll_clocks 
derive_clock_uncertainty


#
# Timing exceptions
#

set_clock_groups -asynchronous -group [get_clocks *clk90b] -group [get_clocks *sink_clock_gen|altera_pll_i|general[0].gpll~PLL_OUTPUT_COUNTER|divclk]

# False paths for crc32 synchronizer
set_false_path -from {*inst_sv_pcs_ch|sv_hssi_10g_rx_pcs_rbc:inst_sv_hssi_10g_rx_pcs|wys~SYNC_DATA_REG12} -to {*sink_adaptation_module_lane_logic:lane_logic_inst*.lane_logic|din1_oclk}

# SCS Applicable only - False path to user clock reset synchronizer - User needs to comment it out in advanced clocking scheme
set_false_path -from [get_keepers *sink_clock_gen:sink_clock_gen|presync_user_clock_reset] -to [get_keepers *sink_clock_gen:sink_clock_gen|dp_sync:user_clock_reset_sync|dp_sync_regstage:dp_sync_stage_2|o[0]]

# SCS Applicable only - False path from user clock reset synchronizer - User needs to comment it out in advanced clocking scheme
set_false_path -from [get_keepers *sink_clock_gen:sink_clock_gen|dp_sync:user_clock_reset_sync|dp_sync_regstage:dp_sync_stage_2|o[0]]


# False path to synchronizer inputs
set_false_path -to [get_cells -compatibility *dp_sync_stage_1|o[*]]
set_false_path -to {*inst_reset_sync|resync_chains[0].sync_r*}
set_false_path -to {*inst_reconfig_reset_sync|resync_chains[0].sync_r*}

# Only applicable in ACS - false path for reset synchronizer
set_false_path -from {*altera_xcvr_reset_control:reset_controller|alt_xcvr_reset_counter:g_rx.g_rx[0].g_rx.counter_rx_ready|r_reset} -to {*interface_clk_reset_sync|dp_sync_regstage:dp_sync_stage_2*}

# Only applicable in SCS - False paths for reset synchronizer (from user clock to core clock) 
set_false_path -from {*sink_clock_gen|dp_sync:user_clock_reset_sync|dp_sync_regstage:dp_sync_stage*} -to {*sink_adaptation_module_lane_logic:lane_logic_inst*.lane_logic|dp_sync:iclk_reset_sync|dp_sync_regstage*}
set_false_path -from {*sink_adaptation_module_lane_logic:lane_logic_inst*.lane_logic|dp_sync:iclk_reset_sync|dp_sync_regstage*}

#False path from reset synchronizer in ACS only
set_false_path -from [get_keepers *interface_clk_reset_sync|dp_sync_regstage:dp_sync_stage_2|o[0]]
