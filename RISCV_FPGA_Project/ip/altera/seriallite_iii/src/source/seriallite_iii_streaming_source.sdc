# (C) 2001-2013 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License Subscription 
# Agreement, Altera MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


####################################################################################
#
# SerialLite III Streaming Source Timing Constraints
#
####################################################################################


#
# Clock constraints
#

# The following three clocks(xcvr_pll_ref_clk, phy_mgmt_clk, reconfig_to_xcvr[0]) should be 
# adjusted to the frequency used for the design 

# Reference clock to transceivers.
create_clock -period "487.609682 MHz" -name xcvr_pll_ref_clk [get_ports xcvr_pll_ref_clk]

# Management clock driving the Interlaken PHY IP management module.
create_clock -period "100 MHz" -name phy_mgmt_clk [get_ports phy_mgmt_clk]

# Reconfiguration Clock 
create_clock -period "100 MHz" -name reconfig_to_xcvr[0] [get_ports reconfig_to_xcvr[0]]

#Uncomment the following line for Advance Clocking Mode for Streaming Seriallite Source
#create_clock -period "139.025477 MHz" -name user_clock [get_ports user_clock]


# Clocks generated by the PLL.
derive_pll_clocks 
derive_clock_uncertainty


#
# Timing exceptions
#


# Only applicable in ACS - false path in source ppm absorption fifo
set_false_path -from {*source_absorber:source_ppm_absorption|dcfifo:lane_fifo|dcfifo*rdaclr|dffe*} -to {*source_absorber:source_ppm_absorption|dcfifo*}
set_false_path -from [get_clocks {user_clock*}] -through {*source_ppm_absorption*} -to [get_clocks {*inst_sv_hssi_10g_tx_pcs|wys|txclkout}]
set_false_path -from [get_clocks {user_clock*}] -through {*source_ppm_absorption*} -to [get_clocks {*tx_pma_ch.tx_cgb|pclk*}]


set_false_path -from [get_cells -compatibility_mode *tx_from_fifo] -to [get_registers *hssi_10g_tx_pcs|wys~SYNC_DATA_REG1]  
                                                                                                                                                                              
set_false_path -to [get_keepers *stdsync_txempty|dreg[0]]

set_false_path -from [get_keepers *alt_xcvr_reset_counter:g_tx.g_tx[0].g_tx.counter_tx_ready|r_reset] -to [get_keepers *alt_xcvr_resync:inst_reconfig_reset_sync|resync_chains[0].sync_r[1]]

# False path from reset state machine in source clock generator to async reset on user_clock reset synchronizer - Applicable in SCS only
set_false_path -from [get_keepers *source_clock_gen:source_clock_gen|presync_user_clock_reset] -to [get_keepers *source_clock_gen:source_clock_gen|dp_sync:user_clock_reset_sync|dp_sync_regstage:dp_sync_stage_2|o[0]]
set_false_path -from [get_keepers *source_clock_gen:source_clock_gen|dp_sync:user_clock_reset_sync|dp_sync_regstage:dp_sync_stage_2|o[0]]

# False paths for altera reset controller
set_false_path -to [get_keepers *stdsync_txpempty|dreg[0]]

# False path to synchronizer inputs
set_false_path -to [get_cells -compatibility *dp_sync_stage_1|o[*]]
set_false_path -to {*inst_reset_sync|resync_chains[0].sync_r*}
set_false_path -to {*inst_reconfig_reset_sync|resync_chains[0].sync_r*}
