# (C) 2001-2013 Altera Corporation. All rights reserved.
# Your use of Altera Corporation's design tools, logic functions and other 
# software and tools, and its AMPP partner logic functions, and any output 
# files any of the foregoing (including device programming or simulation 
# files), and any associated documentation or information are expressly subject 
# to the terms and conditions of the Altera Program License Subscription 
# Agreement, Altera MegaCore Function License Agreement, or other applicable 
# license agreement, including, without limitation, that your use is for the 
# sole purpose of programming logic devices manufactured by Altera and sold by 
# Altera or its authorized distributors.  Please refer to the applicable 
# agreement for further details.


# TCL File Generated by Component Editor __VERSION__
# Fri Oct 09 14:05:33 BST 2009
# DO NOT MODIFY


# +-----------------------------------
# | 
# | altera_usb_debug_master "altera_usb_debug_master" v1.0
# | 
# +-----------------------------------

# +-----------------------------------
# | request TCL package from ACDS 11.0
# | 
package require -exact sopc 11.0
# | 
# +-----------------------------------

# +-----------------------------------
# | module altera_usb_debug_master
# | 
set_module_property NAME altera_usb_debug_master
set_module_property VERSION 13.1
set_module_property AUTHOR "Altera Corporation"
set_module_property INTERNAL false
set_module_property GROUP "Verification/Debug & Performance"
set_module_property DISPLAY_NAME "USB Debug Master"
set_module_property INSTANTIATE_IN_SYSTEM_MODULE true
set_module_property EDITABLE false
set_module_property REPORT_TO_TALKBACK true
set_module_property compose_callback compose
# | 
# +-----------------------------------

# +-----------------------------------
# | parameters
# |
#add_parameter DEVICE_FAMILY STRING "StratixIV"
#set_parameter_property DEVICE_FAMILY VISIBLE false
#set_parameter_property DEVICE_FAMILY SYSTEM_INFO DEVICE_FAMILY

add_parameter DUAL_CLOCK INTEGER 1
set_parameter_property DUAL_CLOCK DISPLAY_NAME "Dual Clocks"
set_parameter_property DUAL_CLOCK ALLOWED_RANGES {"0:No" "1:Yes"}

add_parameter FIFO_DEPTH INTEGER 256
set_parameter_property FIFO_DEPTH DISPLAY_NAME "FIFO Depth"
set_parameter_property FIFO_DEPTH ALLOWED_RANGES {"4:4" "8:8" "16:16" "32:32" "64:64" "128:128" "256:256" "512:512" "1024:1K (1xM9K)" "2048:2K"}
# |
# +-----------------------------------

# +-----------------------------------
# | display items
# | 
# | 
# +-----------------------------------

# +-----------------------------------
# | connection point usb_if
# |
add_interface usb_if conduit end
set_interface_assignment usb_if qsys.ui.export usb
# | 
# +-----------------------------------

# +-----------------------------------
# | connection points
# | 
add_interface debug_clk_in clock end
set_interface_property debug_clk_in enabled false
# |
# +-----------------------------------

# +-----------------------------------
# | connection points
# | 
add_interface debug_clk clock start
add_interface debug_reset reset start
# |
# +-----------------------------------

# +-----------------------------------
# | connection point master
# | 
add_interface master avalon start
set_interface_assignment master debug.providesServices master
set_interface_assignment master debug.hostConnection {type usb purpose 1}
# | 
# +-----------------------------------

# +-----------------------------------
# | child instances
# | 
add_instance fifos altera_usb_debug_fifos
set_instance_parameter_value fifos NUM_MGMT_CHANNELBITS 0
set_instance_parameter_value fifos PURPOSE 1
set_interface_property usb_if export_of fifos.usb_if

set clk fifos.av_clk_out
set reset fifos.av_reset_out

add_instance clock altera_clock_bridge
add_connection fifos.av_clk_out clock.in_clk
set_interface_property debug_clk export_of clock.out_clk

add_instance reset altera_reset_bridge
add_connection fifos.av_reset_out reset.in_reset
add_connection $clk reset.clk
set_interface_property debug_reset export_of reset.out_reset

add_instance b2p altera_avalon_st_bytes_to_packets
set_instance_parameter_value b2p ENCODING 1	
set_instance_parameter_value b2p CHANNEL_WIDTH 0	
add_connection $clk b2p.clk
add_connection $reset b2p.clk_reset
add_connection fifos.avst_src b2p.in_bytes_stream

add_instance p2b altera_avalon_st_packets_to_bytes
set_instance_parameter_value p2b ENCODING 1	
set_instance_parameter_value p2b CHANNEL_WIDTH 0
add_connection $clk p2b.clk
add_connection $reset p2b.clk_reset
add_connection p2b.out_bytes_stream fifos.avst_sink

add_instance master altera_avalon_packets_to_master
add_connection $clk master.clk
add_connection $reset master.clk_reset
add_connection b2p.out_packets_stream master.in_stream
add_connection master.out_stream p2b.in_packets_stream
set_interface_property master export_of master.avalon_master

# | 
# +-----------------------------------

proc compose {} {
	set dual_clock [get_parameter_value DUAL_CLOCK]
	set fifo_depth [get_parameter_value FIFO_DEPTH]

	# Connect clock input if necessary
    if {$dual_clock} {
		set_interface_property debug_clk_in enabled true
    	set_interface_property debug_clk_in export_of fifos.av_clk
	}

	set_instance_parameter_value fifos USE_DCFIFO $dual_clock
	set_instance_parameter_value fifos FIFO_DEPTH $fifo_depth
}
